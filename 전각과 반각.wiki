[[목차]]

== 개요 ==
타이포그래피 등에서는 전각과 반각이라는 개념이 존재한다. 전각은 정사각형 형태, 반각은 전각의 가로폭을 반으로 줄인 직사각형 형태이다. [[한자]]나 [[히라가나]], [[한글]]은 언제나 전각 문자에 속한다.

== 문자 인코딩과 전각·반각 ==
[[유니코드]]가 등장하기 전의 멀티바이트 문자 인코딩에서는 일반적으로 반각 문자는 1바이트, 전각 문자는 2바이트로 처리되었으나, 유니코드가 등장한 현재는 반드시 그렇다고는 할 수 없다. 일례로 유니코드 인코딩 중 하나인 UTF-8에서는 반각 1은 1바이트로 처리되나 전각 １은 2바이트가 아니라 3바이트로 처리되며, UTF-16에서는 반각 1과 전각 １ 모두 2바이트로 처리된다.

[[아스키 코드]]에 속하는 문자는 반각 형태와 전각 형태를 모두 가지고 있다.
 * 반각: 123abc?! / 전각: １２３ａｂｃ？！

다만 반각 [[숫자]](123)는 숫자로 인식되나, 전각 숫자(１２３)는 숫자가 아니라 일반 문자로 인식되는 경우가 많다. 따라서 [[수]]를 입력하고자 할 때는 반드시 반각으로 입력해야 한다. 또한 영어권에서는 반각 아스키 문자만 쓰므로, 전각 아스키 문자로 영어 문서를 작성하면 욕 먹기 딱 좋다. 예를 들어 The quick brown fox jumps over the lazy dog.를 Ｔｈｅ　ｑｕｉｃｋ　ｂｒｏｗｎ　ｆｏｘ　ｊｕｍｐｓ　ｏｖｅｒ　ｔｈｅ　ｌａｚｙ　ｄｏｇ．와 같이 쓰면 욕 엄청 먹는다.

그리고 문자 인코딩에 따라 같은 문자라도 전각/반각 여부가 달라지기도 한다. 확장 로마자(Æ, ø 등)나 [[그리스 문자]], [[키릴 문자]]의 경우 동아시아권 문자 인코딩에서는 2바이트 영역에 속해 전각으로 표시되나, 서양권 문자 인코딩에서는 반각으로 표시된다. 실제로 확장 로마자, 그리스 문자, 키릴 문자의 경우 반각으로 표현하는 것이 가독성을 높여 주며, 전각으로 표현하면 글자 간격이 너무 벌어져서 가독성이 상당히 떨어진다는 문제가 있다.

일부 아스키 코드 외 문자도 전각 문자가 따로 유니코드에 존재하며, 그 문자들은 다음과 같다. 아래 문자들은 반각이 국제적으로 더 잘 통용되므로, 반각을 쓰는 것이 좋다.
 * 반각: ¢£¥¦¬¯₩ / 전각: ￠￡￥￤￢￣￦

== 언어별 전각 아스키 문자 사용 실태 ==
이 섹션에서는 아스키 코드에 속하는 문자만을 주로 다룬다. 위에서도 서술했듯 한글이나 한자, 히라가나 등은 언제나 전각 문자이므로 따로 다루지 않는다.

=== 한국어 ===
[[한국어]]에서 아스키 문자는 99% 반각 문자로 표기한다. 즉 대부분 123abc?!만 쓰지, １２３ａｂｃ？！는 손에 꼽을 정도로 보기 어렵다.[* 다만 한국 뱅킹 시스템에서는 주소에 포함되는 숫자나 로마자를 전각으로 처리하기도 한다.] IME의 alt + = 키로 전각·반각 전환을 할 수는 있으나, 이것을 모르는 사람들이 더 많을 정도이다. 입력기의 이 --빌어먹을-- 단축키 때문에 [[Microsoft Excel]]에서 합산 단축키를 쓸 수 없게 된다. --쓰레기--

다만 유니코드에 반각 한글 낱자도 존재하기는 하는데(예: ﾾￂﾤﾡￚﾩ), 어쩌다가 반각 한글 낱자가 유니코드에 들어가게 됐는지는 아는 사람이 [[추가바람]].

=== 일본어 ===
[[일본어]]에서는 전각 아스키 문자와 반각 아스키 문자가 혼용된다.
 * 전각으로 쓰는 것이 일반적인 문자: ？, ！, （）, ［］, ｛｝, ～ 등
 * 반각으로 쓰는 것이 일반적인 문자: 숫자(123), 로마자(ABCabc), 기타 아스키 기호(@, %, +, - 등)
숫자나 로마자는 대부분 반각으로 쓰나, 기타 아스키 기호의 경우 이 구분은 절대적이라고 할 수는 없으며, 같은 문자라도 전각 형태와 반각 형태가 혼용되는 경우도 있다. 전각·반각에 주의하지 않는 사람은 （abc)처럼 전각 괄호로 열고 반각 괄호로 닫기도 한다(…). [http://shinobu.tumblr.com/post/33352730473/web 이 글](일본어)에서는 웹에서 숫자나 로마자는 반각 문자로 쓰는 것이 상식이라고 하고 있으며, 왜 웹에서 전각 문자보다 반각 문자를 쓰는지에 대해서 잘 다루고 있다. 실제로 전각 숫자·로마자를 쓰면 까이는 경우가 종종 보인다(…).
일본어 위키백과는 로마자와 숫자는 언제나 반각으로(ABCabc123), 가타카나는 언제나 전각으로(アイウエオ), ?, ! 등은 앞의 문자에 따라 전각으로 할지 반각으로 할지를 정하고 있다(예: あれ？ Are?).

다만 웹에서도 신문 기사 등에서는 숫자와 로마자가 전각(１２３ａｂｃ)으로 쓰일 때도 있는데, 이는 신문사에서 기사를 세로쓰기로 출력·인쇄할 때(자세한 것은 아래 '세로쓰기' 섹션 참고)[* 일본에서는 지금도 신문이 대부분 세로쓰기를 한다. 한국에서 과거 세로쓰기를 하던 신문들이 모두 가로쓰기로 갈아탄 것과는 대조적이다.] 전각 문자를 쓴 것을 반각으로 고치지 않고 그대로 복사 + 붙여 넣기를 해서 웹에 올리기 때문이다. 심지어 반드시 반각으로 써야 하는 URL조차 전각으로 써 버리는 경우가 있다(…). http://rigvedawiki.net/ 이라고 써야 할 것을 ｈｔｔｐ：／／ｒｉｇｖｅｄａｗｉｋｉ．ｎｅｔ／으로 써 버리기도 하는데(…), 당연한 말이지만 후자는 연결이 될 리가 없다.

특히 프로그래머처럼 전각/반각에 민감한 경우, 전각 로마자·숫자를 혐오하는 경향이 있다(…). 심지어 [https://chrome.google.com/webstore/detail/goodbye-zenkaku-%E3%81%95%E3%82%88%E3%81%AA%E3%82%89%E5%85%A8%E8%A7%92%E8%8B%B1%E6%95%B0/mjdgifdhhligineaimmgbikndpifdgml 이런] 확장 기능까지 있을 정도다.

숫자와 로마자를 반드시 전각으로 써야 하는 경우는 주소 입력 등이 있다. 주소를 입력 받는 폼에 숫자와 로마자를 반각으로 집어넣으면 오류가 나는 경우가 대부분인데, 왜 전각으로 입력해야 하는지에 대한 설은 여럿 있으나 정설이라고 할 만한 것은 없다. [http://nplll.com/archives/2009/07/post_2337.php #](일본어)

이러한 전각 문자와 반각 문자의 혼용은 일본어 처리를 더 복잡하게 만들기도 한다. [http://blog.yahoo.com/_THSNFX5FD53SMVI3XFFU6QSEFA/articles/37684/index #]

일본 웹사이트 회원 가입 시에는 이름과 후리가나를 입력하도록 되어 있는데, 후리가나를 전각으로 입력해야 하는 곳도 있고 반각 가타카나로 입력해야 하는 곳도 있다. 이 때문에 전각과 반각에 익숙하지 않은 한국인들은 회원 가입 시에 고생하기도 한다.

또한 일본의 전각 특수 문자 중에서는 합자(組み文字)라는 것도 있는데, 각종 계량 단위를 나타내는 가타카나 문자열을 정사각형에 우겨넣은 것이다(ex. 미터: メートル → ㍍、톤: トン → ㌧, 그램: グラム → ㌘). 이런 글자들은 종이 신문에서 간혹 볼 수 있다(글자 수를 줄이기 위해서).

==== 반각 가타카나 ====
[[가타카나]]는 아스키 문자와 마찬가지로 전각과 반각이 모두 존재한다. 반각으로 쓸 경우 탁점(゛)과 반탁점(゜)은 별도의 문자로 분리된다. 가타카나는 일반적으로 전각으로 쓰이나, 간혹 반각으로 쓰이는 경우도 있다.

전각: [wiki:"전파" デンパ] / 반각: ﾃﾞﾝﾊﾟ

일본어 문자 중에서 가타카나만 반각 형태가 따로 존재하는 데에는 역사적인 이유가 있다. 컴퓨터가 막 등장했던 초창기(1960년대)에는 컴퓨터는 1바이트 문자 256자밖에 다룰 수 없었고, 일본에서는 이 256문자로 일본어를 어떻게 표현할지 궁리하다가 1969년(!)에 JIS X 0201(당시 JIS C 6220)이라는 아스키 문자[* 정확히는 아스키 문자에서 0x5C의 \(백슬래시)를 ¥(엔 기호)로, 0x7E의 ~(물결표)를 ‾(오버라인)으로 바꾸었다. [[Microsoft Windows]]에 내장된 기본 일본어 글꼴의 \(백슬래시) 자리에 엔 기호가 배당돼 있는 것은 이것의 잔재이다.]와 가타카나를 배당한 1바이트 문자 집합을 제정했다. JIS X 0201 자체에는 가타카나의 폭에 대해서는 규정되어 있지 않지만, 1바이트 문자 집합에 속하는 이 가타카나 문자들은 반각으로 표현되는 것이 일반적이다 보니 반각 가타카나로 정착되었다. 실제로 당시 문자를 지원하는 일본 쪽 전자 기기(계산기 등[* 특성상 일본어의 한자와 히라가나까지 표기해야 했던 전자사전 정도만 예외])에서 출력되는 일본어 문자는 일정한 픽셀 칸 안에 표시되는 가타카나뿐이었다.[* 당시 나왔던 [http://serviceapi.nmv.naver.com/flash/convertIframeTag.nhn?vid=E72F50860BCEDB295FCC7E48F7778B839E76&outKey=V12748960b0bfa0a0634cb9822d7ae024021c54d34df2deaaa461b9822d7ae024021c&width=720&height=438 일본 소형 계산기/전자사전류의 CM이다.] 몇몇 기기에서는 가타카나가 아담한 픽셀 칸 안에 표시되는 것을 볼 수 있을 것이다.]

왜 JIS X 0201에 가타카나만 배당했는지에 대해서는 정설이라고 할 만한 것은 없으나, 아무래도 가타카나가 히라가나보다는 덜 복잡하고 직선적인 문자 구조라 반각이라는 좁은 공간에 표현하는 것이 유리했기 때문이라는 [http://blog.daum.net/aswip/8429336 설]이 있다.

일본 쪽 넷 언더그라운드계에서는 일종의 네타성 경향을 띠는 대사나 '''효과음''' 등을 일부러 반각 가타카나로 처리하는 경향이 있고[* 예: [wiki:"북두의 권 -심판의 쌍창성 권호열전-" 세기말 격투게임]의 일부 용어 및 '''모든 대사와 [wiki:"죠인죠인토키이" 효과음]''', [wiki:"가면 라이더 블레이드" 온두루 8세의 모험]에 나오는 [[온두루어]], [[유루유리]]의 [[아카자 아카리]] 애칭 겸 효과음 등], ~~[[혐한초딩]]들이 자기네 이야기하는 거 번역기로 돌려지는 걸 막기 위하거나~~, 암호처럼 이야기를 하는 것을 표현할 때 등의 용도로도 반각 가타카나가 쓰인다.

== 전각 아스키 문자를 사용하는 이유 ==
=== 세로쓰기 ===
전각 아스키 문자가 존재하는 가장 큰 이유는 [[세로쓰기]] 때문이다. 세로쓰기 시에는 반각 문자가 90도 회전된 형태로 출력되는데, 이런 문자를 90도 회전시키지 않고 똑바로 세우고 싶을 때는 전각 문자를 쓰면 된다. 아래 예를 보면 알 수 있을 것이다.

attachment:/halfwidth-and-fullwidth.png

간혹 한국어로 ~~대패질된~~ 식자된 만화에서, 세로쓰기로 적힌 부분에서 한글은 멀쩡한데 문장 부호만 90도 돌아가 있는 것도 문장 부호를 반각으로 썼기 때문이다([http://gall.dcinside.com/board/view/?id=fantasy_new&no=250902 실제 사례][* 다만, 엄밀히 말해서 세로쓰기에는 ,(반점)과 .(온점) 대신 、(모점)과 。(고리점)을 써야 한다.]). 문장 부호를 전각으로 쓰면 90도 돌아가지 않는다.

실제 사례의 문장을 예로 들자면 다음과 같다.

attachment:/injin-vertical.png

①은 가로쓰기의 반각 문장 부호를 그대로 사용한 것, ②는 가로쓰기의 문장 부호를 전각 문자로 바꾸기만 한 것, ③은 세로쓰기용 문장 부호(、(모점)과 。(고리점))로 바꾼 것이다. 확연히 차이가 있음을 알 수 있다.

다만 모든 반각 문자가 전각 문자를 가지고 있는 것은 아니기 때문에, 이 방법에는 한계가 있다. 예를 들어 세로쓰기에서 [[wiki:"뫼비우스" Möbius]]를 똑바로 세워서 표기하고자 할 때 M, b, i, u, s는 전각 문자 Ｍ, ｂ, ｉ, ｕ, ｓ가 있으니 문제가 없지만, ö는 없기 때문에 90도 회전된다. 이런 경우는 워드 프로세서 차원에서 별도의 처리가 필요하다.

=== 파일명 사용 제한 회피 ===
윈도우즈에서는 파일 및 폴더명에 반각 문자 \/:*?"<>|를 사용할 수 없다. 그러나 이 문자들을 써야 하는 경우가 있는데, 예를 들어 음악 파일 제목의 경우 다양한 표현을 추구하는 뮤지션들이 특수 문자를 넣어 버리는 경우가 많다(특히 일본 쪽 노래들). 따라서 음악 제목을 온전히 표현하는 것을 포기하고 아예 반각 기호를 빼 버리거나, 조금이라도 원문에 가깝게 표기하기 위해 모양이 거의 동일한 전각 기호(＼／：＊？＂＜＞｜)로 바꿔서 표기하는 방법이 사용된다.

이와 비슷한 예로는 과거에 유니코드가 제대로 지원이 안 되는 휴대용 기기에 넣는 음악 태그나 애니 자막 등에 일본식 한자 대신 한국식 한자로 바꿔 입력하는 소위 [wiki:"일본어/잘못된 표기법" 고자 일본어]로 부르는 것이 해당될 것이다.

== 전각 ↔ 반각 변환 ==
유니코드를 기준으로, 반각 ASCII 문자(제어 문자 제외) ↔ 전각 ASCII 문자는 0xFEE0을 더하거나 빼면 쉽게 변환할 수 있다. 다만 전각 공백은 U+FF00이 아니라 U+3000임에 주의할 것. 가타카나와 ¢£¥¦¬¯₩ 등은 이러한 규칙이 없기 때문에 따로 테이블을 만들어서 변환해야 한다. 또한 전각 가타카나 한 글자에 반각 가타카나 두 글자가 대응되는 경우도 있으므로(예: ガ ↔ ｶﾞ) 가타카나 변환은 별도의 처리가 필요하다.

 * [http://steloflute.tistory.com/entry/Halfwidth-and-fullwidth-conversion-program HalfFull] (반각 전각 문자 변환 프로그램)
