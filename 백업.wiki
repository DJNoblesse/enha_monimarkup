Back-up
원래 뜻은 실험이나 전투 등 각종 일에서 어떤 일에 대비해 예비로, 여벌로 만들어 놓은 계획, 지원책 등을 의미한다.[* We need backup now!!] 

[[목차]]

== 컴퓨터의 자료들을 복사, 보관하는 것. ==
'''[[wiki:"꼭 해라 두 번 해라" 백업 꼭 해라. 두 번 해라.]]'''  ~~하지만 계속 내일로 미루다가 눈물을 흘리겠지.~~

[[컴퓨터]] 내의 [[하드디스크]] 같은 저장장치에 저장된 자료들을 '''만일의 사태'''[* 데이터를 다루는 관리자나 관계자들은 이를 "재해"라고 한다.]가 발생해 날아가는것에 대비해 중요한 자료들을 따로 복사해 보관하는 것을 의미한다.

그 '''만일의 사태'''가 무엇인지에 대해서는...
 * 사람의 실수(제일 많다! 작업자가 술먹고 작업 후 깨어난 후 경악하는 경우도 있다.)
 * 관리자나 해커에 의한 고의적인 파괴(Sabotage).
 * [하드디스크]의 노후화나 충격으로 인한 손상.
 * 침수(홍수 등)
 * 전원 이상([벼락], [정전기] 등)
 * 과열(특히 서버실 공조기 고장나면 하드디스크가 너무 뜨겁게 달아올라 데이터가 증발하는 경우도 있다.)
 * [OS] 혹은 작업 프로그램의 ~~지랄~~[에러]로 인한 강제 종료.
 * 도난

사실 백업의 대상이 되는 것은 다양하다. 중요한 문서가 유실되는 것을 막기 위해 CD에 구워둬도 백업이고, 운영체제를 통째로 뜨는 것([wiki:"고스트(소프트웨어)" 고스트]를 사용)도 백업이다. 그리고 백업은 꼭 디스크나 CD에 하라는 법도 없다. 정말로 중요한 문서를 마이크로필름으로 보관하는 것도 일종의 백업이라 할 수 있다[* 보통 마이크로필름화하는 건 백업이라기보다는 아카이빙이라고 하지만...].

하지만 백업 해놓고 관리 안하면 말짱 꽝. 백업이 제대로 됐는지 확인하는 건 필수다. 일일이 확인하기 힘들면 백업된 용량이라도 확인하자. 용량이 이상하게 작으면 백업이 잘못된 거다. 또한 백업을 딱 한 부만 만들어놓는것도 일반적으로 상황발생시 별 도움이 안된다. 운이 좋아 상황발생 직후에 문제를 인지했다면 복구가 가능하지만 많은 경우 상황발생하고 며칠 지나서야 '이거 날아갔네'한다[* PC쓰는 사람은 상황 발생하자마자 바로 알 수도 있지만 서버 돌리는 사람은 며칠 지나서 알아채는 경우도 흔하다.]. 그리고 부랴부랴 백업 확인해보면 이미 자동 백업 시스템이 망가진 데이터를 백업해서 덮어써놨기에 백업 가능한 데이터도 안 남아있는 상황이 된다. 따라서 백업은 최소한 두 부 이상 풀백업으로 갖고 있어야 한다. 실은 산업체용 백서로 나와있는 [http://www.nia.or.kr/files/ko/nia2009/download/%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%20%EB%B0%B1%EC%97%85%EC%A7%80%EC%B9%A8.PDF 백업 가이드라인]이 있는데 그걸 다 적자니 너무 많아서 생략.

그리고 많은 사람이 착각하는데, [[RAID|RAID1]] 은 리던던트지 백업이 아니다! [[RAID|RAID1]]은 단지 하드가 뻑나는 상황을 버텨낼 수 있을 뿐, 사람의 실수까지 막아내지 못한다. 대부분의 자료 유실은 사람의 실수에서 비롯된다는 점은 명심하자.

만일의 사태가 발생했을 경우 초보자들은 '''닥치고 복구'''를 때리는 경우가 많은데 위에서 언급한 것처럼 백업도 깨져있는 경우 사태만 더 악화시키는 경우가 있다. 백업을 덮어쓰기 전에 망가진 자료라도 따로 풀 백업을 하나 떠 놓고 작업하는 게 정석이자 상식이다. 

한때 인터넷상에서 소위 [[알바]]들에게 게시글이 포풍삭제 당할 때 대처법으로 '''닥치고 백업'''이란 말도 있었다.

 * 백업 방법
  * 수동 복사본 생성
  간단하다. 저장할때 한곳에 하나만 저장하지 않고 여분을 다른 곳에 저장하는 것이다. 예를 들자면 문서를 mydoc 폴더에 저장해둔 뒤에, 다른 하드디스크의 backup 폴더에 mydoc 폴더를 통째로 옮겨서 저장해두는 식. 이 복사본을 저장하는 매체는 USB드라이브, [[하드디스크]], [[CD]], [[DVD]], [[BluRay]] 등 모든 보조 저장장치를 사용할 수 있다. 경우에 따라서는 네트워크에 연결된 다른 컴퓨터의 보조 저장 장치에 저장하기도 한다. 단점은 귀찮다는거. 이거 의외로 치명적이다.
  * 버전 관리 시스템
  서브버전, [[Git]]등의 버전 관리 시스템은 특정 폴더의 모든 파일의 변경/추가/삭제를 완벽히 추적할 수 있게 해 준다. 다만 버전 관리 시스템의 특성상 오래된 자료를 지우기가 상당히 힘들다. 사실 버전 관리 시스템은 백업용으로 설계된 것도 아니라 다른 해법을 찾아보는 게 좋다.
  * 운영체제의 백업 기능
  본래 운영체제들은 시스템의 운용이 목적이지만 운용을 돕기 위한 시스템의 유지/보수기능도 통합적으로 가지고 있는데, 그 일환으로 운영체제에서 백업을 지원하기도 한다. 
  윈도우의 경우 98, ME, NT도 지원하고 있으며, XP의 경우 사용자의 문서[* 즐겨찾기, 내문서, 그리고 가장 중요한 사용자 프로필 정보 등]만 백업할수도 있고, 사용자가 원하는 드라이브를 통째로 백업하여 이미지 형태로 저장할수 있다. 비스타부터는 엔터프라이즈 이상에서 백업 및 복원 기능을 제어판에서 지원하는데, XP보다 기능이 좀 더 늘어났다.
  애플의 경우, [[wiki:"Mac OS X"맥 OSX Leopard]]10.5버전부터 [wiki:"타임머신#s-7" 타임머신]이라는 이름으로 지원하고 있다. 우선 지정한 드라이브의 모든 내용을 백업하고 나중에 수정할 내용이 생기면 수정할 내용을 백업한 이미지에 자동으로 추가해준다. [wiki:"타임 캡슐#s-3" 타임 캡슐]이라는 장비를 이용하여 무선 백업도 지원한다. 
  리눅스의 btrfs[* btrfs 는 아직 정식버전이 등장하지 않았고, 에러 레커버리같은 매우 중요한 기능이 여전히 빠져있기때문에 중요자료에 사용은 절대 비추천이다. ] 파일시스템이나 솔라리스의 ZFS파일시스템도[* 현존하는 가장 진보된 파일시스템이다. 리눅스/BSD 에도 포팅되어있지만, 솔라리스에서 가장 잘 작동한다. btrfs 정식버전이 등장하기 전까지 경쟁자는 없을것으로 예상된다. 다만, ZFS 는 대단위 엔터프라이즈급을 바라보고 나온 파일시스템이라, 데스크탑에서는 오버킬이라 볼 수 있는 수준의 데이터 안정성을 제공하며 좋은 퍼포먼스를 위해서는 메모리를 상당히 많이 할당해야 하고 SSD 를 전용캐시로 사용하는등의 흠좀무한 세팅을 지원한다. 물론, 저런 흠좀무한 세팅을 사용할시 퍼포먼스와 안정성은 일반 파일시스템과는 비교불가이며, 고가의 하드웨어 레이드카드급이다. ] 스크립트만 짜주면 MAC의 타임머신 기능을 거의 똑같이 구현할 수 있다.
  * 프로그램이 지원하는 특별한 기능을 이용한 백업.
  프로그램의 경우에는 크게 세가지로 나눌수 있다. 첫번째는 [[고스트]]나 [[트루이미지]]처럼 프로그램이 지정된 파티션을 통째로 이미지 상태로 백업하는것이다. 두번째는 프로그램이 리포지토리를 이용하도록 하는 옵션을 제공하는것이다.[* 이클립스등] 마지막으로 특정 프로그램을 이용하여 작업한 내용을 자동으로 백업해주는 것 등이다.[* [[어도비]] 프리미어, notepad++, 한컴 오피스 등]

단, 백업한 후 관리가 부실하면, [[해킹]]의 온상이 되기 쉽다. 자기 테이프로 수동 백업하던 시절에도 백업하고 나서 복도 같은 곳에 방치해서 '''도난'''을 당하곤 했고, 백업 서버 구축하는 요즘에도 서버 보안을 신경 안 쓰면 털리기 딱 좋다. ~~좋은 예로 [[메이플스토리]]가 있다.~~

아래는 초보자가 저지르기 쉬운 잘못된 백업 관리방법을 간단히 정리해 보았다.
 * 백업을 C:\backup[* 윈도우의 예를 든 것이다. 요즘엔 윈도우도 D:\ 같은 데 깔수 있긴 하지만. 리눅스는 "/"정도 되겠다.] 같은데 해놓는 경우.
  운영체제와 개인 데이터 파일이 있는 주 하드디스크에 백업도 같이 보관해놓으면 그건 없는 거나 마찬가지. 나중에 OS재설치한다고 [[포맷]]하고서 후회해도 늦는다.
 * 백업을 딱 한 부만 떠놓는 경우.
  위에서 설명했지만 고장나고 시간이 좀 지나서 고장을 인지한 경우 백업은 그 고장난 시스템 이미지를 백업해서 갖고 있을테니 백업의 의미가 없다.
 * 싸구려 CD에 백업
  출처불명의 저가CD는 데이터를 오래 보관하지 못한다. 비싼 CD/DVD가 괜히 비싼 게 아니다. 잘 모르겠으면 CD를 햇빛에 비춰봤을 때 반투명해 보이면 싸구려일 확률이 높다. 이런건 백업용이 아니라 자료 이동용으로나 쓰자.
 * [[RAID|RAID1]]이 백업이라고 굳게 믿기
  [[RAID|RAID1]]은 리던던트지 백업이 아니다. [[RAID|RAID5]]도 리던던트지 백업이 아니다. [[RAID|RAID5EE]]라든지 [[RAID|RAID6]]라든지 그냥 닥치고, [[RAID]]의 R이 리던던트니까 어떤 [[RAID]]도 백업이 아니다. 이건 하드가 뻑났을 때 서버도 같이 뻗지 말고 잠시나마 버티라고 만들어놓은 개념이다. 개인 사용자는 [[RAID]]구축할 게 아니라 백업 소프트웨어를 깔자.
 * 고장났을 때 백업을 무작정 덮어쓰기
  이것도 위에 설명했는데, 고장난 데이터도 데이터이다. 닥치고 복구 눌렀다가 더 망가졌다고 징징대도 늦었다. 고장난 데이터라도 백업(풀 백업)해놓고 복구를 시도하자. 수틀리면 그걸 덮어쓰면 된다.[* 현실세계의 Ctrl+Z]
 * 중요한 자료를 [[클라우드]]에 보관
  보안에 민감한 자료를 인터넷에 띄운다는 생각 자체가 틀렸다. 요즘 클라우드 서비스는 기본적으로 모든 통신을 암호화하기는 하지만 해커에게는 매스커레이딩/바이패스라는 악랄한 한 수가 있다. 클라우드 백업 시스템이 여러분의 소중한 자료를 해커에게 고스란히 갖다 바칠 것이다.[* 전문업체 끼고 하는 클라우드 백업은 예외. 이건 보안전문가가 케어해주는거니까 어느 정도는 믿을만하다.] 물론 해당 자료에 보안에 민감한 내용이 전혀 없다면 상관없다.

--'''초보자는 중요한 자료를 안 가지면 된다.'''--

참고로 [[리눅스]] 사용자는 cp(copy) 말고 rsync 사용하는 게 좋다. 풀 백업 뜰 때마다 한세월 하는 것에서 해방된다. rsync는 복구에도 사용한다. 단, 명령어 한 글자 차이로 이상한 데다가 복구해놓거나 하므로 연습 해보고 쓰자. 그런데 rsync는 명령어 이름에서 유추할 수 있듯, 자료 동기화용 소프트웨어이다. 완전히 백업용으로 설계된 소프트웨어로는 rsnapshot이 있다[* rsnapshot 자체는 거대한 스크립트 뭉치에 불과하다. 내부적으로 유닉스의 기본 쉘 명령어를 조합해서 작동하며 그 중 핵심 소프트웨어가 rsync이다]. rsnapshot은 백업된 자료를 복구할 때 별도의 소프트웨어가 필요없고 그냥 파일 복사 명령으로 복구가 가능한 등의 많은 장점이 있다. 그러나 백업 데이터 압축 기능을 제공하지 않는다. 동영상 등 이미 압축된 데이터를 백업하는 경우에는 좋은 선택이 될 수 있다.


== [[FPS]] 게임에서 팀원을 지원하는 행위 ==
[[FPS]]에서의 백업은 돌격,수비하는 팀원을 지원사격, 수류탄 투척 등으로 지원하는것을 의미한다. 축구에 비유하자면 이른바 미드필더. 어느정도는 위 목차의 백업과 의미가 상통한다고도 할 수 있다. 그러나 FPS에서의 통상적인 백업은 지원사격으로 일컬어지는 편이다.

적절한 백업은 아군의 생존율을 높이고 적군의 사망율을 높이는 효과가 있다. 2명이상이 동시에, 혹은 순차로 나타난다면 적의 타점은 자연히 분산되고, 이로서 적의 공격을 나눠받거나 적이 빈공간을 헛치게 될 확률을 높이기 때문이다.

또한 팀원 한명이 갖는 공격의 빈틈을 다른 팀원이 매꿈으로써 순간적인 화력을 높일 수 있다. 자신이 죽더라도 계속해서 공격하는 팀원이 있으니 적의 사망율은 높아지게 된다.  협력플레이를 중시하거나, FPS를 즐기는 유저라면 필수적으로 갖춰야 할 기본 센스라 할 수 있다.

그리고 전원이 적진으로 [[닥돌]]하는 것은 충분한 백업 [화망] 구성에 용이하나, 적도 바보가 아닌지라 모 아니면 도 식 [[한방러쉬]]가 아닌 한 금물.
