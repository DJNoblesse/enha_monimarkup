||이 항목은 [[안드로이드 버전]]으로도 들어올 수 있다.||
 * 상위 항목 : [[안드로이드(운영체제)]]

[[목차]]

== 개요 ==
[[구글]]의 [[스마트폰]]/[[태블릿 컴퓨터]]용 [[운영체제]] [[안드로이드(운영체제)|안드로이드]]의 역대 버전에 대한 소개 겸, 개발사도 함께 정리하는 페이지. [http://source.android.com/source/build-numbers.html 안드로이드 공식 웹페이지]에서도 볼 수 있다.

특징으로 배포가 안 됐던 1.0 1.1을 제외한 버전별 코드 네임이 전부 음식 이름이다. 또한, [[우분투]]같이 버전 이름의 첫 글자가 버전이 올라갈 때마다 다음 글자로 올라간다. A랑 B가 빠진 이유는 원래 코드명으로 붙은 이름이 애스트로(Astro)와 벤더(Bender)였는데 상표권 문제로 빠졌기 때문에 A/B가 빠져있던 것. A는 [[애플(기업)|Apple]]이라서, B는 [[블랙베리|Berry]]라서 지웠다는 우스갯소리도 있다.

SDK의 [http://github.com/bradfitz/zippy-android-talk/raw/master/src/com/google/io2010/zippy/JankableListAdapter.java 소스 코드]를 보면 1.0과 프티 푸르를 포함한 C부터 Z까지의 코드 네임이 포함되어 있다. 여담으로, 위에 언급한 대로 버전이 다 먹거리 이름이기에 [[스마트폰 갤러리]]에서는 다음 버전 업데이트 후 문제점이 많다면 '체했다', '상했다.' 라는 표현을 쓴다. ("갤투 아샌 체했네", "[[문어가 죽었슴다|생강빵이 상했슴다..--;]]" 등)

== 버전 1.0 아스트로(Astro) → [[애플파이|애플 파이]](Apple Pie) → 알파(Alpha) ==
http://tweakers.net/ext/i/1219129668.jpg?width=250

2008년 9월 23일 공개. API level 1, 커널 버전은 2.6.25. 코드 네임이 그냥 아스트로였다가 상표권 문제로 사라졌다. 후에 코드 네임은 애플파이로 변경되었다. 현재는 이름이 없고 알파 버전이라고 부른다. 

최초의 안드로이드. SDK가 함께 배포되었다. 단말기는 동년 10월 22일에 출시한 [[도이체 텔레콤|T-Mobile]] [[hTC G1|G1]] 단 한 기종. 2008년 12월에 이 G1을 베이스로 첫 안드로이드 개발용 폰을 판매하였다.

== 버전 1.1 : 벤더(Bender) → 프티 푸르 (Petit Four) → 바나나 브레드(Banana Bread) → 베타(Beta) ==
http://cdn.androidcommunity.com/wp-content/uploads/2010/05/video.jpg?width=250

2009년 2월 9일 공개. API level 2, 커널 버전은 1.0과 동일한 2.6.25. 역시 SDK가 같이 배포되었다. 사실상 [[hTC G1|G1]]에서 나왔던 문제점들을 보완한 버전.

벤더 이후의 코드 네임이 있긴 한데 공식 사이트에서는 바나나 브레드라는 코드 네임 때문인지 흑역사로 묻어버리는 것 같다. 결국에는 이름마저 지워버리고 베타 버전이라고 부른다.

== 버전 1.5 : [[컵케이크]] Cupcake ==
http://www-bgr-com.vimg.net/wp-content/uploads/android-cupcake7.png?width=250
http://www.android.com/media/wallpaper/thumbs/cupcake_2009.gif?width=200&align=right

2009년 4월 30일 공개. API level 3, 커널 버전은 2.6.27. 가상 키보드, 라이브 폴더, 음성 인식 지원, 풀 스크린 위젯, 홈 스크린 기능이 추가되었다. 또한, 1.5부터 한국어를 지원한다.

[[iOS]]보다 2개월 정도 먼저 복사/붙여넣기를 구현했다. 그런데 이 방식이 워낙 불편해서 정작 2개월 후에 나온 iPhone OS 3(iOS의 구명칭)의 간단한 복사/붙여넣기 방식과 비교를 당하는 수모를 겪기도 했다.

기존 버전에 비해서 많은 발전이 이루어졌다. [[구글]]도 안드로이드 1.0은 휴가철이 오기 전에 급히 만든 거의 '베타' 버전에 해당한다면, 1.5 버전이야말로 모든 것을 갖춘 최초의 정식 버전이라 할 수 있다고 말한 바 있다. 실제로 1.5전에는 [[hTC G1|G1]] 한 기종뿐이던 안드로이드 스마트폰이 점차 발매되기 시작한 것도 1.5부터.

== 버전 1.6 : [[도넛]] Donut ==
http://farm3.static.flickr.com/2549/3968676530_e960c3bb9f.jpg?width=250
http://www.android.com/media/wallpaper/gif/donut_2009.gif?width=200&align=right

2009년 9월 15일 공개. API level 4, 커널 버전은 2.6.29. 1.6부터는 [[CDMA]]가 지원되기 때문에 [[LG U+|]]에서 안드로이드의 사용이 가능해졌다. 그 외에 [[해상도/일람|WVGA]] 등 다양한 스크린 사이즈가 지원되고 [[터치 스크린]]의 입력 형태 감지 기능인 제스쳐 API와 문장을 목소리로 변환해 주는 Text-To-Speech 엔진 기능이 추가되었다. 애플리케이션, 전화번호부, 구글, 지역 등을 통합해서 한 번에 검색이 가능한 통합 검색 기능이 추가되었으며 카메라와 캠코더, 갤러리 UI가 업데이트되었다.

== 버전 2.0/2.1 : [[에클레어]] Eclair[* 프랑스식 도넛인 [[에클레르]]의 영어 발음. 국내에선 이클레어라고 부르는 경향이 있다. 초콜릿 크림빵.] ==

http://smarterware.org/wp-content/uploads/2010/01/androidthumbnailpreviews.png?width=250
http://www.android.com/media/wallpaper/gif/eclair_2009.gif?width=200&align=right

2009년 10월 26일 2.0, 2009년 12월 3일 2.0.1, 2010년 1월 12일 2.1 공개. API level은 각각 5, 6, 7, 커널 버전은 1.6과 같은 2.6.29. 레퍼런스 기기는 [[넥서스 원]].

안드로이드 2.0에서는 여러 개의 구글 계정을 동시에 등록하여 사용할 수 있게 되었으며 MS Exchange 계정도 추가해서 사용할 수 있게 되었다. [[블루투스]]가 2.1까지 지원되며 멀티 터치를 공식적으로 지원하게 되었다.[* 그전에는 하드웨어 개발사에서 넣어주는 경우만 존재했다.] 인터넷 브라우저에는 URL 입력을 통한 이동이 가능할 수 있도록 상단 부분에 주소창이 추가되었고 더블 탭을 통한 편리한 브라우징을 지원하게 되었다. 또한, [[HTML5]]를 지원하며 카메라 지원 기능과 멀티미디어 재생 기능이 향상되었다.

2.0.1과 2.1은 마이너 업데이트라 크게 추가된 기능은 없고 라이브 웹 페이퍼 관련 클래스들과 전화 신호 세기를 모니터링할 수 있는 클래스, 음성 녹음, 라이브 배경화면, 새로운 런처, 더 많은 홈 화면들, WebKit 엔진의 자잘한 버그 등이 수정되었다. 2.1은 첫 번째 레퍼런스폰 [[넥서스 원]]의 출고 버전이다.

== 버전 2.2 : 프로요 Froyo[* Frozen yogurt, 프로즌 요거트. 레드망고같은 요거트 아이스크림을 의미한다.] ==
http://developer.android.com/sdk/images/2.2/22home.png?width=250
http://developer.android.com/assets/images/home/froyo-android.png?width=200&align=right

2010년 5월 20일 공개. API level 8, 커널 버전은 2.6.32.[* AVD(안드로이드 가상 에뮬레이터)상에서의 프로요는 2.6.29이다.]

앱이 실행되는 가상 머신에 새로운 실시간 컴파일러를 적용하여 앱의 실행 속도가 2~5배 증가하였고, [wiki:"크롬(웹 브라우저)" 크롬]에 사용된 V8 엔진을 사용하여 [[자바스크립트]]의 구동 속도가 2~3배 증가하여 웹 브라우저의 실행 속도가 빨라졌다. 또한, 메모리 회수 기능의 개선으로 속도가 20배 정도 증가해 애플리케이션의 전환이 부드럽고 빨라졌다.[* 이에 관하여 프로요 이상에서는 태스크 킬러가 필요없다와 아직 필요하다란 의견이 대립하는데, 평소에는 필요없으나, 죽어버린 어플 종료 때에는 필요하다는 것이 중론.] 중요한 변화 중 하나는 외장 메모리에 애플리케이션의 설치를 지원하는 것이다. 암호화되어 저장되지만 외장 메모리에 저장된 정보는 컴퓨터에 연결해서 지울 수 있는 등 약간의 리스크가 있다. 애플리케이션을 설치할 때 내장 메모리와 외장 메모리 중 어디에 설치할 것인지 선택할 수 있다.

공식 레퍼런스는 없었으나, 준 레퍼런스 기기는 [[옵티머스 원]]이다. 자세한 내막은 해당 항목 참고.

PC 웹 브라우저에서 안드로이드 마켓을 탐색할 수 있게 되었다. PC에서 정보를 탐색하고 폰에서 해당 앱을 검색해서 설치하는 것이 아니라 PC 웹 브라우저에서 설치 버튼을 선택하면 폰에서 앱이 자동 설치된다. 이를 지원하는 앱&마켓이 AppBrain이 있다. AppBrain과 Fast Web Installer를 안드로이드폰에 설치하고 USB로 PC에 연결한 후, PC 브라우저로 AppBrain 사이트에 접속해서 앱을 안드로이드폰에 깔 수 있다. 게임 다운로드도 가능해서 [[야! 신난다~]] 가 되어야 하지만 2010년 12월 마켓 업데이트 이후 구글이 차단해놓은 상태라 아직 불가능.

테더링(핫스팟)[* 핫스팟 : 인터넷 접속이 가능한 기기를 이용하여, 모바일 네트워크망에 접속하여 [[Wi-Fi]]로 다른 기기에도 인터넷에 접속할 수 있게 해주는 기술. [[3G]]망을 WAN 포트로 사용하는 이동식 무선 공유기로 봐도 무방하다. 하지만 이걸 가동 시 배터리가 순삭이다. 또한 [[데이터 무제한 요금제|무제한 요금제]]가 아니라면 당연히 '''요금 폭탄'''을 각오해야 한다.][* 테더링은 [[USB]]나 기타 인터페이스를 통해 유선 연결에 한해 구분짓는 경우도 있다.]을 지원한다. 구글 공인 한 달 29.9 달러로 결정되었다. 물론 구글에서 직접 파는 [[넥서스 원]]은 통신사와 상관없이 그냥 사용할 수 있다.

애플이 지원하지 않는다고 밝힌 [[어도비 플래시|플래시 플레이어]] 10.1 버전을 탑재해서 안드로이드 기본 웹 브라우저에서 플래시 재생이 가능하다. 다만 이 플래시 플레이어 10.1은 어도비 측에서 저사양 CPU의 단말기에는 노출이 안 되거나 실행이 안되게 [* 했다기 보다는 ARMv7버전으로 바이너리를 컴파일했을것으로 추정된다. 이렇게 하면 ARMv6 이하 버전 CPU에서 실행되지 않는 대신 ARMv7이상 CPU에서의 작동이 좀 더 빠르다. 이 경우 마켓에서 앱을 볼 수 없을 뿐만 아니라 어떻게 구해서 깔아도 실행이 안 됐던 이유가 설명되며, 어도비측에서 막았다기보다는 호환성을 포기했다는게 올바른 표현이 된다. 어차피 저 폰들은 플래시의 정상적인 작동을 바랄 속도가 못 된다(...)]해서 이것 때문에 [[옵티머스 원]]과 [[옵티머스 시크]] 유저들이 피를 봤다. Rock Player 같은 동영상 재생 앱에서 .flv도 재생할 수 있다. 폰에 따라 .swf의 단독 실행도 가능하다.[* 햇살속의 리얼 같은 플래시 게임도 플레이 할 수 있다. [http://www.applclub.com/bbs/board.php?bo_table=B&wr_id=34428&sfl=&stx=&sst=wr_good&sod=desc&sop=and&page=1 #]]

자동 계정 탐색(Auto-Account-Discovery) 기능과 익스체인지용 일정 동기화 기능을 사용할 수 있게 되어 기업용으로 활용될 수 있을 것으로 보인다. 관리자를 위한 원격 삭제(Remote Wipe), 최소 암호 설정, 그리고 자동 잠김 화면 표시 같은 엔터프라이즈 보안 기능이 강화 되었는데 실제로 [[SK텔레콤]]과 삼성그룹의 계열사 중 일부는 이때문에 [[갤럭시 S]]로 모바일 환경을 구축하는 듯.

2014년 11월 기준 점유율은 0.6%

== 버전 2.3 : [[진저브레드]] Gingerbread ==
http://devlup.com/wp-content/uploads/2010/12/android-2.3-homescreen1.png?width=250
http://developer.android.com/assets/images/home/gingerdroid.png?width=200&align=right

2010년 12월 6일 구글의 두 번째 레퍼런스폰인 [[넥서스 S]]의 발표와 함께 공개된 안드로이드 버전. API level은 2.3.2까지는 9, 2011년 2월 9일에 공개된 2.3.3부터 10, 커널 버전은 2.6.35.[* 위의 프로요와 마찬가지로 AVD에서는 에클레어와 같은 2.6.29를 쓰고 있다.] 줄여서 '''GB'''라고도 부른다.

UI가 단순화되고 성능이 개선되었으며 텍스트 입력 및 선택과 전원 관리, 애플리케이션 관리 능력과 OpenSL ES의 소프트웨어 구현으로 오디오 출력 기능이 향상되었다.

추가된 기능은 SIP 기반의 VoIP 지원, [[자이로스코프]], 회전 벡터, 선형 가속, 중력, 기압계 센서 지원, [[NFC]](Near Field Communications) 지원, 네이티브 애플리케이션 지원 강화, 오디오 믹싱 지원, 새로운 코덱 지원, 다중 카메라 지원이다. 그리고 외장 SD 카드가 없는 장치를 '공식적'으로 지원한다.

주목할 만한 부분은 NDK([[C(프로그래밍 언어)|C]]/[[C++|]])지원이 강화되었다는 건데, 게임 등에서는 아직 [[자바]]만으로는 한계가 있다는 것을 구글이 인지한 것 같다. 

쓰기 힘들었던 복사/붙여넣기가 마침내 [[iOS]]와 유사한 드래그 앤 드롭 식으로 변경되었다.

2.3.4 부터는 3.1 허니콤에서 제공되었던 오픈 악세사리 라이브러리가 지원된다. 즉, 진저브레드는 USB OTG 기능이 이 때부터 공식 지원된다.

[[NFC]] 기능은 근접해 있는 물체가 [[RFID]]를 지원하는 경우 해당 물체에 URL이나 기타 동작을 태깅할 수 있는 것으로, 말은 어렵지만 [[http://www.youtube.com/watch?v=KVpr0oMev-w 이 영상]]을 보면 간단하다. 근데 아무래도 시연자가 [[오덕]]인 듯. (참조 : [[침략! 오징어 소녀]], [[범인은 야스]])

일단 전 레퍼런스인 [[넥서스 원]]은 진저브레드 업데이트가 확정되었다. 또한, 진저브레드 발표와 동시에 차세대 레퍼런스인 [[넥서스 S]]가 공식적으로 공개되었다. 프로세서 최소 사양에 대한 루머가 공개 전 돌고 있었는데, 구글 엔지니어들의 언급으로 그것은 부정되었다. 또, 프로요가 돌아가는 폰에서는 무리 없이 돌아갈 것이며, 제조사에는 2.1 → 2.2보다 2.2 → 2.3의 업데이트가 더 쉬울 것이라고도 한다.

이런 말이 나오게 된 계기는 LG가 [[옵티머스 원]]의 진저브레드 업그레이드를 안 해준다고 했다가 [[구글]] 엔지니어가 이를 보고 황당하게 생각해서 말했다는 일화가 있다. 자세한 내용과 SDK 다운로드는 링크를 참조. [http://developer.android.com/sdk/android-2.3.html #]

[[소니 모바일|소니 에릭슨]]의 [[엑스페리아 아크]] 프로토 타입에 2.4 버전이 진저브레드로 표기된 것이 [http://clien.career.co.kr/cs2/bbs/board.php?bo_table=news&wr_id=1066344&page=3 유출]되었으나 [http://clien.career.co.kr/cs2/bbs/board.php?bo_table=news&wr_id=1068426 설정 오류]로 밝혀졌다.

2011년 5월 17일, [[갤럭시 S]]도 진저브레드 판올림을 지원하기 시작했다. 그리고 2011년 5월 20일부터 2.3.4 업데이트가 [[넥서스 S]]에서 배포되었다. 그동안 진저브레드의 문제로 지적되었던 폴더 버그[* 특정 위치에 앱 바로가기를 옮겨놓으면 사라졌다가 폰을 재부팅해보면 아무 폴더에나 짱박혀있는 버그.]가 수정되었으며, 와이파이를 켜 놓은 상태에서 3G가 동시에 잡히는 현상도 사라졌다.

이전 버전까지는 없었던 [[이스터 에그]]가 들어 있다. 자세한 정보는 [[http://mastmanban.tistory.com/579 여기]]에서.[* 단, 모든 기기에 다 들어있는 것은 아니다. 제조사가 일부러 제거하는 등 아무리 해도 안 나오는 기기들이 제법 있다.]

2013년 12월 15일 기준으로 점유율은 24.1%.
2014년 11월 7일 기준으로는 점유율 9.8%.
[http://developer.android.com/about/dashboards/index.html #]

== 버전 3.0/3.1/3.2 : 허니콤 Honeycomb[* 원래 벌집이라는 뜻이지만 사실 벌집 모양의 시리얼인 허니콤 시리얼을 말한다. 포스트로 유명한 미국 크라프트/general foods의 상표이긴 하지만 [[구글]]쪽에선 그냥 대충 넘어가자는 분위기.] ==
--[[안드로이드]]의 [[윈도우 비스타]]--
http://developer.android.com/sdk/images/3.0/home_hero1_full.png?width=700
https://tctechcrunch2011.files.wordpress.com/2011/02/honeycombbee.png?width=200&align=right

2011년 2월 22일 3.0, 2011년 5월 10일 3.1, 2011년 7월 15일 3.2 공개. API level은 각각 11, 12, 13, 커널 버전은 2.6.36.

허니콤 시연 동영상 Google I/O [http://www.youtube.com/watch?v=OxzucwjFEEs #] 10분 15초부터 보자.

공식 레퍼런스 기종은 없지만, [[구글 넥서스]] 시리즈와 같은날에 신 버전 업데이트를 하는 [[모토로라]]의 [[태블릿 컴퓨터]]인 [[Xoom]]이 준 레퍼런스 취급을 받고 있다. Xoom 자체가 허니컴을 거의 순정 그대로 채용하기도 했으니...

2010년 12월 진저브레드 2.3 버전을 발표한 날에 바로 모토로라의 태블릿 컴퓨터(이후 Xoom으로 발매되는 그 물건의 프로토 타입)와 함께 미리보기 형태로 발표되었다. 3.0은 [[태블릿 컴퓨터]] 전용 OS로, UI나 퍼포먼스 등이 2.3 이하의 안드로이드 버전과 완전히 다르다. 공식 발표일은 2011년 2월 22일, 출시일은 24일.

발표 당시에는 새로운 UI와 함께 많은 기대를 받은 버전이나, '''실상은 안드로이드계의 [[Windows Vista|윈도우 비스타]]'''

태블릿 컴퓨터 전용으로 출시되면서 대화면에 맞도록 여러가지 편리한 기능이 추가되고 UI도 완전히 뜯어고쳤지만, UI 개선에 의욕이 너무 앞선 나머지 최적화를 놓쳐버리고 말았다. 실제로 허니콤을 탑재한 [[갤럭시 탭 10.1]]의 경우 경쟁 제품인 [[아이패드]]의 성능에 크게 못 미치며, 상황에 따라 다르지만 오히려 전 버전인 2.3을 탑재한 [[갤럭시 S]]와 비슷하거나 오히려 못한 체감 속도를 체험 할 수도 있다. 오로지 [[갤럭시 탭 10.1]]뿐만 아니라 다른 허니콤 탑재 태블릿 컴퓨터 역시 이렇다 할 성능을 보여주지 못했다.

게다가 UI가 확 달라져서 기존 2.3 이하 버전 UI에 익숙해져있던 사용자들이 제대로 적응을 못하는 사태가 발생했다. [[아이팟 터치]]건 [[아이폰]]이건 [[아이패드]]건 아무렇지 않게 똑같이 사용 가능한 [[iOS]]와는 대조적. 거기에 최초로 허니컴을 탑재한 Xoom의 출시 이후 얼마뒤 [[아이패드 2]]가 출시되면서 사람들의 평가는 더 벌어지게 되었다.

심지어 진저브레드를 포함한 다른 안드로이드 버전과의 호환성마저 거의 없어서 __순수 태블릿 전용 OS__라는 이유 때문에 '''스마트폰용 어플 구동이 거의 불가능하다'''는 문제점이 발견되었다. 이 때문에 명색이 안드로이드인데도 정작 쓸 어플이 없다며 가루가 되도록 까였다. 안드로이드의 가장 큰 약점 중 하나인 파편화 문제를 해결하기는커녕 오히려 심화시켜버린 것[* 사실 파편화를 심화시켰다는 언급은 좀 부적절하다. 오히려 알아서 폭망해준 덕에 결과적으로 파편화의 진행을 막아내는 역할을 했다!]. [[아이팟 터치]], [[아이폰]], [[아이패드]] 등 기기를 막론하고 UI부터 소프트웨어까지 100% 호환이 가능한 [[iOS]]나, 조금 다른 성격의 블랙베리나 적어도 같은 회사(Palm)에서 만들어서 거의 제대로 호환이 가능한 Palm OS와 [[webOS]]와는 너무나도 대조적.

덤으로, 이 버전은 소스가 바로 공개되지 않았다. 나중에 한참뒤에야 4.0 아이스크림 샌드위치와 함께 공개되었는데, 그 이유는 [[XDA]]나 제조사 같은 곳에서 이 OS를 핸드폰에 이식하는걸 막으려 했기 때문이다.[* 그런데 XDA같은 곳에서 멋대로 핸드폰에 포팅하는 것을 막기 위해 소스 공개를 막았다는 설명은 애초에 의문스러울 수 밖에 없는 것이 애초에 구글이 XDA를 막을만한 뚜렷한 동기가 없기 때문. XDA의 커스텀롬이 안드로이드의 제품 방향성을 바꿀 만한 영향력을 가진것도 아니니 구글로서는 그러한 것에 별 신경을 쓸 이유가 없다. 그렇다고 제조사의 독단을 막기 위해서였다는 설명도 성립하기 힘든데 이 부분은 소스 공개 여부와는 상관 없이 그냥 허니콤을 쓴 안드로이드폰에 대해서 CTS 인증 단계에서 막아버리면 그만이기 때문.] 이래서야 가뜩이나 안쓰이는 허니콤을 쓸 이유가 더더욱 없어졌다. 3.0 소스가 공개되어봐야 이미 4.0이 같이 공개되었는데 개발자들이 기능도 더 많고 성능도 더 우수한 4.0을 건드리지 이식해봤자 앱도 별로 없고 기능도 적도 성능도 떨어지는 3.0을 건드릴리가 없지 않은가?[* 결국 계획대로(?) 허니컴은 아이스크림 샌드위치의 선도 역할을 충실히 한 다음 역사속으로 사라졌을지도...]

위에서 설명한 허니콤에서의 제약사항을 약간 다른 관점으로 보면 다음과 같다.
제조사 입장에서 허니콤이 태블릿 전용 비공개 소스로 발표되면서 얻을 수 있었던 이점이 있었는데  하나는 대외적으로 태블릿 전용으로 공개된 덕에 당시 막 대두되었던 OS 업그레이드라는 이슈에서 벗어날 수 있게 되면서 차기 버전인 아이스크림 샌드위치가 출시되기 이전까지 약 1년이라는 귀중한 시간을 벌 수 있었다는 점이고, 두 번째는 그 시간 동안 앞으로 아이스크림 샌드위치에서 적용될 사항들에 대해 개발자들이 익숙해질 수  있었다는 점이다. 사실 허니콤은 그 내용 측면에서 진저브레드의 후속이라기 보다는 오히려 아이스크림 샌드위치의 프리퀄에 가까왔던 상황이고 발표시기 상으로도 진저브레드와 불과 3개월 차이밖에는 나지 않는다. 즉 일정상으로는 허니콤이 진저브레드 이후가 아닌 진저브레드와 병행하여 개발되었다고 볼 수 있는 상황.

허니콤의 몇 안되는 장점은 허니콤 자체의 부가기능과 성능 요소 보다는 가상 버튼 UI에 있다. 흔히들 이런 기능이 4.0에 처음 도입되었다고 생각하는 사람들이 많지만, 실제론 3.0부터 이런 형태의 가상 버튼이 도입되었다. 당장 [[Xoom]]만 하더라도 물리 버튼이 전원 버튼/볼륨 버튼을 빼곤 없다. 다만, 상기한대로 허니컴이 태블릿 전용 OS인지라 보급률이 높지 않았고, 허니컴 자체가 너무 쪽박을 차서 인지도가 없었을 뿐. 이는 [[iOS]]처럼 물리 버튼 없이도 휴대용 모바일 기기의 제어를 가능하게 만들어주기에, 허니콤이 아니더라도 프로요 커스텀이나 진저 커스텀판에 허니콤 UI를 사용하는 경우를 자주 볼 수 있다. 따라서 이후 더 이상의 물리버튼 없이도 사용할 수 있도록 만들 수 있게 되었다. 그러나 이 UI마저도 4.2버전에서 폐기되고 말았다.

3.0 허니콤 부터 [[USB]] 포트를 이용해 게임패드와 조이스틱을 지원하게 되었다. 제조사 재량에 따라 이걸 응용해서 2.3 진저브레드도 USB 호스트 기능을 지원하게 만들기도 한다.

추가로 PC와의 연결 방식이 MTP로 바뀌었다. 기존의 내장 메모리에 대한 각종 문제들을 해결하기 위해 파일 시스템을 EXT로 변경하고, data와 sdcard 파티션을 통합하였다. 이 역시 위와 같은 이유로(허니컴이 대중화되지 못하여서) 4.0부터 지원되기 시작한 것으로 알고 있는 사람들도 많다(...). 문제는 MTP 방식으로 바뀌면서 윈도우 이외의 운영체제에서는 안드로이드를 연결해도 인식하지 못하게 바뀌었다는 점인데, OS X의 경우는 구글에서 배포하는 Android File Transfer.app 프로그램을 설치한 후 안드로이드 기기와 OS X 제품을 연결하고 Android File Transfer.app 프로그램을 실행하는 식으로 수동 연결해야 한다.(대신 한번만 수동 연결하면 이후는 자동 연결 된다.) 하지만 이 OS X용 프로그램이 폴더를 저장소 최상위에만 만들수 있는데다가, 폴더나 파일을 옮길 수도 없고, 게다가 연결이 오래 지속되지 않는 등 불안정한 면도 있다. 말 그대로 '''전송용''' 프로그램.

== 버전 4.0 : [[아이스크림 샌드위치]] Ice Cream Sandwich (ICS)[* 아이스크림으로 알려졌으나, 태블릿 PC와 스마트폰 두가지 플랫폼에 동일 업데이트 되기 때문에 '샌드위치'라는 이름이 붙었다.] ==
http://upload.wikimedia.org/wikipedia/commons/thumb/e/e7/Android_4.0.png/250px-Android_4.0.png?width=250
http://tabtimes.com/wp-content/uploads/ckfinder/userfiles/images/Features/Android%20Ice%20Cream%20Sandwich/ANDROID-4_0-ice-cream-sandwich-tablets-folders.jpg?width=700
http://cdn.redmondpie.com/wp-content/uploads/2011/10/ICS_Android.jpg?width=200&align=right

2011년 10월 19일 홍콩에서 구글의 세번째 레퍼런스폰인 [[갤럭시 넥서스]]의 발표와 함께 공개된 안드로이드 버전. 일명 '''ICS'''. 국내에서는 '아샌'으로 통한다. 안드로이드 최초의 [[스마트폰]] & 태블릿 PC 공용 버전이며 API level은 4.0.2까지는 14, 2011년 12월 16일에 공개된 4.0.3부터 15, 커널 버전은 4.0.1까지는 3.0.1, 4.0.2부터 3.0.8.

허니콤에서 다져놓은 UI가 스마트폰 형태로도 적용이 되고, 기존 앱의 성능도 크게 개선했으며, OS 차원에서의 캡처 기능 내장, 더 쉬운 폴더/앱/위젯 접근성, 데이터 모니터링 강화, 셔터 반응에 필요한 시간을 줄이는 등의 '''카메라 기능 개선''', GPU 사용 시 필요한 처리 단계를 줄이는 최적화, [[NFC]]를 이용한 안드로이드 기기 사이의 정보 공유 기능인 '''안드로이드 빔''', 그리고 안면 인식 락 해제 기능인 '''얼굴 인식 잠금 해제'''가 특징이다. 또한 메모리 관리가 이전 버전까진 제조사별로 다른 방식으로 이뤄졌으나, 이 버전부터 통일된 방식인 ION을 사용하게 된다.

가장 큰 변화중 하나로 4GB 이상의 파일도 분할 작업을 거칠 필요 없이 바로 전송할 수 있게 되었다. 진저브레드까지만 해도 MTP 방식이 아니라 불편한 부분이었다. 고화질 동영상을 보는 사람들에겐 희소식.

가장 중요한 점은, 허니콤에서부터 타블렛에 적용되었던 스토리지 구조가 폰에도 적용된 것이다.[* 이 변화를 주면서 어플리케이션의 SD 카드에 대한 쓰기의 권한 구조가 바뀌었는데, 제조사들이 임의로 이전 방법의 접근이 가능하도록 수정했다가 4.4 킷캣에서 어플리케이션측에서 수정하지 않는 이상 쓰기가 안된다는 문제가 발생했다.][* 참고로 관련 단어를 사용하면서 주의해야 할 것이 있는데, 이 문제 관련해서 킷캣에서 크케 터졌기 때문에 킷캣 쪽 단어 설명을 볼 것.] 또한 무엇보다 '''허니컴에서는 안돌아가던 스마트폰용 앱들이 ICS에서는 잘 돌아간다'''는 것이 최대 강점이다. 이론상으로는 진저브레드를 탑재한 모든 기기에서 올릴 수 있다고 한다.

ICS부터는 구글 CTS를 통과하려면 안드로이드 기본 테마(Holo 테마라 부른다)를 수정없이 그대로 탑재해야 하도록 CTS 조건이 강화되었다. 다만 이 테마가 제조사 UI를 대체하는 것은 아니고, '시스템 UI'라는 앱의 형태로 탑재된다.[* 설정에서 애플리케이션 → 전체 탭을 보면 이 앱의 존재를 볼 수 있다.] 즉 일반적인 제조사 펌웨어에는 숨겨져 있다. ICS가 정식으로 공개되기 전에 일부 유출된 정보가 와전되어 ICS부터는 제조사의 커스텀 UI를 탑재할 수 없다는 식의 루머가 떠돌았는데, 그렇지 않다.

시스템 UI 앱을 탑재하도록 한 이유는, 각 제조사 별로 UI 컴포넌트 모양(버튼 모양이나 리스트 항목을 눌렀을 때의 반전 효과 등)이 조금씩 달라 앱이 폰 별로 조금씩 달라보이거나 깨져보이는 현상을 줄이기 위한 것이다. ICS부터는 앱을 만들 때 Holo 테마를 기반으로 하여 만들면 폰 별로 달라보이는 현상이 사라진다.(물론 해상도나 가로 세로 비율이 다양한 것은 어쩔 수 없다.) 제조사 테마가 아닌 Holo 테마로 실행되는 앱이 있는 이유는 이 때문이다.

홈 런처 관련 내용은 루머일 뿐, [[구글]]은 기본 홈런처 탑재에 대해서는 아무것도 언급한 것이 없다. 다만 최근의 제품들의 런쳐는 홀로 UI를 기반으로 만들어진 것들이 꽤 있다.

좀 더 자세한 내용은 [[http://android-developers.blogspot.com/2012/01/holo-everywhere.html 안드로이드 공식 블로그]]나 [[http://android-developers-kr.blogspot.com/2012/01/holo.html 번역본]]을 참고하기 바란다.

[[구글]]의 '안드로이드 4.0 호환성 가이드'에 따르면 ICS를 원활하게 가동할 수 있는 하드웨어 사양은 ROM 790MB[* 시스템 영역 340MB 이상, 사용자 영역 350MB 이상, 캐시 영역 100MB 이상. 다 합해서 790MB. 자세한 사항은 [[http://static.googleusercontent.com/external_content/untrusted_dlcp/source.android.com/ko//compatibility/4.0/android-4.0-cdd.pdf 여기를 참조.]]] 이상이라고 한다. 두 번째 레퍼런스 폰인 [[넥서스 S]]는 이러한 조건을 충족하고 있지만, 첫 번째 레퍼런스 폰인 [[넥서스 원]]은 시스템 파티션의 용량이 145MB 밖에 되지않아 업데이트에서 제외되었다.

삼성은 [[갤럭시 S II]]시리즈와 [[갤럭시 탭 10.1]], [[갤럭시 노트]]를 중심으로 업그레이드를 지원한다고 [http://www.samsungtomorrow.com/2033 발표했다.]

[[갤럭시 S]]는 위에 서술했듯 시스템 파티션 용량이 적게 설계되어 탑재가 불가능하다고 한다.[* 다만 아이스크림 샌드위치를 탑재되지 못하는 기기들에 대해서는 이른바 '밸류팩'이라하여 펌웨어 형식으로 일부 기능을 지원한다고 한다.] 덕분에 [[갤럭시 넥서스]] 발매 이후 가장 빠르게 OTA 업그레이드가 실시된[* 해외 한정, 국내는 통신사덕분에 [[갤럭시 S II]]보다 늦게 OTA가 이루어졌다.] [[넥서스 S]] 사용자는 넥부심을 제대로 충전중.

[[구글]]의 두번째 레퍼런스 폰인 [[넥서스 S]]는 2011년 12월 17일 T 모바일용 롬에 대한 OTA 업데이트를 시작했다. [[넥서스 원#s-5.3|넥서스 원]]은 위에도 서술했듯이 하드웨어의 한계로 지원이 중단되었다.

2012년 3월 13일 오전 10시부로 국내 최초로 삼성의 갤럭시 S II의 업그레이드가 시작되었다.

초기에는 최적화가 덜 되어 많이 무겁고 버벅거렸으나, 계속적인 개선이 되면서 충분히 사용할 만한 수준이 되었으며, 이러한 최적화 노력은 4.1 젤리빈에서 빛을 보게 된다.

여기도 [[이스터 에그]]가 있다. 위의 2.3 [[진저브레드]]와 호출하는 방법은 같고 [http://androidspin.com/wp-content/uploads/2011/11/Nexus-Easter-Egg.png 사진이 다르다.] 그리고 저 이스터 에그를 호출한 다음에 길게 누르고 있으면 이스터 에그가 점점 커지기 시작하고 끝으로 화면에 여러 마리(?)로 증식을 한다. [http://mastmanban.tistory.com/727 더 자세히 보기]

attachment:/photo-2012_02_14_1329147149751.png.thb2.jpg?width=500
이렇게.

2014년 2월 말 기준으로 점유율 16.1%
2014년 11월 기준 점유율 8.5%
[http://developer.android.com/about/dashboards/index.html #]

== 버전 4.1/4.2/4.3 : 젤리 빈 (Jelly Bean) ==
=== 4.1 ===
http://androidscience.files.wordpress.com/2012/08/wpid-250px-android_4-1_on_the_galaxy_nexus1.jpeg?width=250
http://cdn.arstechnica.net/wp-content/uploads/2012/11/xoom-jb-home-screen.jpeg?width=700
attachment:/jb-new-logo.png?width=150&align=right

4.1~4.3의 점유율을 합치면 {{{+1 50%}}}가 넘는다(...) 정확히는 50.3%

어째서인지 한국에서는 많은 곳에서 젤{{{+1 라}}}빈으로 통하고 있는데, 젤{{{+1 라}}}빈이 아니다. 젤{{{+1 리}}}빈이다!! 왜 젤리빈이 젤라빈이 되었는지는 모르나, 심지어 기자들도 젤{{{+1 라}}}빈이라고 쓰는 경우가 있다.

2012년 6월 28일 구글의 레퍼런스 [[태블릿 컴퓨터]] [[넥서스 7/1세대|넥서스 7]]과 함께 발표된 안드로이드 버전. 드디어 두 버전만에 [[태블릿 컴퓨터]] 레퍼런스가 발표되었다. API level 16, 커널 버전은 3.0.31.[* [[퀄컴 스냅드래곤]] S4의 젤리빈 커널이 3.4.0이라 논란이 있었는데 구글이 발표하는 커널 버전은은 권장 커널 버전일 뿐 무조건 그 버전을 써야하는 것은 아니다. 다만 최신 커널 버전일수록 기기 성능에 이득이 있는건 당연지사.] 줄여서 '''JB'''라고도 부른다.

[[SoC]]내의 CPU와 GPU가 처리를 함께 해서 버벅이던 부분이 대폭 개선되었다. 이를 '''프로젝트 버터'''라고 지칭한다.
[[http://www.youtube.com/watch?v=V5E5revikUU&feature=player_embedded 초고속 카메라로 찍은 ICS와 JB의 퍼포먼스 비교]] 덕분에 전체적인 UI가 상당히 부드러워졌다. 대략 "ICS와 많이 다른건 없는데 왠지 더 부드럽다"라는 느낌. 화면 전환 애니메이션이 일부 변경되었다.

향상된 전력 효율, 단어 예측을 통한 키보드와 향상된 음성인식 타이핑 그리고 히브리어와 아랍어를 지원하게 되었다. 알림바도 개선이 되었는데, 알림바 안에서 메일을 간략하게 확인한다든가, 전화를 건다든가, 어플 알람이 오면 그 자리에서 댓글이나 내용을 확인 할 수 있는 등 알림바 내에서 간단한 확인이나 작업 등이 가능해졌다.

이 프로젝트 버터 덕분에 젤리빈은 정식 버전이 공개되기 전부터 극찬을 받았다. 그리고 안드로이드 유저들은 환호성을 질렀다.

attachment:/Google_Now_Suwon.png?width=185&align=right
젤리빈 공개 전 '마젤'이라 불리던 구글 나우가 추가되었는데, 날씨, 교통정보, 대중교통 등의 서비스를 애플의 [[Siri]]처럼 음성명령으로 처리하거나[* Google Now는 언어를 영어로 설정하면 Siri와 유사한 방식으로 자연어 음성 인식을 지원한다. 예를 들어 Remind me after 5 minutes라고 말하면 5분 알람을 설정해 주는 방식.], 그 지역에 가면 '''알아서''' 카드형식으로 보여주는 서비스 이다. 네비게이션 바에서 위로 슬라이드 하면 불러올 수 있다.
 * 지원하는 카드[[http://www.google.com/landing/now/ 이곳에서 볼 수 있다.]]
  * 교통상황
  * 날씨
  * 대중교통[* 한국내 버스정보 확인가능]
  * 항공편
  * 스포츠
  * 다음 약속
  * 번역
  * 통화(화폐) [* 전화통화의 그 통화가 아니라, 환율을 의미한다.]
  * 집 도착 시간
  * 장소

카메라 앱도 변경되어서 순간적으로 찍을 수 있게 변경되고, 카메라 촬영 화면을 좌측으로 슬라이드 하면 갤러리 앱이 바로 실행되고, 화면을 최대로 축소하면 촬영 중인 화면을 포함한 이미지를 빠르게 넘겨볼 수 있게 되었다. 다만 그에 따라 카메라 앱이나 갤러리 앱 중 하나라도 사용안함 처리 후 다른 앱으로 대체하려 하면 '''둘 다''' 사용할 수 없게 되었다.

젤리빈부터는 [[태블릿 컴퓨터]]도 공식 지원됨에 따라 [[넥서스 7/1세대|넥서스 7]]이 레퍼런스 태블릿으로 추가. 스마트폰은 ICS와 마찬가지로 [[갤럭시 넥서스]]로 유지된다.[http://www.zdnet.co.kr/news/news_view.asp?artice_id=20120622083025&type=xml #]

2012년 7월 [[갤럭시 넥서스]], [[넥서스 S]], [[Xoom]]의 OTA가 실시되었다. SDK와 소스는 이미 공개 완료.

이번에도 여전히 [[이스터 에그]]가 들어가 있다. 호출방법은 ICS와 같다. 마찬가지로 호출한 다음 길게 누르고 있으면 증식한 젤리들이(...) 화면에 떠다니게 된다. 이걸 건드려서 움직일 수 있다.
attachment:/JBEgg1.png?width=250 attachment:/JBEgg2.png?width=250

ICS를 끝으로 [[플래시]]에 대한 지원이 공식적으로 중단되어 젤리빈에서는 플래시가 지원되지 않는다. 기존 사용자들을 위한 중요 보안 업데이트 등은 계속 지원된다. 이전 ICS에서 사용하던 플래시 플레이어의 APK를 구해서 설치하면 젤리빈에서도 플래시를 구동할 수 있지만, 추후 발생할 수 있는 젤리빈 이상 버전들에 대한 호환성 문제는 해결하지 않을것이고, 앞으로 새로 나올 AP에서의 플래시 구동 또한 지원하지 않을 계획이어서 점차적으로 안드로이드에서 플래시가 사라질 것으로 보인다. 그리고 결국 신규 다운로드를 할 수 없게 되었다(다만 기존 사용자를 위한 업데이트는 제공한다). 다만 Play 스토어에서 다운로드를 받을 수 없게 된 것 뿐이라 [http://helpx.adobe.com/flash-player/kb/archived-flash-player-versions.html 공식 플래시 플레이어 배포 홈페이지]에서 APK를 다운받으면 언제든지 설치할 수 있다. 2013년 10월 15일 기준, 9월 10일 릴리즈된 Android 4.0용 "11.1.115.81", Android 2.3/3.x 용 "11.1.111.73"을 마지막으로 아예 지원이 중단되었다.[http://helpx.adobe.com/flash-player/kb/archived-flash-player-versions.html #]

2012년 9월 25일 폴란드에서 최초로 [[갤럭시 S III]]의 젤리빈 업데이트가 시작되었다.

2012년 10월 9일부로 한국에서 [[갤럭시 넥서스]]와 [[갤럭시 S III]] 3G 모델의 젤리빈 업데이트가 진행되었다.

==== 하트블리드 보안 결함 ====
2014년 4월 7일에 핀란드의 한 보안 회사가 발견한 [wiki:"하트블리드 사태" 하트블리드]라 불리는 정보 유출을 야기하는 OpenSSL의 결함이 발견되어 대파란이 일어났다.[* 참고로 이 결함은 원리가 너무 간단해서 그간 얼마만큼의 개인정보가 유출됐고 누가 정보를 빼간 것인지도 역추적이 불가능하다.] 온 IT 업계가 비상이 걸린 와중에, 구글 온라인 보안 블로그에 따르면 안드로이드 4.1.1 버전의 안드로이드 기기는 관련 사항에 보안 결함을 갖고 있다고 한다. 현재 4.1.x 버전과 그 이하 버전들도 결함이 의심되는 만큼 불안감이 커지고 있으며, 안타까운 사실은 2014년 기준으로 상당수의 안드로이드 유저들이 4.1.x를 사용하고 있다는 것이다. 따라서 피해량은 상당히 큰 것으로 추정된다. 
구글이 보안 패치 정보를 제조사에 제공한 것으로 알려졌는데, 업그레이드 여부는 순전히 제조사의 결정에 달려 있어서 지원이 끊겨서 소프트웨어 업그레이드를 못하고 있는 사용자들을 애태우고 있다.

=== 4.2 ===
http://upload.wikimedia.org/wikipedia/en/a/af/Android_4.2_on_the_Nexus_4.png?width=250
http://cdn.arstechnica.net/wp-content/uploads/2012/11/n10-10-inch-UI-640x400.jpg?width=700
[http://en.wikipedia.org/wiki/Android_version_history/ 스마트폰 스크린샷 출처] 
[http://arstechnica.com/gadgets/2012/11/review-android-4-2-is-a-sweeter-tasting-jelly-bean/ 태블릿 스크린샷 출처] 

2012년 10월 29일(현지 시간) 안드로이드 공식홈에 4.2 버전이 공개되었다. 실제 발표는 허리케인 샌디 때문에 11월 13일 발표. 4.2 버전의 레퍼런스 모델은 [[넥서스 4]], [[넥서스 10]]. API level 17, 커널 버전은 3.4.0.[* 다만 [[갤럭시 넥서스]]는 [[OMAP]]의 사업 철수로 4.1 커널 그대로다.]

[[갤럭시 넥서스]](해외판 기준), [[넥서스 7/1세대|넥서스 7]]도 4.2 업그레이드가 시작되었으며, [[넥서스 S]]는 제외되었다.[* [[허니컴]]의 '''준''' 레퍼런스 취급받던 [[모토로라]]의 [[Xoom]]도 제외되었다. 참고로 '''[[구글]] 발표다.''']

안드로이드 4.2의 신기능은 다음과 같다.
 * 포토 스피어 카메라[* 구글 지도의 스트리트 뷰의 사진처럼 360도 전방향의 이미지를 쉽게 찍을수 있는 기능. [[넥서스 4]]에 시범적으로 적용되었고 킷캣부터 대부분 모델에 적용되었다.]
 * 구글 키보드에 제스쳐 타이핑 기능 추가
 * 다중 계정 지원 [* 단, 태블릿에서만 지원한다.]
 * 무선 디스플레이 어댑터를 통한 HDTV로의 화면 공유
 * 화면 보호기[* [[스크린 세이버]]. 영문명은 Daydream, 한글 이름으로는 '백일몽'이라고 붙였다. 독에 꽂혀있거나 충전 중일때 미리 설정해놓은 동작(사진 액자, 특정 컬러, 시계, 구글 커런츠 등)을 화면에 띄워놓는 기능.]
 * 새로워진 알림바[* 알림바를 두 손가락으로 드래그하거나 옆의 설정 버튼을 누르면 퀵 토글 메뉴창이 나온다. 삼성의 [[터치위즈]] 상단바나 [[LG 옵티머스 UI]] 상단바의 퀵 토글과 비슷한 기능을 제공.]
 * 새로워진 구글 나우, 구글 검색
 * 빨라지고 부드러워진 성능
 * 락 화면에서의 위젯 관리[* 시계만 나오던 순정 락 화면에서 업그레이드되어, 달력, 이메일, SMS 등도 락 화면에서 살펴볼 수 있게 되었다.]
 * [[나눔고딕]]으로 기본 한글 글꼴 변경

참고로 공식 태블릿 UI는, 허니콤에서부터 사용된 태블릿 전용 UI가 사라지고[* 태블릿 전용 UI의 소스 코드 자체는 4.3까지 남아 있었으나, 4.4 업데이트와 함께 삭제되었다.] 4.2 버전에서부터 폰 UI를 뻥튀기한 형태로 변경되었다.

=== 4.3 ===
http://images.anandtech.com/doci/7199/Screenshot_2013-08-02-18-01-41.png?width=250


2013년 4월 말, 4.3(Build JWR23B)까지 젤리빈이라는 코드명을 이용할 것 이라는 보도가 나왔다.

2013년 7월 18일 구플의 한 사용자가 구글 직원으로부터 구입한 [[넥서스 4]]에 4.3이 깔려 있다고 알렸으며, 구글 플레이 스토어와 시스템 파일이 덤프되어 XDA에서 배포 되었다(...). 자세한 내용은 [[넥서스 4]] 항목 참조. 코드명은 JWR66N.

2013년 7월 25일(한국시간) [[넥서스 7/2세대]]와 함께 발표되었다. API level 18, 커널 버전은 3.4.0.

주요 업데이트 내용은 다음과 같다.
 * Bluetooth Smart : 에너지 소비가 적은 블루투스 모드
 * '''OpenGL ES 3.0''' 지원 : 더욱 정교해진 3D 그래픽[* 아스팔트 8이 이를 활용할 예정][* 발표 때 사용한 Unity 3D 엔진의 OpenGL ES 3.0 데모가 Adreno 320에서 1080p로 돌아갔다고 한다. [[충공깽]]]
 * 제한된 사용자 다중 계정 프로필 : 하나의 기기로 여러사용자의 개인화 가능, 계정의 기능 제한 가능.
 * 더 빠른 사용자 다중 계정 전환
 * 알림바 기능 개선 [* 4.2 버전에서 업데이트된 퀵 토글 기능이 아이콘을 터치했을 때 해당 기능의 설정 창으로 연결되는 것에 불과했다면, 4.3에서는 Wi-Fi와 블루투스 아이콘을 길게 터치하면 ON-OFF, 짧게 터치하면 설정 창으로 연결되는 것으로 바뀌었다.]
 * 더 편리해진 텍스트 입력
 * 내부 워크 프로세싱 향상
 * DRM APIs 지원
 * 다이얼 패드 자동 완성
 * 카메라 앱 UI 변경
 * Background Wi-Fi location 지원
 * 어플이 시스템 알림 히스토리에 접근 가능
 * 백그라운드에서 조용히 실행되고 있는 끌 수 없는 앱에 지속적으로 알림을 표시하도록 강제.[* 악성앱들이 주로 사용하는 행위를 경고하는 기능]
 * SELinux 지원. [[Cyanogenmod]]와 삼성 오피셜 펌웨어에 탑재되어 있다. 모든 안드로이드 기기에 탑재된 것이 맞는지 [[확인바람]].

숨겨진 기능으로 '앱 옵스'라고 이름붙여진 어플의 권한 관리가 존재한다. 관리 권한(루트 권한)이 아님에 유의. CM계열 롬이나 일부 [[루팅]]이 필요한 어플에서 제공하는, 어플에게 허용하는 권한을 일부만 불허한다든가 하는 것이 가능. 어플 호환성(관련 안내메세지가 없다)때문에 숨겨놓은 듯 하다고.[* 간단히 말하자면 앱의 권한을 사용자가 제어함으로써 앱에 뜨는 광고를 차단하거나 위치추적을 막거나 하는 것도 가능하다. 하지만 4.4와 4.4.2에서 다시 이용자가 건드릴 수 없게 바뀌었는데 이에 대해선 이 기능이 애초에 디버깅 툴로 제공한 것이지 유저를 위한 기능이 아니었기 때문이라고 한다. 심지어 플레이 스토어에서도 'App Opps"라는 애플리케이션이 존재한다. 하지만 리뷰를 보면 된다는 사람들이 반, 안된다는 사람들이 반이라서 앱 옵스를 쓰고 싶은 위키러라면 xda로 가자. (...) ]

여담으로 이 버전으로 안해 젤리빈은 안드로이드 역사상 가장 길게 유지된 코드명이 되었다(...).

이 버전의 카메라 앱이 [[넥서스 5]]를 암시하고 있었다고 한다 .[http://bbs1.ruliweb.daum.net/gaia/do/ruliweb/default/mobile/66/read?bbsId=G002&itemId=15&articleId=275153 #]

FLAC 오디오 코덱을 가진 동영상 재생 시 이전 버전에 없던 끊김 현상이 나타난다.

== 버전 4.4 : [[킷캣]](KitKat) ==

attachment:kitkat1.png?width=250

attachment:kitkat2.png?width=700
attachment:/kk_new_logo.png?width=150&align=right
5.0 '키 라임 파이'[* 플로리다 주의 섬들에서 자라는 "키 라임"을 이용해서 만들어 먹는 파이. 미국의 대중적인 디저트 음식이기도 하다. 만드는 방법은 [http://blog.naver.com/PostView.nhn?blogId=gominam2&logNo=182805684 여기 참조].]로 알려졌던 젤리빈의 후속 빌드는 ICS 이래로 끝없이 루머가 돌았지만 공개된 정보는 아무것도 없었다. 일각에서는 [[갤럭시 S4]]에 적용될것이라고 예상했으나 거기엔 4.2 젤리빈이 장착되었다. [https://developers.google.com/events/io/ 2013년 5월에 개최한 구글 I/O]에서 발표할 가능성이 높은 것으로 알려졌으나 키 라임 파이는 커녕 4.3 젤리빈 프레젠테이션도 없었다. 하지만 유출 스크린샷들을 보면 키 라임 파이의 흔적들이 남아있다.

그리고 2013년 9월 4일 뜬금없이 [[킷캣]]이라는 이름으로 발표되었다.[* [http://www.android.com/kitkat/ 안드로이드 공식 웹페이지]] 우리가 아는 그 초콜릿 과자가 맞다. 일단 구글의 John Lagerling이 BBC에 말하길,[* 구글플러스 : [https://plus.google.com/+RosaGolijan/posts/5BxB1Yzin9Y BBC 사원 Rosa Golijan]] 키라임 파이를 모르거나 알더라도 안 먹어 본 사람이 많아서 킷캣으로 바꿨다고. 그리고 안드로이드 마케팅 대표 Marc Vanlerberghe가 말하길, '''우리는 안드로이드 초창기 때부터 팀 구성원들로부터 인기였던 맛있는 초콜렛 킷캣보다 더 나은 안드로이드 K의 이름을 상상할 수 없었다'''고 전했다.

또한 2013년 9월부터 동년 12월 말까지 경품 행사를 진행한다. [http://www.kitkat.co.kr/ #] 자세한 건 [[킷캣]]항목 참조.

5.0이 아닌 마이너 수준 업데이트 버전이라는 점에서 실망하고 분노하는 사람들도 있다. 그런데, 버전의 숫자를 올리는건 순전히 '''제작사 마음대로'''다. 단적으로 말해서 현재 상용화 되지도 않은 [[타이젠]]의 경우 벌써 2.0을 넘겼다. 안드로이드에서의 2.x는 이미 상용화되어 궤도에 안착된 상황이었다. 즉, 번호를 높게 안했다고 분노할 이유가 없는 셈이다.

2013년 9월 16일에는 구글 직원의 실수로 술집에 킷캣이 탑재된 기기를 놓고 가버렸는데, 그게 유출되었다. 그러나 패턴 잠금으로 인해 자세한 내용을 확인할 수는 없었다고.

[http://www.theverge.com/2013/10/14/4838696/android-kitkat-allows-default-third-party-texting-apps-sms-mms 자신의 기본 메시지 앱를 선택 할 수 있도록 변경되었다]. 간단히 말해서 기본 메시지 앱 대신 다른 메시지 앱을 기본 런처를 선택하듯이, [[구글 행아웃]]같은 다른 메시지 앱을 기본 메시지 앱 대신 사용할 수 있다는 말이다. 이는 [[구글 행아웃]]을 밀어줌과 동시에 [[아이메시지|iMessage]]에 대항하는 것으로 보이며 이것을 활용하면 [[카카오톡]]에 SMS를 통합해서 아이메시지처럼 사용할 수도 있다. 그러나 이와 동시에 스팸 메세지를 도중에 가로채서 차단하는 앱들이 죄다 먹통이 되어버렸다.

2013년 10월 28일 킷캣을 탑재한 [[넥서스 7/2세대]]가 블루투스 인증을 통과했다.

현지 시간 2013년 10월 31일 11시 [[넥서스 5]]와 함께 발표되었다.[http://developer.android.com/about/versions/kitkat.html #] API level 19, 커널 버전은 3.4.0. 공식적으로 업그레이드를 지원하는 레퍼런스 단말기는 [[넥서스 4]], [[넥서스 7/1세대|넥서스 7]] [[넥서스 7/2세대|시리즈]], [[넥서스 10]], [[갤럭시 S4]] / [[hTC ONE]] Google Edition. [[갤럭시 넥서스]]는 지원에서 제외되었다.

구글에서 512MB RAM을 탑재한 모델들도 쾌적한 이용이 가능하다고 밝혔다. 구글 직원의 말로는 아직도 28%나 되는 진저브레드의 점유율을 줄이기 위해서기도 하다고 했는데 이 내용이 과대 해석되어 '''기존 구형 모델의 4.4 킷캣 업그레이드가 가능해졌다'''로 와전되어 버렸다. 이 내용은 앞으로 출시될 초저사양 모델들에 최신 운영체제를 탑재해도 충분히 쾌적하게 이용이 가능하다는 것을 의미하지, 이미 제조사가 손놓은 구형 모델에도 최신 운영체제가 탑재될 것이다 등을 의미하는 게 아니다.

가상머신을 기존의 [[달빅]] VM에서 [[안드로이드 런타임|ART]] VM으로 바꾸거나 병행한다고 한다. 이에 따른 성능 향상이 기대된다.[[http://bbs2.ruliweb.daum.net/gaia/do/ruliweb/default/mobile/55/read?articleId=1238547&bbsId=G003&itemGroupId=2&pageIndex=2 ART 관련 설명]] 기존 [[달빅|Dalvik]]의 [[JIT|JIT(Just-In-Time)]]이 아니라 AOT(Ahead-Of-Time)라는 컴파일 방식으로 속도 향상을 꾀했다.
[[JIT]]는 바이트 코드를 실행시에 기계어로 해석해서 돌리는 방식이고 AOT는 미리 기계어로 컴파일한 후 실행시에는 기계어를 바로 실행시키는 방식이다. 컴파일 방식의 차이 때문에 ART 방식에서는 앱 설치 용량이 증가한다.

기본 런처로 구글 나우 런처를 사용한다. 런처 앱 자체는 4.1 이상의 안드로이드라면 어디에서도 사용 가능.[* 출시 직후에는 넥서스 계열에서만 사용 가능하다가 2014년 8월부터 구글 플레이의 제한을 풀어 모든 기기에서 사용 가능하게 했다. 그 이전에도 apk 파일 설치 등으로 쉽게 쓸 수 있는 편이었다.] 디자인이 좀 더 미니멀하게 리뉴얼되었으며, 좌측으로 스와이프하면 구글 나우가 실행되고, 앱 서랍 내의 위젯 탭등이 제거되어 진저브레드 이전의 앱 서랍 형태로 돌아갔다. 아이콘들 역시 좀 더 큼직큼직해졌다.

상단바의 디자인이 하얀색 계통으로 수정되고, 이 버전부터 배터리 아이콘이 코드화되어 커스텀이 어려워졌다. 다만 아이콘 형태 자체를 바꾸는 것이 어려워졌을 뿐, 오히려 아이콘의 색은 훨씬 쉽게 바꿀 수 있도록 변경되었다. [[삼성 터치위즈]]는 원래부터 레퍼런스 아이콘에서 색만 바꾼 것을 아이콘으로 사용하고 있었으므로 킷캣에서도 기존 색을 유지할 것으로 예상되었으나, 구글 레퍼런스를 따르기로 한 것인지 기본 아이콘을 그대로 사용한다. 또한 '''허니콤/ICS부터 도입된 SD카드의 권한 구조 변경'''이 완전히 적용되었는데, 이는 후술한다.

[[youtube(U9jAcwaETD4)]]

안드로이드 4.4 킷캣에 추가된 기능은
 * 기본 웹 브라우저가 [[구글 크롬|크로뮴]] 기반으로 만들어짐[* AOSP은 공개 기반이고 구글 크롬은 소스 공개가 안되는 구글의 자산이다. 즉 기본 웹 브라우저로 크롬이 들어갈 경우 크롬 소스를 공개해야 하는 상황이 된다. 게다가 크롬은 안드로이드에서만 사용되는 브라우저가 아닌지라 소스가 공개되는 날에는... ]
 * 스크린 녹화 기능 추가[* 이것으로 녹화한 결과는 MP4로 저장되고 화면 비율은 기기 비율을 따라간다. 일단 현재는 3분까지만 녹화가 가능하다.]
 * 수정된 안드로이드 디자인 가이드라인 적용[* 저번 버전까지 사용되던 네온 UI의 파란 하이라이트가 너무 튀다고 생각했는지 무채색 계열의 색상으로 변경되었다.]
 * 풀스크린 이머시브 모드 추가[* 동영상을 볼때와 같이 소프트키, 노티피게이션바 등을 화면에서 없애준다. 이후 화면 위에서 아래로 스와이핑을 해주면 다시 나타난다.]
 * 애니메이션 프레임워크 개선
 * 스토리지 액세스 프레임워크[* 구글 드라이브를 굳이 깔지 않아도 기본적으로 업-다운로드가 가능하고 타사 클라우드도 가능한것으로 보인다.]
 * SMS용 퍼블릭 API 추가. 카카오톡이나 스카이프를 기본 SMS 앱으로 설정할수 있다. 기본앱은 [[구글 행아웃]].
 * 적외선 수신기 API 추가. 리모콘이나 적외선 통신 등에 활용할 수 있다. 이미 [[옵티머스 뷰 II|전]][[옵티머스 G Pro|례]][[LG G2|들]][[LG Vu 3|도]] 있고.
 * [[NFC]] 결제 기능 강화
 * 프린트 기능 추가. 화면이나 웹 페이지를 프린터 서버에 보내 출력할 수 있다. 직접 보내서 프린트도 가능하긴 한데 현재 지원하는 프린터가 HP 1대(...).
 * 센서 전력 소모 감소
 * SELinux 설정 변경 (permissive→enforcing). 이는 삼성 Knox 등 보안과 관련되어있다.[* xda에서 4.4.3 이후의 AOSP에서 이걸 강화해 system영역의 쓰기를 리커버리 모드를 제외하면 완전히 막으려는 움직임을 포착한 상태.]
 * [[달빅]]을 대체할 [[안드로이드 런타임|ART]]의 개발자 버전 탑재[* 개발자 옵션에서 기존 달빅과 ART를 고를 수 있다. 다만 변경 후에는 어플을 조정하는 시간이 꽤나 걸리며 불완전하므로 일부 앱이 제대로 동작하지 않는다. 이 점 주의.]
 * [[크메르어]], [[버마어]], [[암하라어]] 유니코드 지원

버전 이름이 바뀌면서 이스터 에그도 바뀌었다. 보는 방법은 이전 버전들과 같다.

http://zagg-blog.s3.amazonaws.com/community/blog/wp-content/uploads/2013/11/android-4-4-kitkat-easter-egg-1024x910.jpg?width=500

2013년 12월 5일 공개된 4.4.1에서는 [[넥서스 5]]의 [[카메라]] 기능이 강화되었으며, 이 버전부터 넥서스 5 이외의 기기의 기본 락 스크린에서 노티바와 소프트키에 투명 효과가 적용된다. 넥서스 5에 적용된 구글 홈 런쳐는 버전이 올라가며 성능 개선이 이루어졌다. 대신 이전 버전 런쳐의 앱 서랍의 기본색이 킷캣의 회색빛으로 변경되었다. 그리고 ART(Android RunTime) 버그와 기타 사소한 기능이 향상되고 자잘한 버그들이 수정되었다.

이후 4.4.1가 나온지 거의 4일만인 12월 9일 4.4.2가 나왔다. 4.4.1에서 발견된 주요 버그들의 패치 및 보안 강화가 목적이며  '앱 옵스'의 개인 정보 보호 기능을 제거하고 VM 표시기 관련 사항과 다양한 추가 소프트웨어도 수정되었다.

이 후 2014년 6월 초, 4.4.2에서 [[https://funkyandroid.com/aosp-KOT49H-KTU84L.html 5000개가 넘는 변경]]을 한(...) 4.4.3이 나왔다. 그리고 몇 주 안돼서 [[https://funkyandroid.com/aosp-KTU84M-KTU84P.html 버그들의 패치 및 보안 강화]]된 4.4.4가 나왔다.

2014년 11월 초 기준으로 [[넥서스 4]], [[넥서스 7]], [[넥서스 7/2세대|뉴 넥서스 7]], [[넥서스 10]], [[모토 X]], [[LG G2]], [[갤럭시 노트 3]], [[갤럭시 S4 LTE-A]], [[갤럭시 S4]], [[LG Vu 3]], [[옵티머스 G Pro]], [[LG G Flex]], [[LG G Pad 8.3]], [[베가 시크릿 업]], [[베가 시크릿 노트]], [[베가 LTE-A]], [[옵티머스 LTE III]], [[갤럭시 노트 10.1]], [[갤럭시 노트 10.1 2014 에디션]], [[옵티머스 G]], [[옵티머스 뷰2]], [[베가 아이언]],[[베가 No.6]], [[베가 R3]] 등에 킷캣 업그레이드가 적용되었다.

2014년 11월 기준 점유율은 30.2%.

=== 저장소 구조의 대개편, 그리고 SD카드의 대혼란 ===
일반 사용자들에게는 '''"킷캣을 먹였더니 갑자기 SD카드를 쓰는 앱들이 이상해졌다"'''로 요약되는 문제와 관련된 내용. '''SD카드를 읽기(Read)만 하는 앱은 문제가 없는데 기록(Write)을 하는 앱들에서 문제가 생긴다.''' 그런데 이 문제는 좀 복잡하니 어려운 말이 들어가더라도 용어와 전반적인 사정을 설명할 필요가 있다.

'''구글 개발 문서에서는 내부 저장소와 외부 저장소의 단어를 보통 핸드폰 살 때의 개념과 전혀 다르게 사용한다.''' 흔히 말하는 내장 메모리란, 안드로이드 시스템이 있고 앱이 깔리는 구역과, /storage/sdcard0에서 볼 수 있는 나머지 구역을 모두 포함하는 개념이다.[* 단 용량이 매우 적은 스마트폰은 다를 수도 있다.][* 스마트폰 살 때 말하는 16기가, 32기가.] 그런데 구글은 앞의 것을 내부 저장소로, __뒤의 것을 첫번째 외부 저장소(primary external storage)로 칭한다.__[* 그러나 실제로는 이 2개의 구역이 파티션으로 나눠지기보다는 그냥 하나의 파티션을 같이 쓰는 경우가 많다. 그래도 후자는 첫번째 외부 저장소이다.(...)][* 이는 2.* 시기에 [[넥서스 원]]을 포함한 많은 기기들이 실제로 작은 내장 메모리+큰 외장 메모리의 구조로 만들어졌기 때문이다.] 한편 많은 안드로이드 기기가 내장 메모리와 별도로 SD카드를 추가로 사용할 수 있도록 해준다. 보통은 이 SD카드를 외장 메모리라고 부르는데 __구글은 이 SD카드를 두번째 외부 저장소(secondary external storage)라고 부른다.__ 그 외 SD슬롯이 2개라든가 USB OTG를 쓴다든가 하는 이유로 3,4 외부 저장소도 있을 수 있다. 따라서 구글 측이 SD카드에 대해 행하는 조치는 일반적으로 두번째 외부 저장소에 관한 조치가 되는 것이다.

현재 앱이 외부 저장소에 기록(Write)을 하는 데 있어 2가지 권한이 관련된다. 1번 외부 저장소에 기록하기 위해서는 WRITE_EXTERNAL_STORAGE 권한이 필요한 반면,[* READ_EXTERNAL_STORAGE 권한도 있는데, 이것은 외부 저장소를 읽기만 하고 싶을 때 필요한 권한이다. 뭐를 기록하려면 읽기도 해야 하므로 WRITE_EXTERNAL_STORAGE 권한을 받아내면 이 권한은 그냥 따라온다.] 2번 외부 저장소에 기록하기 위해서는 WRITE_MEDIA_STORAGE 권한이 필요하다. 원래는 앱이 WRITE_EXTERNAL_STORAGE 권한만 가지고 있어도 1, 2번 외부 저장소 모두에 기록을 할 수 있었지만, 나중에 WRITE_MEDIA_STORAGE 권한이 신설되었다. 뒤에 신설된 권한을 __시스템 앱만이 사용할 수 있도록 제한__하는 것이 구글의 원래 의도이다. 이 변경은 3.0 때에 적용된 것인데, 일부에서는 이런 정책이 무려 1.0 시절부터 예고되어 있었다고 여기기도 한다.

그러나 삼성 등의 기기 제조사들은 권한이 분리되고 나서도 __앱에 WRITE_EXTERNAL_STORAGE를 주면 자동으로 WRITE_MEDIA_STORAGE__에 준하는 __권한을 주는__, '''구글의 의지에 반하는''' 제조사 커스텀으로 얼렁뚱땅 넘어가는 꼼수를 써서 서드 파티 앱이 2번 외부 저장소에도 기록을 할 수 있게 했다.[* 물론 [[구글 넥서스]]는 구글이 직접 관리하기 때문에 이런 수법이 적용되지 않는다. 그동안 구글 넥서스는 2번 외부 저장소가 아예 없었기 때문에 이 문제가 생길 수가 없었으나, 2번 외부 저장소가 있던 기기의 변종인 [[갤럭시 S4]] 구글 플레이 에디션의 젤리빈 4.3 업데이트에 이 권한 변경이 적용되면서 드디어 문제가 불거지게 된 것이다(특히 넥서스/GPE 기종의 경우 파일 관리자가 원래 아예 없다!). 그러나 구글 넥서스를 사용하는 사람들 상당수는 루팅도 잘하고 커스텀 펌웨어도 잘 먹기 때문에 이 문제를 너무나도 쉽게 해결할 수 있었고, 커스텀 펌웨어 만드는 사람들도 역시나 해당 문제를 수정한 뒤 배포하는 경우가 많았다. 그래서 이 문제는 묻혔다.(...)] 그러나, {{{+1 '''구글은 킷캣 이전까지 한번도 공식적으로 두번째 외부 저장소를 지원한 적이 없다.'''}}} 따라서 2번 외부 저장소 관련 기능은 모조리 제조사들이 멋대로 만들어낸 기능이 되며, '''구글 입장에서는 원래 안되는 걸 안되게 했을 뿐''' 되던 걸 안 되게 하는 것이 아니게 된다.

이는 2번 외부 저장소를 이용하는 것이 보안상 문제가 되기 때문이다. 안드로이드에서는 유닉스의 계정 개념을 비틀어서 각 앱의 경계를 짓는데 사용하는데(이는 [[루팅]] 항목에 상세히 설명되어 있다), 이 계정별로 자기 파일이라고 표시하는 개념이 리눅스의 ext4 파일 시스템이나 윈도우의 NTFS에는 존재한다. 이런 곳에서는 자기 파일이 아닌 곳에 맘대로 드나들 수 없고, 보안이 더욱 강화되게 된다. 그러나 외장 메모리는 SD 메모리로 아무 곳에서나 꽂아 쓸 수 있기 때문에 FAT를 기반으로 한 파일 시스템을 사용하며, 여기에는 계정 개념이 없다. 따라서 아무나 남의 집에 파일을 쓸 수 있으며, 보안 문제가 생기기 쉽다. [[루팅]] 항목에서 설명한 것처럼 앱들 간의 장벽이 깨지는 것이다. FAT가 마이크로소프트의 기술이라서 사용료를 더 내야 한다는 점은 덤.

그러나 이것이 보안상 규제가 필요할 수밖에 없는 문제임에도 불구하고, 몇년간 제조사가 열어놓고 구글이 방치하여 회색지대가 된 덕에 앱 개발자들은 구글이 공인한 적도 없는 기능을 토대로 마음껏 내장 메모리와 외장 메모리를 동등하게 사용하는 앱들을 만들었다. '''안드로이드 앱 생태계의 거대한 일부분이 사실은 [[사상누각]]으로 만들어져 있었던 것이다.'''

각설하고, 킷캣 시기에 벌어진 2번 외부 저장소 관련 이슈는 다음과 같다.
 1. 상기한 WRITE_EXTERNAL_STORAGE 꼼수를 틀어막았다.
 안드로이드 기기는 구글이 인정하는 여러 조건을 만족해야 인증을 받아서 '''[[구글 플레이]]를 포함한''' 구글 앱을 사용할 수 있는데, 이 조건 중 하나에 안드로이드 앱이 2번 외부 저장소에 기록할 권한를 지정한 장소 이외에 줘서는 안된다는 것이 ICS 때부터 명시되어 있었지만 지켜지지 않았다. 그런데 킷캣 때부터는 구글이 이를 강력히 규제하기 시작했다.
 1. 앱들은 자기 이름을 딴 디렉토리(/Android/data/패키지이름)를 외부 저장소에 만들어 맘대로 사용할 수 있다. 묻지도 따지지도 않고 말이다.
 1번, 2번을 가리지 않는다. WRITE_EXTERNAL_STORAGE도, READ_EXTERNAL_STORAGE도 필요 없다. 그냥 주는 것이다! 예를 들어, 멜론 앱은 아무 권한 없이 /storage/emulated/0/Android/data/com.iloen.melon 폴더 액세스가 가능하다. 앱 내부에서만 사용하는 각종 데이터를 담아두는데 쓸 만한 방법으로, 그렇게 외장 메모리를 사용하던 기존 앱들은 이 방법을 사용하도록 권한 구조를 수정해서 패치하면 된다. 앱을 삭제하면 해당 디렉토리도 알아서 삭제되기 때문에, 무슨 개인적 파일 같은 것을 담아놓는 용도로는 부적합하다.
 1. Storage Access Framework(SAF)의 도입.
 윈도우에서 아무 프로그램이나 파일→열기를 하면 대체로 똑같이 생긴 창이 떠서 파일을 고를 수 있을 것이다. 대략 이것의 안드로이드 버전이라고 하면 되는데, 여기다가 모듈(Provider) 개념이 추가된다. 임의의 저장소를 Provider 앱으로 만들 수만 있다면 해당 저장소는 모두 동등한 방법으로 스마트폰에서 액세스할 수 있는 것이다. Provider가 존재한다면 구글 드라이브, 드롭박스 등의 [[클라우드 스토리지]], 심지어 FTP나 SMB[* 윈도우의 파일 공유 프로토콜]마저도 구글이 디자인한 UI로 '''마치 스마트폰에 원래 있던 파일처럼 고를 수 있는 것이다!'''
 또한 WRITE_MEDIA_STORAGE가 제조사와 구글에만 허용된 특성상 2번 외부 저장소용 Provider를 제조사가 만들어줘야 하는 절차가 있긴 해도, SAF를 잘 이용한다면 SD카드 문제의 해결책이 될 가능성도 없지는 않다. '''아니 구글이 뒤를 다 틀어막은 이상 이게 공인된 유일한 해결책이다.'''

그리고 킷캣 확산 후, '''외장 SD를 이용하던 유저들은 패닉 상태에 빠졌다.''' SD카드를 고자로 만든 것에 대한 반응은 대략 [[구글 넥서스]] 항목에 나타나는 비하적 표현들을 전국구로 확대한 수준이라 보면 된다(...). 구글 드라이브와 구글 넥서스[* 원래 외장 메모리가 없기 때문에 이 조치에 수혜를 입을 거라는 설이다.] 팔아먹으려고 한다는 음모론, 안드로이드가 iOS처럼 폐쇄적으로 변한다면서 구글을 욕하는 의견들이 쏟아져나오는 상황이다.

MX Player, QuickPic, [[Poweramp#s-5|Poweramp]], FolderSync 등 유명 앱들 상당수가 이 조치의 영향을 받았으며, 특히 원래 '''파일 조작하는 게 일인 파일 관리자 앱'''들이 대거 타격을 입었다.

위에서 2번으로 나온 조치는 자기 폴더에만 액세스할 수 있어서 전체 SD 저장소를 관리하는 것이 불가능하다. 3번 SAF는 후술할 문제로 인해 활용이 어렵다. 따라서 개발자 입장에서 앱들이 정말로 이 기능이 필요하다면, 취약점을 뚫고 억지로 기능을 만들어내는 방식으로 앱을 만드는 방법 말고는 [[답이 없다]]. 실제로 그런 방법으로 많은 앱들이 대처를 한 상태이며, 주로 위에서 말한 WRITE_MEDIA_STORAGE를 이용한 것으로 생각된다.[[http://www.androidpolice.com/2014/04/06/external-blues-redux-apps-still-have-a-loophole-for-writing-to-the-sd-card-on-kitkat-but-for-how-long/ 방법]] Media Scanner는 일반 앱들도 불러올 수 있는데, Media Scanner는 Media Store를 불러올 수 있고 Media Store는 시스템 앱이라서 WRITE_MEDIA_STORAGE 권한을 사용해 원래는 허용되지 않은 SD 조작을 수행할 수 있는 것이다. 토탈 커맨더[* 데스크탑 윈도우의 그 앱 맞다. 같은 제작자가 만드는 것.]의 제작자가 [[http://www.ghisler.ch/board/viewtopic.php?t=34834&start=15 발견해낸]] 것으로 알려져 있다. 다만 취약점으로 만든 것이기 때문에 완전한 작동을 보장하지 않고, 갤럭시 S5를 제외한 삼성 갤럭시 기기에서만 작동하는 경우가 태반이다. 완전한 해결이 불가능한 방법인 것이다.

한편 SAF를 대안으로 제시하는 경우도 있으나, 이것도 영 신통치 않은 상황이다. 외장 메모리용 Provider가 아직 만들어지지 않은 것은 제조사가 점유율 봐서 천천히 만들 수 있다는 점에서 기다려 볼 만한 문제이나, 문제는 SAF의 성격 그 자체이다. SAF는 보통 "'''구글의 통합 UI'''로 모든 저장소를 액세스할 수 있다"로 설명되는데, 이 구글 UI를 반드시 거쳐야 한다는 것이 문제이다. 특히 파일 관리자라는 것은 기존의 UI로는 못하는 것을 할 수 있어서 사용하는 것인데, 이 상황에서 반드시 통합 UI를 거치게 한다면 파일 관리자는 만들 수 없게 되는 것이다. 게다가 파일 생성/복사/삭제/이동/이름변경을 모두 수행할 수 있어야 하는데 이것이 되는지도 미지수인 상황. 일부에서는 구글 UI를 스킵하고 SAF를 이용할 수 있다고 하나, 이 방식으로 성공한 사례를 찾아보기 어렵고, SAF는 불편하다고 이구동성으로 말하고 있는 것이 2014년 6월 현재 전세계 개발자들의 현실이다.

킷캣 이용자들은 최후의 방법으로 '''[[루팅]] 후''' 텍스트 파일(platform.xml)을 수정함으로써 이전과 같이 작동이 되게 할 수 있다. 하지만 [[루팅#s-2.1.2|루팅의 이러한 단점]] 때문에 일반 유저로서는 곤란한 방법이다.

'''5.0 롤리팝 부터 SD카드 접근이 다시 정상적으로 돌아왔다.'''[* [http://www.androidpolice.com/2014/11/04/android-5-0-makes-sd-cards-great-again-extends-api-to-allow-full-directory-access-automatic-mediastore-and-improves-security/ #]] 다만 SAF를 통해 앱이 접근 가능한 최상위 디렉토리를 지정하는 방식이기 때문에 킷캣 이전까지의 완전히 자유로운 액세스를 누리던 입장에서는 불편할 수 있다.

== 버전 5.0/5.1 : [[롤리팝]](Lollipop) ==
attachment:android_lollipop.png?width=250

http://regmedia.co.uk/2014/11/03/nexus_9_screenshot_1.jpg?width=700
attachment:lolipoplogo.png?width=200&align=right
현지 시간으로 2014년 6월 26일 9시, GOOGLE I/O 2014에서 L Developer Preview로 발표되었다. 공식 발표에 먹는 거 이름을 안 붙이고 나온 이례적인 케이스.[* 물론 나중에 다시 사탕의 한 종류인 [[롤리팝]]이라는 이름으로 재공개되면서 전통을 이어 나갔다.] 이와 동시에 안드로이드 공식 로고도 변경되었다.

행사 다음날 개발자 이미지가 [[넥서스 5]]와 [[넥서스 7/2세대]]에 제공되였다. 이제까지 구글이 I/O 다음날 바로 정식 이미지를 제공했던 것과 달리 이번엔 이례적인 사례로 볼 수 있다. [[넥서스 7/1세대]]의 지원이 끊길 것이라 예상되었으나, 7월 1일 [[넥서스 4]], [[넥서스 5]], [[넥서스 7/1세대|넥서스 7 2012]]/[[넥서스 7/2세대|2013]], [[넥서스 10]]의 개발자 프리뷰 소스가 공개되면서 업데이트가 확실시 되었으며 ([[http://www.zdnet.co.kr/news/news_view.asp?artice_id=20140703090915 기사]]) 10월 발표에서 [[http://googleblog.blogspot.kr/2014/10/android-be-together-not-same.html 구글 공식 블로그]]를 통해 위 기종들의 업데이트가 최종 확정되었다.

주요 변경점은 다음과 같다.
 * 진보된 알림 기능
 * Project Volta를 통한 배터리 개선[* 웹서핑 실험 결과 [http://arstechnica.com/gadgets/2014/07/examining-project-volta-we-put-android-l-through-our-battery-test/ 약 36%의 배터리 성능 향상이 이뤄졌다고 한다.]], 절전 모드, 예상 배터리 수명 및 충전 시간 계산
 * 보안 강화 [* 삼성전자의 [[KNOX]] 중 일부 보안 기술이 탑재되어, 커널 부분이 개조되지 않으면 부트로더 언락이나 별도의 보안 취약점이 없는 한 '''[[루팅]]이 불가능'''하게 되었다.]
 * 휴대전화에도 다중 사용자 계정 기능 추가
 * 노티바 상단에 위치한 빠른 설정 기능 [* 손전등 기능도 기본 탑재되었다.]
 * Wi-Fi AP에 연결되어 있으나 Wi-Fi를 통해 인터넷에 연결되지 않는 경우 자동으로 모바일 데이터 우선 연결
 * [[안드로이드 런타임|ART]] 기본 적용
 * 64bit 지원[* arm64뿐만 아니라 x86_64, mips64도 지원한다.]
 * 오디오 기능 개선
 * OpenGL ES 3.1 및 Android Extension Pack 지원으로 강화된 그래픽 환경
 * 카메라 기능 개선 ([http://bbs2.ruliweb.daum.net/gaia/do/ruliweb/default/mobile/55/read?articleId=1561368&bbsId=G003&itemGroupId=2&pageIndex=1 RAW], 매뉴얼 모드 지원 등) 단, RAW촬영 가능 여부는 기기마다 다르니 주의하자.
 * 색맹, 시각장애인들을 위한 시각효과 기능 개선
 * 15개 언어 추가[* 총 68개 이상의 언어가 지원된다.]
 * Tap & Go 기능으로 기존 안드로이드 제품과 새 안드로이드 제품을 [[NFC]]로 연결하여 기본 데이터를 옮길 수 있음
 * '''[http://www.androidcentral.com/lollipop-brings-changes-way-your-sd-card-works-kind-youll 외장 SD카드에 다시 쓰기권한 접근 가능.]'''
 * [[본고딕]]으로 기본 한글 글꼴 변경
프로그래머를 위한 상세 변경점은 [http://aosp.changelog.to/aosp-KITKAT-LRX21M.html 여기]를 참고바람(스압 주의)

안드로이드 버전 숫자와 이름이 전부 L로 알려져 [http://m.blog.naver.com/deu99521/220073194995 4.5] 혹은 [http://clien.net/cs2/bbs/board.php?bo_table=park&wr_id=32039070&page=2 5.0]이라는 루머가 혼재했으나, Android 공식 유튜브 채널에 올라온[http://www.youtube.com/watch?v=AlEE3hXJe5o 티저 영상]에서 5.0임이 밝혀졌다. 또한 확정된 이름은 [[롤리팝]]으로, [http://bbs2.ruliweb.daum.net/gaia/do/ruliweb/default/mobile/57/read?articleId=1528259&bbsId=G003&itemId=9&pageIndex=1 정식 공개 전 이미 제조사에 소스 코드가 전달되었다]고 한다.

한국 시각 2014년 10월 16일 오전 1시 [[넥서스 6]]과 [[넥서스 9]], [[넥서스 플레이어]]와 함께 정식 공개 되었다. 이미지는 11월 3일, [[넥서스 9]]의 판매시작과 동시에 배포될 예정이었다. 하지만 이는 와이파이 사용시 배터리 드레인 문제가 발견되어서 그 문제를 해결하기 위해 연기되었다.

정식 공개 2일 후 개발자 프리뷰 최종 버전이 공개되었다. 빌드 번호는 LPX13D이며 설치 가능한 기종은 기존과 마찬가지로 [[넥서스 5]]와 [[wiki:"넥서스 7/2세대" 넥서스 7(2013) Wi-Fi 모델]].

한국 시각 2014년 11월 13일, 드디어 정식 버전이 OTA 및 팩토리 이미지로 배포되었다. 빌드 번호는 [[넥서스 5]]는 LRX21O, [[넥서스 4]]는 LRX21T, [[wiki:"넥서스 7/2세대" 넥서스 7(2013) Wi-Fi 모델]]과 [[넥서스 10]]은 LRX21P이다. 아쉽게도 넥서스 7 셀룰러 모델(2012년, 2013년 모델 두 기종 모두)은 팩토리 이미지가 아직 공개되지 않았다. 참고로 AOSP 프로젝트에서 최신 버전의 빌드 번호는 LRX22G이다. 최신 빌드를 사용해보고 싶은 위키러라면 [[xda developers]]에 AOSP 프로젝트에 올라온 버전으로 빌드된 여러가지 커스텀롬들이 있으니 이를 다운로드 받아 리커버리에서 플래싱하여 적용해보면 된다.

5.0 롤리팝에서의 주요 버그는 다음과 같다.

 * 특정 공유기 및 암호화 모드에서 [[Wi-Fi]]연결이 불가
 * Wi-Fi가 꺼진 상태에서 과도하게 배터리를 소모
 * 최근에 사용한 앱 목록에서 앱을 삭제해도 앱이 삭제되지 않고 남아있는 현상
 * 패턴 잠금의 오류로 인해 공장초기화 되는 현상[* 패턴 잠금을 설정한 상태에서 패턴을 일정 횟수이상 틀릴경우 공장초기화 하도록 되어있는데, 패턴 잠금의 오류로 단 하나의 점만 터치되더라도 잠금 해제 시도로 인식하게 된다. 그래서 사용자가 의도하지 않은 상황에서도 패턴이 입력되어 공장초기화가 진행된다. 이 버그는 5.0.1에서 해결되었다.]
 * 과도한 메모리 사용(메모리 누수 버그)[* 기기를 재시작 하지 않고 며칠간 사용하면 시스템의 RAM 사용량이 수백MB로 올라가는 현상.]
 * OK Goole 기능 버그
 * [[유튜브]] 동영상 재생 실패

2014년 12월 2일, 5.0에서의 버그를 수정한 5.0.1 버전이 공개되었다. 구글에서 상기한 공장 초기화 버그를 제외하고 공식적으로 변경점을 발표하지 않았기 때문에 정확한 변경점은 알 수 없다. 메모리 누수 버그는 여전히 고쳐지지 않은 상태이다.

2014년 12월 19일 안드로이드 5.0.2 버전이 공개되었다. 5.0.1 버전과 달리 이번에는 변경점이 공개되었다. 자세한 내용은 [http://aosp.changelog.to/aosp-LRX22C-LRX22G.html 체인지 로그] 참조.

2015년 2월 중으로 안드로이드 5.1 버전이 공개될 것이라는 발표가 나왔다. 공식명칭은 5.0과 동일하게 롤리팝이다. ~~이러다가 젤리빈처럼 5.3까지 갈지도 모른다~~ 그러다 3월 10일 [[넥서스 7/1세대]], [[넥서스 10]], [[넥서스 5]]의 5.1 팩토리 이미지가 공개되었다. 가장 크게 눈에 띄는 점은 [[VoLTE]]가 운영체제 차원에서 공식적으로 지원된다는 것인데, 이는 앞으로 [[유플러스]]에서도 언락 된 외산폰 개통이 가능해진다는 것을 의미한다. 다만 유플러스에서 전산망을 준비하는데 시일이 소요될 것이니 좀 기다려야 할 것이다. 또한 5.1버전에서도~~이놈에~~고질적인 램누수는 해결하지 못했다. ~~뭐하자는 건지 하나도 모르겠네~~ 구글은 이 사실을 인정하고 5.1.1버전에 해결한다고 밝혔다[http://www.phonearena.com/news/Google-acknowledges-leaky-memory-fix-coming-to-Android-5.1.1_id67236 #]
~~또 기다려야 하잖아~~

attachment:android_lollipop_flappy.png
이스터 에그는 [[플래피 버드|플래피 안드로이드]]다. 원작과는 달리 면을 터치하는 동안 계속해서 솟아오르는 데다 상승 가속도가 붙는 게 굉장히 미묘하게 설정돼 있어서 손에 힘 빼고 터치하다간 2개도 채 못 넘고 쳐박기 십상. 짧게 끊어치는 미세한 컨트롤이 필요하기 때문에 원작보다 난이도가 높다.
~~그덕에 기본이 2번이라나 뭐라나~~
