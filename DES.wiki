Data Encryption Standard

1970년대에 [IBM]에서 개발하고 미국 NBS(National Bureau of Standards, 현 NIST)가 국가 표준 [암호 알고리즘]으로 지정한 대칭키 암호 알고리즘. 블록 암호 기법을 사용하며 16단계의 파이스텔 네트워크(Feistel Network)를 거쳐 암호화를 수행한다.  키 길이는 64비트지만 실제로는 패리티 비트가 8비트 붙어있어서 실제 키 길이는 56비트. 당시에는 꽤 강력한 암호화 알고리즘이었고 오랜 시간 동안 표준 암호 알고리즘으로 널리 사용되었다. 

아직 기술적 근간인 파이스텔 네트워크의 구조적인 취약점은 발견되지 않았으나[* 실제로 다른 암호화 알고리즘에서도 여전히 사용하고 있으며 AES의 후보안 중에서도 파이스텔 네트워크에 기반한 것이 많았다고 한다. 국산 암호 알고리즘인 [SEED] 알고리즘도 파이스텔 네트워크를 사용한다.] 문제는 56비트 키는 오늘날 컴퓨팅 환경에서는 너무 짧다는 것. 이미 2000년 이전에 무차별 공격(Brutal Force Attack)을 통해서 만 24시간 이내에 암호를 털어낼 수 있었다고 한다(...). 그보다 컴퓨팅 환경이 훨씬 발전한 2015년 현재를 기준으로 하면 '''암호화의 의미가 없다.'''. 평범한 개인용 PC로도 3,4일 안에 뚫린다고 한다.

이 문제를 해결하기 위해 --땜빵으로-- 만들어진 것이 3-DES(Triple DES).  이름 그대로 3중으로 DES를 적용해서 키 길이를 3배로 늘리는 기법이다.  구체적으로는 DES 알고리즘을 이용하여 암호화→복호화→암호화를 거치는데, 키는 세개를 전부 다른 것으로 쓸 수도 있고 처음과 마지막 암호화는 같은 것을 쓰고 중간의 복호화만 다른 키를 써서 2개만 쓸 수도 있다. [* 여담으로 1개만 쓰면 어떻게 되느냐...면 멀쩡한 평문을 암호화-복호화-암호화를 거치는 것이 되어 그냥 DES 1번만 적용한 것과 같은 결과가 나온다(...). 정확히는 1단계와 2단계의 키는 같은 것을 써서는 안된다.] 이렇게 키를 112비트~168비트로 늘리는 효과를 얻어내는 것. 이 방법은 꽤 효과가 있어서[* 키 길이가 1비트만 늘어나도 무차별 공격에 필요한 대입횟수는 2배로 늘어나기 때문에 키 길이를 늘리는 것은 일단 효과적인 방법이다. ]  168비트의 경우 오늘날에도 쓸만한 수준의 안전성을 제공한다. 다만 1회의 암/복호화를 위해 걸리는 시간이 DES의 3배가 되다보니 좀 느리다는 것이 결점. 아래 언급하는 AES가 나올 때까지는 널리 쓰였다.

결국 --땜빵에 지친-- NIST가 2001년 공모전을 통해 새로운 표준 암호 알고리즘을 정하기로 했고 5개의 최종 후보안 중에 선택된 것이 현행 [AES].  이쪽은 기본적으로 최소 128비트, 최대 256비트까지의 키를 사용할 수 있다. 공모전을 통해 알고리즘을 선정한다면 알고리즘이 공개되어버릴 것이고 그럼 무용지물이 아닌가 하겠지만 암호 알고리즘은 원래부터 공개하는 것이 원칙이다. 암호화의 견고함은 알고리즘의 비밀성이 아닌 키에 의존해야하며 알고리즘은 수학적으로 문제가 없는가를 검증받아야하기 때문.

미 정부가 만들어서 공개했고 오랫동안 사용한 알고리즘이라 일설에는 미 정부만 알고 있는 [백 도어]가 있는 것이 아니냐 하는 [음모론]이 떠돌기도 했었다.  이런 백도어가 있으면 타국의 암호화 문서를 미국은 자유롭게 복호화해서 훔쳐볼 수 있게 되는 것이라 꽤 그럴 듯하게 들리기도 한다. 이런 음모론이 도는데는 핵심 알고리즘인 S-BOX가 구조는 공개되어있지만 어째서 그런 구조를 하고 있는가는 밝히지 않은 것이 일조했다고 한다. 꽤 오랫동안 검증되어온 결과 실제로는 [그런 거 없다]는 것이 업계의 결론인 듯. 
