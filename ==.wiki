[[등호]](=)를 두 개 연속으로 쓴 것.

다음과 같은 용도로 쓰인다.

[[목차]]

== 프로그래밍 ==
프로그래밍 언어에서 등호는 대입과 비교(조건문에서 동치)의 용도로 쓰인다. [[BASIC]]과 같은 일부 프로그래밍 언어는 두 경우 모두 등호 하나(=)로 통일해서 쓰지만, [[C언어]]와 같은 또 다른 일부 프로그래밍 언어는 둘을 구분해서 쓴다. 이 경우 대입은 등호 하나로, 동치는 등호 둘(==)로 쓴다. [[PHP]] 같은 언어에서는 이 동치를 또 세분화해서, ==로는 값만 같은지 비교하고(equality) 등호 세 개(===)는 자료형까지 완전히 같은지(identity) 비교하는 연산자로 사용한다.

==의 반대(not equal)는 [wiki:"느낌표" !]=이고, PHP에서 ===의 반대(not identical)는 !==이다.

C언어 계열에서 동치의 경우, 등호의 값이 참이면 그 값은 1을 가지며, 거짓일 경우 0을 가진다. 예를 들어, A=B 와 A==B의 차이는, A=B는 B의 값을 A에 대입하라는 의미이며, A==B는 A와 B의 값이 같을 경우 A==B란 식 자체의 값이 1(True)의 값을 가지며, A와 B의 값이 다를 경우 A==B란 식 자체가 가지는 값이 0(False)이라는 뜻이다. 자바에서는 0, 1 대신 false/true라는 boolean값을 가진다.

PHP에서 등호 2개와 3개의 차이는 [http://stackoverflow.com/questions/80646/how-do-the-equality-double-equals-and-identity-triple-equals-comparis 여기]에 나온 표를 보자. !=이면 완전히 다르게 취급하는 경우, ==이면 A==B는 true이지만 A===B는 false인 경우, ===이면 A==B와 A===B 모두 true가 되는 경우이다.

프로그래밍을 처음 배우는 사람들이 자주 실수하는 부분 중 하나. 조건문이나 반복문 안에 == 대신 =를 써놓으면 참/거짓 연산이 안되어 의도한 대로 조건선택이 안되거나 무한반복에 빠지기 때문에 버그가 생긴다. ;를 빼먹으면 컴파일이라도 안 되지, ==대신 =를 쓰는 경우는 컴파일이 그냥 되어버려서[* 컴파일러에 따라서는 warning을 띄워주거나 컴파일을 안해주는 경우도 있다] 컴파일러가 warning을 띄워주지라도 않으면 잡기 힘들다.
== 위키위키의 목차 ==
위키위키에서는 목차 머릿글 양쪽에 등호를 집어 넣어서 (ex: {{{== 가나다라 ==}}}) 쓰는데, 등호의 개수는 목차 단계를 의미(엔하위키에서는 5개까지 가능)하고 양쪽의 등호 수가 모두 같아야 한다.

보편적으로 1단계의 글자 크기가 너무 큰 관계로 ([[HelpOnEditing]] 항목 참고) 최상위 단계를 2단계로 많이 설정하기 때문에, 앞의 예에서처럼 등호 두 개 쓰고 머릿글 쓰고 또 등호 두 개 쓰는 형식은 가장 많이 볼 수 있는 형식.

== 피곤한 눈의 이모티콘 ==
=_= , = = 등등 여러가지 바리에이션이 있다. 뭔가 피곤한 눈이나 뚱한 표정을 표현할 때 주로 쓰는 [[이모티콘]]이다.
