[[include(틀:모바일 운영체제 목록)]]

http://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Apple_iOS_new.svg/320px-Apple_iOS_new.svg.png?width=200&align=right  [[목차]]

= 개요 =
[[wiki:"애플(기업)" 애플]]이 생산하는 제품 중 주로 모바일 기기에 탑재되는 [[OS]]. [[아이폰]], [[아이패드]], [[아이팟 터치]], [[Apple TV]]가 이를 사용하고 있다.

애플에 의하면 자칭 '전세계에서 가장 앞선 모바일 운영체제', '지구상에서 개발자를 위한 최고의 모바일 플랫폼'. 다른건 논란의 여지가 있어도 최대한 통일된 단일 iOS를 적용하는 정책으로 앱의 기기간 호환성이나 소프트웨어 개발자(앱)에 있어 부담이 적은 건 사실이며[* 물론 개인 개발자 및 학생 개발자에 있어서는 연간 119,000원의 개발자 프로그램 비용이 큰 부담이 되고, 맥이 없다면 Xcode 사용을 위해 추가로 이걸 구입하여야 한다는 문제가 있다. 대표적인 모바일 플랫폼인 안드로이드가 윈도우, 리눅스 는 물론 맥에서도 사용 가능한 개발 툴을 제공하는 것을 생각해본다면 접근성 측면에서 앱 개발자를 매우 귀찮게 한다. 특히 윈도우 기반인 경우가 많은 사무용 PC와 맥 기반의 개발용 PC를 분리해야 한다는, 앱 개발 작업에 있어 상당히 큰 비효율을 초래할 수밖에 없는 상황이다.~~이러니 윈도우 천국인 대한민국 앱 생태계에서 iOS 유저 지원은 찬밥 취급~~], 덕분에 타 제작사 OS에 비해 풍부한 앱 생태계를 자랑한다. iOS를 이끌어 가는 가장 큰 원동력으로 앱 생태계가 손 꼽히기도 한다. 또한 아이폰, 아이패드, 아이팟 터치의 [[GPU]] 성능은 웬만한 모바일 기기를 압도하기 때문에 세계 최고의 모바일 게임 플랫폼으로 불리기도 한다. 

최초에는 아이폰을 위해 만들어진 OS였고, 그러다 보니 공개 당시엔 '[[OS X]] for [[iPhone]]'[* 아이폰 공개영상에서 '[[스티브 잡스]]가 '우리는 혁신적인 소프트웨어를 아이폰에 선보일것이다. 혁신적인 소프트웨어는 어떻게 돌아갈까? 바로 강력한 기반이 있어야 한다. 아이폰은 OS X을 구동한다.'고 말했다], 그리고 3버전까지는 'iPhone OS'라는 이름을 사용했다. 2010년 4월 이전까지는 따로 공식적으로 통일된 명칭이 없이 iPhone OS라는 이름을 사용하다가, 2010년 4월에 4번째 버전 베타가 공개되어 아이팟 터치, 아이패드, 애플 TV까지 이 운영 체제를 사용하게 되면서 이름을 iOS로 바꾼다.

처음에는 아이폰에 종속되는 일종의 펌웨어 개념으로 취급되었던 탓에 다른 애플 관련 문서에 비해 늦게 문서가 작성 되었다. [[뉴턴 메시지 패드]] 같은 흑역사급 듣보잡 제품이나 심지어는 [[wiki:"탈옥#s-2.1"탈옥]]같은 문서보다도 늦게 개설되었다. 

IOS라는 단어는 원래 Cisco 장비 OS 이름이기 때문에, 시스코에서 라이선스를 사서 사용하고 있다. 네트워크 장비쪽에서 시스코 [[망했어요|잘못 건드리면 좋을게 없기 때문에]], [wiki:"스티브 잡스" 잡스]가 눈에서 레이저를 쏜다 해도 이것은 어쩔 수 없었다. (애당초 시스코 IOS가 널리 퍼져 있기도 했고 10년 이상 써 왔기 때문에...)

[[보안]]에 있어선 메이저 모바일 OS 중 '''안전한 편이다.'''[* 그외에 블랙베리도 있긴 하나 보안 관련 이슈는 주로 사용자가 절대적으로 많은 소프트웨어에서 발생한다는 것을 유념하자.] 웬만한 iOS 업데이트에는 말은 없어도 보안 관련 업데이트는 꼭 들어가있는 편. [http://support.apple.com/kb/HT1222?utm_source=Ninja+Dojo&utm_medium=twitter 출처.] 기기의 시스템 접속 권한을 애플만이 갖고 있는 구조고 앱 스토어 관리가 잘 되는 편이라 탈옥을 하지 않으면 실질적으로 보안이나 안정성 걱정은 거의 안해도 된다. 스마트폰 해킹, 도청 등 보안 문제에 있어서 애플 유저들은 그냥 신경을 꺼도 무방할 정도. ~~백신? 그게 뭐임? 먹는거임?~~ 물론 탈옥폰이면 [[그런 거 없다]].

아이폰을 사용하기 위해서는 거의 반드시 아이튠즈를 사용해야 하는데, 이 아이튠즈가 계속 최신 소프트웨어로 업데이트하라고 하니, 잘 모르는 사람도 이 메세지가 귀찮아서라도 iOS 업데이트를 하는 편이다. 이 때문에 파편화가 적어 [[앱스토어]]에 올라와 있는 앱은 거의 다 이용할 수 있다. 또한 개발 난이도가 쉬워지고 개발 비용은 낮아지기 때문에 평균적으로 iOS 개발자가 1달러를 벌때 [wiki:"안드로이드(OS)" 안드로이드]는 약 0.24달러의 수익을 올린다고 한다. 상당수의 앱들이 iOS에 먼저 올라온 후 안정궤도에 올라가면 그제야 안드로이드용으로 나오는 이유이기도 하다.[http://techit.co.kr/1799 #] 인스타그램같은 인기앱의 경우 1년이 지나서야 안드로이드로 이식되었다. 플립보드도 마찬가지. 심지어는 iOS용으로만 개발되는 앱도 많다.[* 반대로 기기 정책상, 제작사 정책상의 차이로 안드로이드로만 나오는 앱도 많아지는 편. 애플의 앱 심의가 좀 빡세다.]

또한 3세대나 지난 [[아이폰 3GS]]가 iOS 6 지원을 받는 등[* 단, 하드웨어적 한계로 모든 기능이 지원되지는 않는다. 하지만 OS 업데이트는 곧 보안 업데이트를 말하는 것이므로 그거면 충분하다고 생각하는 사람도 많다. 물론 대다수의 유저 입장에선 업데이트를 오랫동안 지속적으로 한다는 것으로 만족감을 느낄 것이다.] 사후 지원이 매우 긴 편이다. ~~아이폰 3G는 4버전에서 끝난게 함정~~ 애플의 하드웨어 사후지원 사이클은 출시 후 4~5년이며 현재 추세로는 약 '''4년의 OS 업데이트'''를 꼬박꼬박 해주고 있다. 즉, OS 업데이트가 끊기기 전까지는 부분 수리와 리퍼폰 수령도 끊기지 않는다는 이야기.[[흠많무]]

물론 애플이 최적화를 제대로 안하고 OS 출시를 하면 구형 기기에서 퍼포먼스가 떨어지는 등의 문제가 있다. 자바스크립트 속도나 브라우저 타이핑 등의 퍼포먼스도 0.x초 단위로 떨어진다. 하지만 이건 사실 대부분의 OS 업데이트가 마찬가지. OS가 요구하는 사양이 미묘하게 높아지기 때문에 발생하는 어쩔 수 없는 현상이다. 앱 크래시나 앱 퍼포먼스 하락은 OS가 업데이트될 때마다 앱이 신버전을 못따라가서 빈도수 발생이 높아지며, 이건 써드파티 개발자들 앱 업데이트를 해야만 해결이 된다. 그리고 OS 업데이트는 보안 패치, 다양한 신기능의 추가라는 장점을 가져올 수 있다. 현재 iOS 기기가 모바일 시장에서 하드웨어 및 소프트웨어 지원 사이클이 거진 가장 길게 보장되는건 사실이고, 최적화 역시 꾸준한 패치로 향상시킨다.[* 아이폰 4 유저가 iOS 7에서 느낀 퍼포먼스 하락도 7.1에서 해결이 상당부분 되었는데, 개발노트에 아예 아이폰 4에서의 퍼포먼스 향상이 명시가 되어있다.] 무엇보다 OS 업그레이드는 유저의 선택이며, 애플이 강제하진 않는다. (충전중+와이파이 켜짐 상태인 경우 OTA로 최신 OS를 미리 받아서 설치 준비를 해 두곤 하는데, 받아둔 파일을 삭제 할 수는 있으나 나중에 보면 다시 받아져 있는 경우가 허다하다. 설치 여부는 선택 가능하지만 다운로드 및 다운로드 도중 취소 여부를 선택 불가능한 이런 상황을 두고 '니가 어차피 지워봤자 또 받을테니까 용량 차지하고 있는거 보기 싫으면 그냥 업데이트 하라'는 무언의 압박. 즉 사실상 강제 업데이트나 마찬가지 아니냐는 의견 또한 있다.) OS 업데이트를 선택으로라도 놔두고 꾸준히 지원하는 것과, OS 업데이트가 아예 끊기는 것 중에 어느게 나은건지는 판단은 알아서. 

[[OS X]]를 기반으로 개발되었기 때문에 Darwin-Mach/BSD 커널 기반이며, 즉 일종의 [[유닉스]] 기반이라고도 볼 수 있다. 따라서 OS X와 커널 구조가 상당히 유사하며 기타 리눅스나 Unix-Like OS등과 시스템 구조가 비슷하다 계층 구조라던가. 당연한 얘기지만 터미널 명령어 등도 거의 비슷하다. --물론 모바일 OS라 없는 명령어도 많다.-- 물론 윈도우에 익숙한 대부분의 유저가 접한다면 대체 왜 파일에 [[확장자]]가 없는지부터 시작해 왜 드라이브 구분과 레터링이 없는지 등을 한참 고민하게 된다. 물론 탈옥 유저 한정. 순정 유저는 파일 시스템 접근이 불가능하기 때문에 아예 열어 볼 기회도 없다. 터미널도 당연히 탈옥 유저 전용.

= iOS를 탑재한 기기 =
 * [[iPhone]] 전 모델
 * [[iPod touch]] 전 모델
 * [[iPad]] 전 모델
 * Apple TV 2세대 이후 모델 [* 1세대는 OS X의 'Front Row' 기능만 따와서 실행되도록 넣어 둔 수준에 불과했다.]

= [[iOS/버전|버전]] =
자세한 내용은 [[iOS/버전]] 참조.

= [[iOS/애플리케이션|기본 응용 프로그램]] =
iOS에 내장된 기본 애플리케이션에 관한 설명은 [[iOS/애플리케이션]] 참조.

= 특징 =
== UI ==
기본적으로 학습 과정 없이 쉽게 쓸 수 있고(Out-of-box experience) 단순명료한, 그리고 직관적인 시스템을 목표로 삼고 있으며 SpringBoard라 불리는 홈스크린 또한 이에 맞추어 단순하게 구성되어 있다. 마우스-키보드 인터페이스의 경우 화면 스크롤은 마우스 휠 내지 화면 오른쪽의 스크롤바를 드래그해 스크롤하는 방식이었지만, iOS의 경우 터치의 이점을 살려 단순히 화면을 손가락으로 '밀어올리면' 그에 맞춰 화면이 스크롤된다는, 마치 실제의 종이를 손가락으로 이리저리 밀어서 움직이는 듯한 느낌의 새로운 개념의 스크롤링을 탑재하였다. 화면을 확대할 경우에도 두 손가락으로 화면을 늘이면 그에 맞춰서 화면이 확대되고, 가로세로 회전 버튼을 두는 대신 가속도계를 탑재해 기기 자체를 90도로 기울이면 그에 맞춰서 화면도 회전된다. 이렇듯 기존의 [[키보드]]-[마우스] 패러다임에 적합한 조작 방식과 손가락 터치만을 이용한 새로운 터치 환경에 적합한 조작 방식은 서로 다르다는 점을 잘 파악해 이에 맞는 새로운 개념의 입력과 조작 방식을 탑재한 것이 주된 특징이다.
또한 멀티 터치 제스처를 본격적으로 차용하였다. 앞서 말한 두 손가락으로 확대/축소나 네 손가락 쓸기 등. 최근에 이 '멀티 터치를 기반으로 한 터치 기반 조작' 과 관련된 상당히 광범위한 특허가 미국 법원에서 정식으로 인정받는 일이 일어났다. ~~[[wiki:"GUI"어디선가 비슷한 상황을 본거 같은데?]]~~ 개략적으로 한 손가락 끌기로 사파리 등의 페이지에서 화면을 스크롤하는 기능, 그리고 두 손가락 끌기로 페이지 내의 프레임을 스크롤하는 기능을 포함한 여러 가지 특허라고 한다. [http://www.patentlyapple.com/patently-apple/2011/06/apple-wins-patents-for-their-original-iphone-interface-a-microdvi-connector-the-imacs-edge-to-edge-glass-cover-front-row.html 관련 자료] [http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=7,966,578.PN.&OS=PN/7,966,578&RS=PN/7,966,578 미 특허청 특허 문서 원문.] 이는 아이폰과 아이패드에 뒤이어 출시된 수많은 다른 경쟁작들에 영향을 주었다. 지금에 와서는 저러한 방식이 너무나도 당연하게 느껴질 정도지만 아이폰 발표 당시에는 굉장히 깊은 인상을 남겼다. 당시 사람들의 반응을 느껴보고 싶다면 키노트를 검색해 보는 것도 좋다.

참고로 이런 식의 멀티터치 인터페이스는 컴퓨터 인터페이스 디자이너인 Jeff Han이 2005년에 논문으로 발표한 바 있고 2006년 2월에 TED에서 커다란 스크린 위에 두 손을 이용하여 시연한 바 있다. 아이폰 발표 후 TED Blog의 필자인 크리스 앤더슨이 제프 한에게 이메일을 보내 [http://blog.ted.com/2007/01/10/the_new_apple_i 어떻게 생각하냐고 묻자] 그의 반응은 이러하였다. "아이폰은 굉장히 매력적이다. 그리고 내가 늘 말해왔듯이, 이런 종류의 기술을 시장에 내놓을 회사가 있다면 그것은 애플이다. 다만 (화면) 크기가 조금 더 커서 정말로 두 손을 다 쓸 수 있었길 바랬다."

다만 루머와는 달리 제프 한이 애플에 고용되었거나 애플이 제프 한의 멀티터치 인터페이스 발표에 영향을 받은 것은 아닌 것으로 보인다. iPhone OS(iOS의 이전 명칭)의 개발은 좀더 이전부터 진행되었는데, iPhone OS UI의 기본 토대는 애플이 사들인 Fireworks에서 2001년부터 2005년까지 특허 신청을 해둔 멀티터치 기술과 인터페이스를 기반으로 한다.

== 앱스토어 ==
최초의 iOS 기기인 아이폰 1세대는 [[앱스토어]]가 내장되어 있지 않아 [[iOS/애플리케이션]]에 의존해야 했다. 아이폰 3G부터는 iOS 버전 업그레이드와 함께 앱스토어가 추가되었다. 첫 앱스토어는 500개의 애플리케이션으로 출발하였다. 탈옥을 하지 않는다면 모든 애플리케이션을 앱스토어라는 애플 통제 하의 플랫폼을 통해서만 설치할 수 있다. 모든 애플리케이션은 반드시 애플의 검수를 거쳐야 하며, 덕분에 보안과 안정성, 질적 측면에서 절대적인 장점을 갖고 있고, 덕분에 바이러스나 해킹 툴이 깔린 앱이 깔리는 경우는 상상하기 힘들다. 실제로 벌어진 적은 여러번 있으나 그럴때 마다 애플이 바로 앱을 내려버렸다. 다만, 이 때문에 애플의 정책에 반하는 앱은 나오기가 힘들다.

안드로이드와 비교한다면, 안드로이드는 상대적으로 개방적인 정책을 취했으나, 해킹 툴이나 [[복돌이]] 문제가 활개를 치면서[* 그래서 지금도 많은 안드로이드 게임들은 대부분 무료로 풀린다음 앱내부 결제를 유도하고 있다. 단 구글이 원래 광고 기업이라 무료인 애드웨어로 유도해도 구글과 개발자가 먹고살 수는 있긴 하다.] 현재는 여러 기준을 내세워 앱들에 제재를 가하고 있다. 그러나 APK 포맷은 아무데서나 받아서 싱크툴이 없어도 기기에 넣을 수 있기 때문에 근본적인 해결은 불가능. 게다가 30% 뜯어간다는 인앱 결제도 구글이 도입하여 '''그놈이 그놈''' 되었고[* 물론 정책상의 차이는 있다. 구글의 경우 앱 외부에서 웹페이지를 띄우게 한 다음 거기서 결제하는 것은 인앱 결제를 통하지 않아도 되지만 애플은 이것조차도 허용 안한다.], [wiki:"블랙베리" 폐쇄성의 갑]은 아이폰 이전부터 이미 존재하고 있었으니.

주요 경쟁사들도 iOS 유저들의 수를 무시할 수 없다 보니 iOS용으로 앱을 내놓는다. 다른 안드로이드 사용 업체를 견제하는 일은 있어도 iOS는 웬만하면 앱을 꼬박꼬박 내놓는 편. 그러다 보니 애플 기기를 살 경우 경쟁사들의 앱도 웬만하면 이용할 수 있어 애플이 구축한 앱 생태계의 질을 더욱 높이는데 일조하고 있다. [http://kr.wsj.com/posts/2013/03/13/왜-좋은-앱은-모두-애플-차지일까 참조.]

== 호환성 ==
 하드웨어부터 OS, [wiki:”아이튠즈” 소프트웨어 싱크툴]에 이르기까지 전적으로 애플에 의해서'''만''' 생산과 관리가 되기 때문에 [[안드로이드]]나 [[Windows Phone]] 등 경쟁 플랫폼과 비교했을 경우 안정성이나 보안, 기기간 호환과 최적화 면에선 뛰어난 OS이다.[* 대부분의 경우 하드웨어 평가와 소프트웨어 평가가 나뉘곤 한다. 하지만 애플 기기에선 이게 별 의미가 없다. 언제나 하드웨어와 소프트웨어를 같이 놓고 봐야 한다.]~~물론 마소가 노키아를 먹기전에도 그랬고, 이제는 잡아먹어서 Windows Phone은 마소만 만들테니 Windows Phone도 같은 상황이다~~ 이러한 강력한 호환성은 다른 회사에서도 여러번 시도해 온 것이다. 사실 [[SKT]]의 [[통합메시지함]] 같은 경우도 소프트웨어적 호환성이라는 좋은 의도가 있었고 이는 애플의 [[아이메시지]]도 마찬가지이다. 그러나 애플의 호환성만이 성공 사례가 되는 것은 하드웨어 까지도 애플이 관리하기 때문이다. 통합메시지함은 휴대폰 하드웨어가 중구난방이라는 사실을 무시하고 밀어붙인 것이었기 때문에 오히려 반감을 사게 되었던 것이다.[* 그리고 소프트웨어적 완성도는 아이메시지에 비할 바가 못된다.]

안드로이드는 제조사나 이통사의 입맛에 맞추어 계속 개조되는 등 소프트웨어나 하드웨어의 호환성은 처음부터 큰 고려의 대상이 되지 않았다. 똑같은 앱이 어디서는 되고, 안되는 식으로 파편화가 계속해서 진행이 되어 왔다. 예를 들어, 모토롤라의 모토로이를 보면 제조사와 통신사가 서로 짜고서 스카프(SK Application Framework)를 넣어놔서 지우지도 못하게 하고 내장 메모리만 차지하게 했으며, 버전업도 제대로 되지 않고 있다. 또한 아마존, 바이두 등 각 기업별로 안드로이드를 기반으로 한 독자 OS 개발을 추진하고 있어 이러한 분열은 계속 가속되고 있으며 안드로이드 사용자들만 중간에 끼인 모양이 되어가고 있다.[http://economy.hankooki.com/lpage/it/201204/e20120409180022117700.htm 기사참조]

 일부에서는 안드로이드의 개방성은 사용자와 개발자들을 위한것이 아닌, '''제조사와 통신사들을 위한 것'''이다라는 이야기까지 나오기도 한다.[* 구글로서는 휴대폰 시장에 역변을 가져온 애플을 견제하기 위해 발빠르게 이동통신사와 제조사들을 휘어잡는 것이 필요했다.] 애플이 자신들의 정책을 이동통신사의 정책 보다 우선시 하거나 이통사를 무시하는 경향이 있는 것도 사실이고, 그로 인해 이통사의 영향력이 강한 한국에서는 판매나 인지도에 한계가 있다. 하지만 이동통신사의 정책에 휘둘리지 않고 어딜 가나 똑같은 조건의 스마트폰을 이용할 수 있다는 점에서  매력을 느껴 iOS 제품군을 찾는 유저도 많다.

이러한 OS 호환성은 커스터마이징에도 적용되어 아이콘을 바꾼다던지 메뉴를 치장한다던지 하는 것은 불가능하다.

== 보안 ==
애플에 의해 철저히 관리되는 운영체제다. 언급했다시피 애플리케이션은 전부 앱스토어를 통해서만 다운로드할 수 있는데, 모든 애플리케이션은 애플에 의해 약 2주간의 검수를 거친 뒤에 등록되므로 악성 코드나 바이러스, 맬웨어 등이 침입할 여지가 적으며(다시 한 번 말하지만 '''실제 사례는 있다'''. 다만 애플의 반응도 빨랐을 뿐), 웹에서 파일을 다운로드하는 운영체제가 아닌 써드파티 애플리케이션을 이용해야 가능하기 때문에 보안이 철저하다. 또한 모든 애플리케이션은 FairPlay라는 [[DRM]]이 걸려 있으며, 애플리케이션의 무단 수정 및 복제를 막기 위해 iTunes로만 열고 관리가 가능하게 되어 있다. 그밖에도 OS 곳곳에서 특히 아이튠즈와의 연관이 많은데, 우리나라는 아이튠즈 스토어가 빈약해서 알기가 쉽지 않지만 국제적으로는 애플사 전체 순이익의 10%가까이를 차지하는 엄청난 돈줄이라 그렇다. 자세한 내용은 [[아이튠즈]] 항목 참조. 

써드파티 애플리케이션, 즉 애플이 만들지 않은 애플리케이션은 시스템과 다른 애플리케이션에 접근하는 것이 불가능하다. 특히 사진, 비디오, 메일, 문자메시지 앱과 같은 [wiki:”iOS/애플리케이션” 기본 애플리케이션]에 접근하는 것은 절대 안된다. 특히 문자메시지는 이중보안이 적용되어 상당히 안전한 편이다. 일부 써드파티 애플리케이션은 기본 애플리케이션에 접근할 권한을 요구할 수는 있다. (예: 카카오톡에서 타인에게 사진을 보내려고 할 때.) 이럴 때는 꼭 알림이 뜨게 되어 있으며 유저가 동의하면 해당 앱에 접근할 수 있게 된다. 이처럼 권한이 주어진 애플리케이션은 설정에서 확인하고 다시 제한을 걸 수도 있다. iOS8에서는 이 제한이 풀릴 예정이다. 그러나 풀린다고 해서 안드로이드 처럼 완전히 열리는 개념은 아니고 샌드박스 구조를 유지한채로 애플리케이션 간의 파일 공유를 지원하는 구조이다. 

=== 주의점 ===
모바일 OS 중 안드로이드에 이어 가장 많은 사용자가 있고 단일 모델로 치면 압도적으로 많은 사용자가 있음에도 불구하고 샌드박스형 모델을 체계적으로 적용한 결과 보안에 있어서는 안전한 편이고, 안드로이드에 비해서 여전히 우위를 갖는 부분이며 백신등의 필요를 없게 만들고 있지만, 트집을 좀 잡자면 iOS에도 보안에 있어 취약한 부분이 있기는 하다.

앱 사전 검수가 분명 앱스토어의 질을 높이고 보안상 걸러낼 건 걸러낼 수 있는 가장 효과적인 장치인건 맞지만 그렇다고 앱스토어에 올라온 모든 앱들이 보안상 완전무결한 것은 아니다. 애플이라고 실수 안 하란 법은 없기 때문.[* 특히 올라오는 앱의 수가 점점 기하급수적으로 많아지면서 개발자들 사이에서도 저질 앱이 예전보다는 쉽게 통과되는 느낌이 든다는 말이 나오기도 한다.] 몇몇 해커들은 사전 검수를 우회하여 보안상 위험한 앱을 실제로 올리기도 했다. 또한 몇차례 스팸 애플리케이션이 올라오기도 했었으나 애플의 사후 대처도 빨라서 피해 사례가 거의 없다시피 하다. 그래도 몇년간 운영한 OS인데 큰 사고는 안났다는 점에서 일단 신뢰도는 높다고 볼 수 있겠다. 하지만 사용자 입장에서 다소 경각심을 가질 필요가 있다. 최근에 출시되는 앱 중에는 기본 정보를 요구하는 경우가 많으며, 이럴 경우 iOS 차원에서 알림을 날린다. 아무 생각없이 그냥 "예" 눌렀다간 알게모르게 개인 정보를 공유하게 된다. 다행히도 설정에 가면 간단하게 기본 정보 사용에 항목 별로 제한을 걸 수 있으니 참고하기 바란다.

2011년에 독일 연방 정보보안국(BSI)은 애플에 보안성 결함이 있다고 주장하였다. 해커가 PDF 파일에 악성 코드를 심어둘 경우 PDF 파일 열람시 단말기가 해킹될 수 있다는 것. 애플 역시 업데이트로 수정중이라고 밝혔고 그 후 이 문제는 업데이트로 해결되었다.

또한 iOS에도 써드파티 백신 앱은 존재하며 이미 앱스토어에 올라온지 오래다. 안드로이드 백신 앱과의 차이점이 있다면, 안드로이드 백신 앱은 안드로이드 OS 자체를 통째로 검사하는 반면 iOS의 백신 앱은 다른 써드파티 앱에 저장된 파일만을 검사하는 것이다.[* 위에서도 설명했지만 iOS에선 어떤 써드파티 앱이든 시스템에 접근할 수는 없다. 설령 그것이 백신 앱일지라도 말이다.]

=== [wiki:"하트블리드 사태" 하트블리드] 보안 이슈 관련 ===
2014년 4월 초에 핀란드의 한 보안회사에서 Open SSL에 심각한 보안 결함이 있음을 발견했고, 이 발표에 따라 온 IT 업계가 그야말로 난리가 났다. 소위 [wiki:"하트블리드 사태" Heartbleed]라 불리는 이슈로 가볍게 넘길게 아니라 '''정말 심각한 건이다'''. 그럼에도 불구하고 한국에선 관련 기사를 보고 기자들이 호들갑을 떤다고 반응하는 사람들이 많다. ~~개인정보가 털려도 싸다... 이렇게 경각심이란게 없어서야.~~ 미국의 저명한 컴퓨터 보안 관련 전문가인 브루스 슈나이어는 자신의 블로그에 이 이슈를 [https://www.schneier.com/blog/archives/2014/04/heartbleed.html 대재앙]이라 부르고, 만약 이 사태의 보안 위협도에 1부터 10까지 점수를 매기라면 11을 줘야 한다고까지 글을 올렸다. 웃긴건 본인도 밝혔듯이 이사람 블로그도 취약 웹사이트다.

당연히 모바일 업계 쪽에서도 난리가 안날래야 안날 수가 없는데, 다행인 것은 iOS는 여기서 안전하다는 것이다. 애플은 이슈가 터지고 며칠이 지난 4월 10일에 iOS와 [[OS X]], 주요 웹기반 서비스([[아이클라우드]] 관련 서비스 등)가 안전하다고 [http://recode.net/2014/04/10/apple-says-ios-osx-and-key-web-services-not-affected-by-heartbleed-security-flaw 밝혔다.]
[* 그런데 이게 애매한게 애플이라 안전한게 아니라 Open SSL을 워낙 구버전으로 써서 저 버그가 있는 명령어가 없기 때문;;] 또한, iOS가 탑재된 기기를 탈옥해서 OpenSSL 패키지를 설치한 기기도 이번 보안 이슈로인한 영향은 없다. [[Cydia]]의 기본 소스인 Cydia/Telesphoreo에서 제공하는 OpenSSL 패키지 버전이 0.9.8y-10이기 때문이다. 단, 그 외 소스에서 설치하거나 직접 보안 이슈에 해당되는 버전을 설치한 경우에는 이 보안 이슈에 영향이 있을 수 있으니 주의

참고로 페이스북과 구글 등은 자신들이 제공하는 서비스가 이 취약점에 노출되어 있다고 밝혔다. [wiki:"안드로이드(운영체제)" 안드로이드]는 4.1.1 젤리빈과 그 이하 버전이 취약하다고 한다.

=== iOS 백도어 논란 ===
 * 반달과 감정적 서술이 예상되는 항목이니 독자연구를 배제하고 출처를 명시하여 객관적으로 서술해주시기 바랍니다. 현 항목은 대부분 조너선 즈지아스키의 발표 자료와 기사, 즈지아스키의 블로그 글들을 인용하였으며 애플의 주장에 대해서는 애플 공식 홈페이지만을 인용하였습니다.

2014년 7월 해커 컨퍼런스인 HOPE/X에서 iOS 보안 연구자인 조너선 즈지아스키는 해커들이 모인 자리에서 [https://pentest.com/ios_backdoors_attack_points_surveillance_mechanisms.pdf iOS 기기에서의 백도어, 어택 포인트, 감시 메카니즘]이라는 제목으로 보안 관련 발표를 하였다.[* 즈지아스키는 후에 자신의 블로그에서 2시간으로 진행됐어야 할 분량의 긴 발표였는데 시간상 45분만에 끝내야 해서 예를 들어가며 자세하게 설명을 하지 못했다고 소회했다.]
즈지아스키는 iOS라는 운영체제가 법 집행기관이나 범죄 집단 등의 타겟이 되고 있다는 점을 지적하고 몇몇 실사례를 들었다. 그리고 도입부인  <중앙 통제(Centralized Control)>에선 애플이 iOS 기기를 웬만한 (보안) 공격자로부터 “상당히 안전하게(reasonably secure) 지키기 위해 노력해왔고, 법 집행기관의 요청에 따라 사용자의 기기 데이터에 접근할 수 있다는 것을 알리기 위해 힘썼다는 것을 먼저 언급하였다. 또한 [[아이폰 5]]과 iOS 7은 애플(그리고 정부)를 제외하곤 더 안전해졌다고 밝혔다. 그는 여기서 애플이 사용자 데이터에 접근하기 위한 적법한 절차에 대해 논했는데 이는 추후 발표에서 iOS 보안의 약점을 지적하기 위해 미리 언급한 것이었다.

즈지아스키는 먼저 iOS 4-6까지의 데이터 암호화 과정과 iOS 7에서 약간 업데이트된 부분을 설명한 후, com.apple.pcapd, com.apple.mobile.file_relay, com.apple.mobile.house_arrest와 같은 iOS 내의 파일들이 백도어처럼 작동된다는 것을 설명했다.[* 다만 house_arrest는 즈지아스키 본인이 블로그에서 백도어라기보단, 없어도 되는 특별 권한에 가깝다고 밝혔다. (출처: Apple Confirms “Backdoors”;Downplays Their Severity, 조너선 즈지아스키)] 즈지아스키의 말대로, 백도어란 접근을 용이하게 하기 위해 프론트엔드 보안을 우회하는 미공개 메커니즘을 말한다. 위 파일들은 '''개발자 모드가 켜져 있지 않아도 접근이 가능하다'''든지, Library나 Caches 등 '''필요 이상으로 많은 데이터에 접근'''할 수 있다는 문제가 있었다. 즈지아스키가 가장 우려한 file_relay의 경우 진단 데이터로썬 불필요한 암호화된 백업 데이터나 기본 파일 시스템 등이 우회될 수 있다는 것이 지적되었다. 그가 언급한 위 파일들의 공통적인 문제는 저런 과정들이 사용자에게 보여지게끔 "GUI적인 마련이 되지 않았다"는 것이다. 

이에 대해 애플은 정보 기관을 위해 백도어를 만든 적은 없다고 밝혔다. 애플의 이러한 반응은 사실 초창기 언론 보도가 좀 과장되었기 때문으로, 즈지아스키의 의도와는 달리 백도어란 개념을 극적으로 포장해서 사용하는가 하면 정보 기관으로 정보가 새나간다는 식으로 보도가 되었기 때문이다.[* 사실 IT 보안 쪽에 관심이 있는 사람들은 백도어란 말에 대해 그리 놀라지 않는다. 당장 Android Backdoor나 Windows Backdoor를 검색해보면 관련 뉴스가 수두룩하게 쏟아져 나온다. 워낙 많아서(...) 딱히 놀랄만한 이슈가 안되었을 뿐이다.] 즈지아스키도 본인 블로그에서 몇번이고 강조했지만 그는 자신의 연구 발표에서 애플이 NSA와 같은 정보 기관과 결탁해서 일했다고 주장하지 않았는데 언론이나 대중이 그렇게 받아들이고 있다고 했다. 그는 또한 백도어라는 명칭만이 주목받는 것 또한 불만으로써, 그는 그의 발표에서 악용될 소지가 있는 어택 포인트나 감시 메커니즘들에 대해서도 언급을 했음을 밝혔다.

사실 pcapd나 house_arrest가 사용자의 기기의 문제 해결(troubleshooting)이나 아이튠즈와 Xcode와의 연결을 위해 존재하는 것 자체는 문제가 없고 실제로 그렇게 활용되고 있으며, 이는 즈지아스키도 인정한다. 다만 그가 지적하고자 하는건 어느 iOS 기기에서든 pcapd가 유무선으로 활성화될 수 있다는 것이고 이럴 경우 유저에게 이러한 사실이 인터페이스적으로 전달되지 않는다는 것이다. file_relay 역시 애플케어 팀이 사용자의 구두 동의를 얻어야만 활성화할 수 있는 것이지만, 그럼에도 불구하고 진단 데이터 그 이상의 데이터에 접근이 가능하다는 것은 보안 전문가로써 충분히 우려할 만하고 문제제기를 할 수 있는 것이다.

즈지아스키는 백도어 말고도 iOS 보안의 약점에 대해서도 설명을 했는데 이건 바로 페어링이다. 이전 설명에서 인용됐던 트위터리안은 페어링을 통해 애플이 사용자 데이터를 빼간다고 서술했는데, 이건 즈지아스키의 발표 내용을 잘못 이해한 것이다. 페어링과 관련된 보안 이슈는 사실 모든 모바일 기기와 관련한 것이다. 페어링이 그만큼 우리 생활에서 빈번하게 발생하기 때문이다.[* 해당 트위터리안은 안드로이드 기기는 컴퓨터에 연결할 일이 없다고 했는데, 그것은 섣부른 일반화이다. 그리고 페어링을 단순히 사용자의 컴퓨터와 모바일 기기를 연결하는 것만으로 보는 것 자체가 페어링의 개념을 너무 좁게 해석하고 있는 것이다. 당장 블루투스 헤드폰을 사용할 때도 기기 페어링을 해야 한다.] iOS의 경우, iOS 6 기기가 미리 조작된 써드파티 충전기에 연결되었을 때 보안이 뚫리는 일이 있었다. 이는 곧이어 출시된 iOS 7에서 애플이 해결을 하였는데, 애플이 내세운 방식은 바로 “신뢰하시겠습니까”라는 팝업 메시지를 띄우는 것이었다. 즉, 연결된 장치를 신뢰할지 안할지는 사용자의 의사에 맡기겠다는 것이었는데 즈지아스키는 이것만으론 부족하다고 지적하는 것이다. 그의 발표 ppt를 인용하자면 “iOS 7의 신뢰하시겠습니까 문구는 도움이 되긴 하지만, 써드파티 악세사리들은 사람들을 다시한번 어리석게끔 만들고 있다 … 그리고 사람들 역시도 원래부터 어리석다(stupid).” 어쨌거나 즈지아스키는 페어링을 이전에 한번이라도 했던 기기 목록을 사용자가 볼 수 있고 필요하다면 삭제할 수도 있도록 하는 인터페이스를 추가해야 한다고 제안했다.

뒤이어 애플은 백도어 논란이 된 파일들의 기능을 설명하는 [http://support.apple.com/kb/HT6331 페이지]를 따로 마련하였다. 즈지아스키는 이를 두고 “이런 기능이 있다는 것을 인정했다는 점, 적어도 그러한 기능이 왜 존재하는지에 대해 알고 싶어하는 사람들을 위해 답을 제공한다는 점에서 애플이 잘했다고 본다.” [* 원문: “I give Apple credit for acknowledging these services, and at least trying to give an answer to people who want to know why these services are there”] 또 그는 “그러나 애플은 이 기능들이 할 수 있는 것들에 대해 그다지 중요하지 않다고 호도하는 것처럼 보이며, 이는 나를 걱정시킨다 … 내 생각에 애플은 이를 중요하지 않다고 여기면서도 다음 버전(의 iOS)에서 내가 제기한 문제들의 상당수를 조용히 고칠 것으로 본다. 적어도 그렇게 희망한다. 특히 대중이 이것에 대해 알고 있는 상황에서 애플이 이 문제에 대한 해결을 시작하지 않는 것은 무책임한 일일 것이다.”라고 밝혔다.

마지막으로 즈지아스키는 블로그에 올린 글에서 다음과 같이 마무리를 지었다. “백도어는 비밀이 아니다. 그러나 오용될 경우 위험해질 수 있다. 저번에도 말했지만, '''호들갑 떨지 마라.''' 나는 절대로 음모론을 제기한 적이 없다. 늘 그래왔듯이, 매체는 내 발표의 의도를 완전히 다른 방향으로 틀어 버렸다.” (원문: Back doors aren’t secrets, but they can be dangerous if misused. As I’ve stated before, DON’T PANIC. I have never suggested this was a conspiracy. As usual, the media has completely derailed the intention of my talk.)

== [[아이튠즈]] ==
컴퓨터랑 연결을 하면 [[아이튠즈]]를 통해서만 음악이나 동영상등의 컨텐츠를 주고 받게 되어있다. 이는 생태계 구축과 보안과 관련된 것으로, [[애플]]은 기본적으로 컨텐츠 단위의 파일 관리와 컨텐츠 거래를 선호했고 아이폰과 아이패드가 처음 나왔을 당시만 해도 단점은커녕 [[아이팟]]등을 이용하던 애플 사용자들에게 당연한 것으로 다가왔기 때문에 큰 문제가 제기되지 않았다. 애초에 아이팟 첫 세대만 해도 맥 유저들만 사용할 수 있었고, 아이튠즈는 매킨토시 기본 멀티 미디어 앱이었으므로 전혀 이상한게 없었다. 또한 한국과는 달리 아이튠즈 스토어가 활성화된 곳에서는 음악과 동영상 구매 용도로도 많이 쓰인다. 또한 아이튠즈는 리패킹 앱과 복제앱 사용을 억제하기도 하는 등의 보안 관련 역할도 한다. 문제가 있다 싶은 앱들은 아이튠즈가 동기화 과정에서 걸러 버리기 때문이다.  

그러나 이후 [[아이폰]]과 [[아이패드]]등의 발전 방향이 다용도기기가 되어 가면서 사용자들이 점차 컴퓨터에서 기대할만한 각종 컨텐츠 관리와 문서작성, 확인 용도로 사용하기 시작했고, 원래 음악과 동영상 파일 정도를 구매하고 관리하는데 최적화 되었던 아이튠즈는 점차 한계를 드러내기 시작했다. 애플도 이를 아는지라 지속적으로 아이튠즈의 기능을 넓히고 있으며 이와 동시에 써드파티 앱 개발자들도 [[앱스토어]]에 계속해서 파일 관리 앱을 올려왔기 때문에 파일 관리에 큰 문제는 없다고 볼 수 있겠다. 이런 앱들은 2010년-11년에 처음 올라오기 시작했고 무료 앱도 많기 때문에 그 이후로는 파일 관리에 별 문제가 없었다. 아이튠즈 동기화 기능을 사용하는게 아니라 아이튠즈를 키고 파일들을 해당 앱에 드래그해서 넣으면 되는데, 이런 앱들은 최소 2010년-11년에 이미 등장했다. 그 이후로는 파일 관리에 별 문제가 없으며 캡슐화된 써드파티 앱이 파일 관리를 전담하기 때문에 웹페이지에서 뭘 다운받든 OS차원에서 보안에 문제가 없다. 또한 애플 역시 iOS 5부터 OTA와 무선 동기화를 지원하고 iOS 7에서 AirDrop을 지원하는 등 본연의 기능을 넓히고 있다. OS 차원에서의 파일 관리는 아무래도 보안 때문에 어떤 기막힌 해결책이 나올 때까지는 지금처럼 써드파티 앱들에 맡길 것으로 보인다.

2011년부터는 사실상 기기를 컴퓨터에 연결하지 않고도 파일을 주고받을 수 있는 앱들이 많이 등장하였는데, 이런 앱들을 통해 iOS 기기들을 USB 메모리처럼 사용할 수도 있다.

== 멀티태스킹 ==
처음에는 제한적인 멀티 태스킹만이 가능했고, 거의 패스트 스위칭에 가까웠다. iOS 4 이전에도 전화나 음악 재생의 경우 다른 작업과 병행할 수 있었으며 이는 [wiki:"아이폰/1세대" 1세대] 때부터 가능한 것이었다. 당시 리뷰어들 중에서도 멀티태스킹이 안된다고 문제삼는 사람은 별로 없었다.

iOS 4 이후부터 '''모든 앱에 적용되는''' 멀티태스킹 기능이 본격적으로 지원되었으며, 이는 PC의 [[멀티태스킹]]과는 약간 다른 개념이다. 무슨말이냐면 PC와 같은 멀티태스킹도 가능한데 여기에 패스트 스위칭이 공존한다고 보면 된다. 하지만 이것도 엄밀히 말하면 음악재생, 위치탐색, mVoIP와 같은 제한된  API를 사용하는 앱들에게만 개방된 멀티태스킹이었다. 그래도 일상적으로 쓰는데는 문제가 없을정도로 열어두었지만 2013년 WWDC에서 발표된 iOS7에서부터는 '''모든 앱들'''에 대해서 멀티태스킹을 지원하면서 개발자들이 마음만 먹으면 진정한 멀티테스킹을 구현하는 것이 가능해졌다. 다만 여전히 안드로이드와는 좀 다르다. iOS7에서는 사용자의 앱사용 유형과 시간을 스스로 분석해서 자주 쓰는 앱이나 특정 시간대에 쓰는 앱은 미리 백그라운드에 로딩을 시켜주는 것을 구현해준다고 한다. 기존의 iOS 멀티태스킹보다 훨씬 나아진 환경을 보여줄 것으로 기대된다.

=== 패스트 스위칭 ===
패스트 스위칭이 적용되는 앱의 경우, 홈버튼을 누르면 사용하던 앱이 "정지 상태(Suspended State)"가 되며 CPU 시간이나 배터리 소모를 하지 않는다. 다만 홈버튼을 누르기 직전의 상태가 기억되기 때문에 아예 앱이 종료가 되는 것은 아니다. 

"정지 상태(Suspended State)"의 앱은 CPU 시간이나 배터리 소모를 하지 않는다. 다만 메모리는 차지하게 되는데, 사용 중에 메모리가 부족해질 경우 iOS는 정지 상태의 앱을 종료 상태(Not Running State)로 변환하고 자동으로 메모리를 반환시킨다. 이렇게 시스템이 알아서 처리해주기 때문에 사용자는 메모리 관리에 신경을 쓰지 않아도 된다. 인터넷 상에서 잘못 퍼져 있는 정보인데, 홈버튼을 두번 누르면 나오는 하단 바의 앱 목록은 이론적으로는 배터리 소모와는 별 관련이 없으므로 배터리 때문에 일일이 다 꺼줄 필요는 없다. 다만 하단 설명을 보면 알겠지만 요새는 백그라운드 작업을 지원하는 앱이 많아져서 멀티태스킹이 활발하게 이루어지고 있다. 그러므로 백그라운드 작업을 할 것 같은 앱의 경우 설정에서 백그라운드 작업을 끄든지 아니면 앱 목록에서 꺼두는게 낫다.

=== 백그라운드 작업 ===
그러나 백그라운드 작업이 필요한 경우가 있을 수 있다. 그런 앱들은 백그라운드 작업 '''10분 연장 처리'''가 된다. 10분이 지났는데 작업이 안끝났다? 그러면 10분을 더 준다. 작업이 끝나면 앱은 곧 정지 상태가 된다. 그 외에도 음악 재생, 백그라운드 위치 추적, VOIP 콜 수신(Skype 등), 새로운 컨텐츠 다운로드중인 뉴스가판대 앱, 백그라운드에서 외부 장치로부터 지속적인 업데이트를 받는 앱은 백그라운드에서 '''무기한 동작'''하도록 시스템적 허용이 된다. 즉, 백그라운드 작업이 필요한 앱의 경우만 시스템 안에서 처리 허용하고 그외의 경우는 정지 상태로 놔두는 것이다.

이러한 특징은 멀티태스킹을 어느 정도 허용 하면서, 동시에 쓸데없는 백그라운드 작업을 막음으로서 불필요한 버벅임, 프리징이나 앱 충돌이 벌어지는 경우를 막기 위해서다. 진짜 컴퓨터 처럼 정지 상태 같은거 넣지 말고 그냥 무제한 멀티태스킹을 지원하면 좋지 않을까 생각하는 사람들이 많은데, 스마트폰은 컴퓨터와 비교하면 굉장히 제한적인 하드웨어를 갖고 있고, 컴퓨터와는 다르게 배터리 소모율과 전화기로서의 사용도 예상을 해야만 한다.[* 이건 컴퓨터도 사실 마찬가지다. 노트북이 배터리가 줄면 자동으로 성능을 조금 낮춰버리는 걸 생각하면 된다.] 안드로이드 OS 기기들은 백그라운드 작업을 따로 제한하지 않기 때문에 필요없는 백그라운드 작업이 계속되거나 앱 충돌이 일어나기도 한다. 구형 안드로이드 폰 모델들은 프리징 때문에 전화가 와도 전화를 못 받을 정도로(...) 막장이 되는 사태도 종종 있었다. 
현재는 안드로이드가 멀티태스킹에 더 유리하고 더 안정적이다. 안드로이드가 버전업하면서 OS가 더 가벼워지고 더 안정적으로 발전하는 동안 iOS는 버전업하며 꾸준히 무거워지고 불안정(...)해진 결과이다.

iOS가 제대로 백그라운드 실행을 지원할 수 없는 이유는 자원을 효율적으로 활용하기 위해서가 아니라 활용할 자원이 없기 때문이다.
안드로이드 기기들이 기본 2기가에서 많으면 3기가 메모리를 장착하고 나오지만 애플제품은 대체로 메모리가 박하게 잡혀있다. 2014년 후반기에 나온 아이폰6, 6+의 메모리가 1기가(...) 에 불과해서 멀티태스킹은 고사하고 웹서핑하다가도 사파리가 강제종료되는 일이 왕왕 발생한다. 이런 상황에서 백그라운드 실행을 기대하는 것은 무리다.

iOS7부터는 백그라운드를 제한하지 않지만 아직 모든 앱이 여기에 맞춰진 것은 아니다.

=== 멀티태스킹 지원범위 ===
현재 앱스토어에는 백그라운드에서 작업을 반드시 해야 하는 애플리케이션이 이미 많이 올라와 있다. 예를 들어, 사용자의 걸음걸이와 이동경로를 실시간으로 체크하는 앱이 있다. 잠을 잘 때 잠꼬대를 자동으로 감지하여 녹음하는 앱도 있다. 또한 파일 다운로더 앱도 있고, 게임 내에서 업데이트를 해야 하는 앱도 있다. 이런 앱들은 모두 백그라운드 작업을 요구하며, 애플은 이에 대해 제한을 하지 않고 있다.[* 당연한 소리겠지만 예외는 있을 수 있다. 가령 하드웨어적으로 안되면 그냥 안될 수밖에 없는 거다.]

따라서 iOS에서 멀티태스킹은 불완전한 멀티태스킹으로 출발했기 때문에 결국 한계가 있다는 주장은 서서히 설득력을 잃어가고 있다. iOS 4가 업데이트되었을 때 사람들이 "뭐야? 이건 패스트 스위칭일 뿐이잖아?"라고 비판을 했던건 당시 사람들이 주로 사용하던 앱들이 멀티태스킹에 맞춰서 개발된 것이 아니기 때문이었다. 시간이 흐르면서 개발자들도 자신들의 앱에 필요하다면 얼마든지 백그라운드 작업을 요구할 수 있게 되었고, 현재 출시되어 있는 앱들은 웬만하면 백그라운드 작업을 지원한다.

따라서 iOS 멀티태스킹에 대한 가장 정확한 평가는 '''멀티태스킹을 지원하되 정지 상태, 10분 허용 상태를 추가하여 불필요한 백그라운드 작업을 막은 것'''이라고 보는게 옳다. 

하지만 iOS7부터는 모든 앱들에 대한 멀티테스킹을 지원하기 때문에 (바꿔 말해 훨씬 더 많은 API를 사용하는 앱들에 대해서) 백그라운드 작업이 훨씬더 유용해질 것으로 보인다.

=== 배터리 ===
다만 백그라운드 작업을 요구하는 앱의 수가 많아지면서 예상하듯이 배터리가 빠르게 소모되는 일이 있을 수 있다. 시간이 흐르면서 멀티태스킹으로 불만을 터뜨리는 일은 거의 없어졌지만 배터리에 대한 불만은 계속 남아있다는 것이 이를 증명한다.

iOS 유저들 중에는 왜 휴대폰을 가만히 놔뒀는데 배터리가 닳아 있냐고 불만을 표하는 사람들이 있는데, 이건 기기 문제가 아니라 백그라운드 작업 때문이다. 본인이 특정 앱에 싱크, 실시간 푸시, 자동 업데이트, 다운로드, 자동 알림 등을 허용했다면 웬만하면 꺼두는게 좋다. 특히 별로 사용하지도 않았는데 배터리가 알아서 줄어있다면 이건 십중팔구 멀티태스킹이 제대로 돌아가고 있다는 거다(...) --안될 땐 안된다고 뭐라하고 되게 하면 된다고 뭐라하고...-- iOS7버전부터는 이런거 다 설정해주고 앱하나 켠거없이 배터리가 실시간으로 융해되는 증상이 발생되고있어 빈축을 사고있다.

다행스럽게도 비디오나 게임처럼 배터리를 정말 많이 요구하는 앱의 경우, 정지 상태가 적용된다. [[EA]]와 같은 대기업 게임들은 사용자 데이터를 공유하게끔 자동 설정되어 있는 경우가 있다. 게임을 받으면 게임 내 설정 또는 iOS 설정에서 그런 옵션이 있는지 확인하고 끄는 것이 좋다.

== 안정성 ==
위에 언급한 특징들과 마찬가지로 유닉스 기반의 높은 최적화 수준을 자랑하며 높은 안정성을 보장한다. 안정성 측면에서 말하자면 '''몇 달'''을 재부팅 없이 써도 메모리 누수나 속도 저하 등의 문제가 일어나지 않는 수준이다. 실제로 2년 가까이 한번도 기기를 완전종료하고 다시 켜본일이 없는 사람들도 꽤 존재하는데 보통 이유를 물어보면 "어떻게 해야 완전 종료되는지 몰라서"라고 대답하는 경우가 많다.

iOS 7 업데이트 이후로는 많은 사용자가 white screen of death라는 치명적 오류가 발생하고 있다고 한다. 오히려 안드로이드 4.4 킷캣이 더 안정적이라는 의견도 있고 실제로도 사실로 밝혀졌다. [http://www.phonearena.com/news/Android-4.x-is-more-than-twice-as-stable-as-iOS-7.1_id54459]

하지만 객관적 자료로는 크래시 확률이 6.X 보다 7.0x에서 더 줄어들었으며 7.1에서는 6.X은 물론 7.0x에 비해서도 더 획기적으로 줄었다.[http://recode.net/2014/03/17/app-testing-firm-says-crashes-are-down-significantly-with-ios-7/ 출처.] 이 오류는 7.1에서 수정되었다.

일부 통계를 들어 iOS가 앱 크래시 확률이 안드로이드에 비해 더 높다는 주장이 한때 유행한 적이 있었는데, 이에 대해서 Forbes에서 [http://www.forbes.com/sites/tomiogeron/2012/02/02/does-ios-crash-more-than-android-a-data-dive 관련 칼럼]을 쓰기도 했다. iOS의 경우 새 버전이 업데이트되고 나서 한두달 정도는 앱 크래시 확률이 안드로이드에 비해 높은 경향이 있는데 이건 새 OS로 갈아타는 속도가 다른 모든 운영 체제에 비해 경이롭게 빠르기 때문이다.[* 여기엔 iOS 5 이후로 선보인 (굳이 컴퓨터에 연결을 하지 않아도 되는) Over the Air, 무료 업데이트 등의 이유가 있다.] 특히 iOS의 경우 구형 기기에 대해서도 OS 지원이 수년에 걸쳐 길다 보니 얼마 지나지 않아 새 버전 iOS의 사용자가 압도적으로 많아지게 된다. 그러다 보니 새 버전의 OS를 써드파티 앱들이 안정적으로 지원하기 위해선 최소 한번 이상의 업데이트가 필요하기 때문에 초기에는 크래시 확률이 높아질 수밖에 없는 것이다.
== 기타 ==
iOS 5 이전에는 통화/메시지 목록 개별 삭제 기능이 없었다.[* 특히 유부남들이 당혹스러워 했다고...]

iOS 기반 기기들에 애플이 애플 계정 활성화 횟수 제한을 걸었다는 소문이 있다. 실제로 중고거래를 통해 이리저리 많이 돈 기기에서 어떻게 해도 애플 계정이 활성화되지 않는다는 사례가 나오고 있다. 다만 이런 경우, 판매자가 등록된 계정을 해제하지 않고 판매해서 그런 것이라는게 중론.

= 주요 기능 =
== SpringBoard(홈 화면) ==
iOS의 홈 화면과 기타 중요한 부분들을 담당하는 [[응용 프로그램]]의 이름. 낮은 하드웨어 사양으로도 부드러운 움직임을 보여주는 것이 특징이다. 이 이름의 유래는 응용 프로그램을 실행하면 응용 프로그램 화면이 스프링처럼 톡 하고 튀어오른다고 해서 붙여진 것. 최대 11개의 페이지로 구분되는 4*5 크기의 응용 프로그램 아이콘과, 그 아래에 있는 4개의 고정된 아이콘(독, Dock)으로 구성된다. [[Windows 8]]의 시작 화면이나 [[OS X]]의 Launchpad[* Launchpad는 iOS의 SpringBoard에서 따온 것이다.]라고 생각하면 편하다. SpringBoard에서 가장 왼쪽에 있는 페이지는 아래에 설명할 'Spotlight' 기능이 차지하고 있다. 다만 [[아이패드]]의 경우 독에 6개의 아이콘까지 추가할 수 있으며, 화면 크기가 [[아이폰 5]]와 [[아이팟 터치 5세대]]의 4인치 디스플레이보다 위아래로 짧은 [[아이폰 4S]] 이전 기기나 [[아이팟 터치 4세대]] 이전 기기의 SpringBoard 아이콘 배열은 4*4 크기다.

사용자는 설치된 응용 프로그램을 길게 누른 후 원하는 대로 끌어서 이동해 배치할 수 있으며, 아이콘 위에 다른 아이콘을 겹쳐서 올려두면 폴더가 생성되어 아이콘을 묶어서 관리할 수 있다. iOS 4에서 이 폴더 기능이 추가되기 전까지는 11페이지*16개 + 독에 4개 해서 최대 180개(빌트인 애플리케이션 포함)까지의 애플리케이션만을 설치할 수 있었다. 의외로 이 제한을 꽉 채워서 애플리케이션을 설치하는 사람들이 꽤 있어서 불만을 샀던 부분. 현재는 폴더 기능이 추가됨에 따라 최대 2,160개의 애플리케이션을 설치할 수 있게 되었다.

과거부터 현재에 이르기까지 가장 심플하고 예쁜 UI로 꼽히며, 이는 상하좌우 플리킹만을 적용한 군더더기 없는 직관적인 인터페이스를 추구했기 때문이다. 스마트폰 시장에서 안드로이드의 점유율이 매우 높아짐에 따라, 안드로이드 [[진저브레드]] (그리고 아이스크림 샌드위치)의 화려한 3D UI나 윈도우 폰의 메트로 UI등 경쟁 플랫폼의 세련된 인터페이스에 밀려 디자인 개선 작업이 필요한 것이 아니냐라는 의견이 대두되고 있다. 다만 이미 익숙해진 사용자들이 대다수이며 태블릿 컴퓨터 시장은 애플이 장악하고 있다는 현실 때문에, 자잘한 변화라면 몰라도 큰 변화는 없으리라 예상하는 입장도 있다. 일례로, [[OS X]] 역시 UI의 기본 골격은 2000년대 초 첫 출시 때부터 거의 달라진 게 없으며, 심지어 90년대의 작품인 [[Mac OS]]에서부터 유지되는 특징들도 제법 있다. [* 안드로이드의 점유율은 이미 iOS를 추월한지 오래. 하지만 [[WWDC]]를 보면 애플은 이에 대해 별 걱정을 안하는 듯 하다. 태블릿 컴퓨터 시장에서의 압도적인 우위, 애플 기기에서만 사용되는 OS임에도 불구하고 2인자 위치 고수 등의 이유 때문인 것으로 보인다.] 

그리고 이 UI는 iOS7에 들어와서 대대적인 변화를 맞이하게된다. 큰틀에서는 비슷하지만 완전 다른 느낌의 UI가 탄생했다. 자세한것은 [wiki:"iOS/버전#s-7" 항목]을 참조.
== Spotlight ==
||<table align=center> attachment:spotlight.jpg ||
||<:> '''[[iOS/버전#s-7|iOS 7]]'''에서 [[아이패드|iPad]]의 ''Spotlight''(위)와 [[아이폰|iPhone]]의 ''Spotlight''(아래).  ||

맥 [[OS X]]의 Spotlight와 완전히 같은 기능이다. OS X와 마찬가지로 강력한 검색 기능을 자랑한다. 이메일, 문자, 연락처, 음악, 애플리케이션, Podcast, 동영상, 메모, 달력 이벤트 등 기기 안에 들어 있는 대부분의 컨텐츠를 통합해서 검색할 수 있다. 예를 들어 얼마 전에 친구와 '[[엔하위키]]'에 관해 문자를 주고받은 기억이 있는데 정확히 무슨 내용이었는지 다시 찾아보고 싶을 때 스포트라이트에 '엔하'를 입력하면 해당 문자 메시지가 바로 뜬다. 다만 주고받은지 너무 오래된 메시지는 잘 검색해내지 못하고, OS X에 탑재된 스포트라이트와는 달리 애플리케이션 안의 도큐멘트까지는 검색하지 못한다. 즉 Pages에서 작성한 문서 등은 검색해주지 못한다는 것.

고급 사용자의 경우 iOS의 가장 편리한 기능 중 하나로 이걸 꼽는다. 특히 급하게 스케줄이나 주고받은 이메일 등의 내용을 확인해야 할 때 도움이 많이 된다. 다만 기술 특성상 리소스를 많이 먹기 때문에 설정에서 일부 항목 또는 전체를 꺼두는 사람들도 있다.

iOS 7에서는 스프링보드의 1번 창에서 왼쪽으로 넘기는 방식에서 벗어나, 스프링보드에서 화면을 아래로 당기면 검색창이 나오는 형식으로 바뀌어서 어느 페이지에 있든 상관없이 이 기능을 사용할 수 있게 되었다.

다만 지속적으로 데이터를 갱신하는 색인 작업을 하기 때문에 쓸 일이 없는 사람은 꺼버리는 것이 배터리를 눈꼽만큼이라도 아끼는데 도움이 될 것이다.
== [[Siri]] ==
http://upload.wikimedia.org/wikipedia/commons/thumb/3/35/Siri_icon.svg/240px-Siri_icon.svg.png
iOS의 음성 인식 시스템. [[Siri]] 항목 참조.

== 소셜 네트워크 지원 ==
iOS 5부터는 [[SNS]]인 [[트위터]] 기능이 기본으로 내장되어, 트위터 애플리케이션을 실행할 필요 없이 사진이나 동영상 등을 바로 전송할 수 있게 되었다. iOS 6부터 [[페이스북]]도 기본 내장되었다. iOS6에서부터는 탭에서 바로 트윗이나 페이스북에 올릴 글을 작성할 수 있게 되었다. 다만 소셜 네트워크의 경우 트위터나 페이스북 앱을 다운받아 쓰는 사람들이 대부분이고 OS 차원의 기능은 지극히 제한적이라 별로 관심받는 기능은 아니다.

다만 페이스북으로 소셜 커넥션을 어느정도 구축했다면 페이스북의 친구 정보를 "연락처" 앱으로 싱크하는 기능은 상당히 쓸만한 편이다. 페이스북 친구가 많다면 어느새 연락처 앱이 페이스북 친구들의 정보로 꽉 차 있는 것을 볼 수 있다. 하지만 이 기능은 문제가 하나 있는데 만약 페이스북에 친구가 주소록에 저장해둔 이름과 같은 이름이면 아무런 상관없이 자동으로 연락처가 링크가 돼서 문제가 없지만 페이스북에 친구가 쓰고 있는 이름이 ~~보통 영어로 돼있다던지~~ 주소록에 있는 이름과 다른 경우 일일이 수동으로 페이스북 연락처와 주소록 연락처를 링크 시켜줘야한다. 그런데 이렇게 하면 문제가 되는 것이 처음에는 자신이 지정한 이름을 대표이름으로 설정 할 수 있지만 시간이 지나면 자동으로 다시 친구가 페이스북에서 쓰고 있는 이름으로 바뀌어버린다. 몇번이고 몇번이고 다시 지정해줘도 페이스북이름으로 돌아가버려서 페이스북과의 연동을 끊어버리던지 아니면 사진이나 정보가 자동으로 업데이트 되는것의 편리함을 못버려서 그냥 포기하던지 하는 상황이 벌어진다. 이 현상은 아마 버그로 추정되는데 iOS6이 최초로 나올때부터 수정이 안되고 있다. 차기 버젼을 기대해보자(...)

== [[iCloud]] ==
http://www.apple.com/v/icloud/m/images/icon_hero_icloud_large.png
[[iCloud]]는 iOS 5에서 추가된 기능 중 하나로서 [[클라우드 컴퓨팅]]의 일종이다. 이 기능의 추가로 '''동기화의 필요성이 거의 없어지고''' 자동으로 모든 데이터가 서버에 백업되는 등 iOS 기기 사용에 큰 변화를 가져왔다. 정확히 말하자면 사용자가 직접 아이튠즈에 기기를 물려서 사용자의 PC와 동기화할 필요가 없어진다는 것. 애플 서버와의 동기화는 계속 자동으로 이루어진다.

= 시장 점유율 =
== 세계 점유율 ==
2014년 3월 기준으로 [http://www.netmarketshare.com/operating-system-market-share.aspx?qprid=10&qpmr=1000&qptimeframe=M&qpsp=182&qpcustom=&qpcustomb=&qpcustomd=1 실시간 운영체제 점유율 분석]에 따르면 iOS의 총 점유율은 [[아이패드]] 29.58%, 아이폰 23.15로 총 50%가 넘으며, 나머지는 안드로이드가 33% 정도, 그외 운영체제가 14% 정도이다.

세계 점유율을 볼 때 iOS의 점유율은 딱히 오르지도 떨어지지도 않고 있다. 4분기에 신제품이 출시되는 경우, Q4에 점유율 19% 내외까지 오른다. 그랬다가 신제품이 나오기 직전분기인 3Q에는, 예를들어 2013년 Q3에는 14%까지 떨어지는 등[http://www.businesswire.com/news/home/20131029006844/en/iOS-Smartphone-Market-Share-Stagnant-14-Windows 2013 Q3 세계 스마트폰 OS 점유율 자료] 15%내외로 떨어지고 신제품 나오면 다시 오르고를 몇년 째 반복하는 중. 그 동안 스마트폰 OS의 왕좌는 [[심비안]]에서 [[안드로이드]]로 넘어갔는데도 iOS의 점유율은 별 변화가 없다.

물론 시장 점유율을 실제 사용률과 동일시하는건 어폐가 있다. 시장 점유율을 실제 사용률과 같은 의미로 사용하는 사람은 그냥 시장 점유율의 정의를 잘 모른다고 봐도 된다. 시장 점유율은 '100명 중 몇 명이 사용하는가'의 척도는 아니다. 시장 점유율(Market Share)이란 '''일정 기간의 판매량 중 한 기업이 차지하는 판매량 비율'''을 의미할 뿐이다.[* 참고로 매킨토시의 경우 시장 점유율이 매 분기마다 꽤 높아서 애플도 키노트에서 이걸 은근히 강조하는 경향이 있는데, 이건 그냥 PC의 교체주기가 긴데다가 이미 PC 시장은 포화상태에 접어들어 시장 점유율이 많이 상승하지 않기 때문이다. 결국 실제 사용률은 시장 점유율과는 크게 달라서, 여전히 시장에서 대다수가 사용하는 OS는 여전히 윈도다.]

시장 점유율의 의미를 잘 이해못하거나 통계 하나만 보고 기사를 쓰면 이런식의 [http://news.heraldcorp.com/view.php?ud=20140815000133&md=20140816003021_BK 성급한 결론]을 내게 된다. 기사를 잘 읽어보면 출처 자료는 유럽에서의 지난 12주간의 점유율로 실제 사용률이나 기업이 벌어들인 수익 등과는 상관이 없다. 더욱이 아이폰 6(가칭)이 출시되기 1달도 안남은 상황에서 그전 모델들은 시장 점유율이 낮아지게 된다는 간단한 패턴조차도 고려하지 않은 것이다. 

2013년도 세계 시장점유율은 스마트폰 판매기준으로는 16% 정도에 불과하나 보유 기준으로는 22% 정도이다. (안드로이드 폰은 보유기준 66%)  아이폰의 표면적 시장 점유율이 낮은 것에는 iOS 기기가 안드로이드에 비해 기기 교체 주기가 길다는 것도 한 원인이 될 수 있다. 소프트웨어 장기 지원 등등의 사유로 아이폰의 교체주기는 안드로이드 폰에 비해 긴 편이다. 
그리고 사용자 수는 적어도 매우 활발한 헤비유저 중심으로 이용되고 있다. 웹 싸이트의 스마트폰 사용자 접속 통계으로는 iOS 사파리 브라우저가 48% 정도를 차지해서 크롬/안드로이드 사용자에 비해 사용자 1인당 4배 가량 더많은 활동을 보인다

또한 앱스토어의 성적에서도 2013년의 경우 앱 총 다운로드 수로는 구글 안드로이드 앱스토어가 2배 앞서고 있는데 광고를 포함한 총 매출액으로는 애플 앱스토어가 안드로이드 앱스토어의 2배의 매출을 올리고 있다. 사용자 1인당 앱 매출액 (앱 구입 및 인앱 구매, 광고 포함)은 안드로이드 사용자의 4-5배라는 얘기. 즉 아이폰 사용자들이 앱 구매등 금전 지출에 훨씬 적극적이라는 것. 그래서 개발자들도 돈이 되는 iOS 앱의 출시를 돈이 안되는 안드로이드 앱의 출시보다 더 중시하고 있다. 물론 한국 개발자들은 안드로이드 쪽으로 관심을 더 보이는 경우가 많다.

소위 스마트워크라 불리는 기업에서의 모바일 기기 도입 및 사용 실태를 보자면 iOS는 모바일 OS 중 가장 높은 사용률을 보이고 있으며 이는 수년째 변한 적이 없다.[* 시장 점유율이 늘 이렇게 높았다면 실제 사용률 또한 높다고 추정할 수 있다.] 특히 태블릿 쪽으로 들어가면 기업에서의 [[아이패드]] 채택률이 압도적으로 높다는 것을 볼 수 있다.

단적인 예로, Good Technology에서 제공한 2013년 4분기 [http://media.www1.good.com/documents/rpt-mobility-index-q413.pdf 통계 자료]를 보면 iOS의 기기 활성화(Activation) 빈도수는 전체 모바일 OS의 73%였으며 이는 안드로이드의 26%에 비해 굉장히 높은 것이다. 나머지 1%는 윈도우 기기로 계속 1%대를 유지하고 있다. 이를 스마트폰과 태블릿으로 나눠본다면 2013년 4분기 [[아이폰]] 활성화는 54%로 3분기와 마찬가지로 가장 높았으며 [[아이패드]]는 3분기보단 약간 낮아진 22%이다. 물론 태블릿만 놓고 본다면 아이패드의 기기 활성화 빈도수는 전체 태블릿 기기의 91.4%로 압도적으로 높은 기업 사용률을 보이고 있다. 
== 국내 점유율 ==
국내 점유율은 한자리 수준.[http://economy.hankooki.com/lpage/it/201210/e20121023172101117760.htm 한 기사]에 따르면 점유율이 10%도 못된다고. 즉, 한자릿수라는 것이다. [[윈도폰]]이나 [[블랙베리]]는 0%대의 점유율을 보인다.[http://biz.chosun.com/site/data/html_dir/2013/03/14/2013031402411.html 세계 1위]의 안드로이드 사용률을 자랑(?)한다.  전세계에서 가장 많은 안드로이드 휴대폰을 판매하는 삼성이 있는 대한민국인데다가 한국은 원래부터 자국 제품을 많이 사주는 경향이 있다. 애국심 마케팅이 잘 통하는 것도 이 때문.

물론 저 기사 하나만 두고 iOS 사용자는 10% 뿐이라고 해석하는건 데이터 분석을 완전히 잘못하는 것이므로 주의하자. 전술하였듯이 시장 점유율이란 말은 IT 기자들이나 자칭 전문가들에게 상당히 오용되고 남용되는 경향이 있다. 실제 사용률은 인터넷 사용 점유율, 앱 사용 등등 여러가지 다른 방법으로 측정된다. 

그럼에도 불구하고 확실히 안드로이드 OS가 한국에서 더 자주 쓰이는 이견이 없는 듯 하다. 이유로는 첫째로 대화면을 선호하는 풍토를 이유로 든다. 그런데 아이폰 3G와 아이폰 3GS가 나왔을때는 사람들이 커서 어떻게 주머니에 들어가냐고 그랬다. 사실 대화면을 선호한다기 보단 한국에서 대화면 프리미엄 제품만 출시되서 어쩔 수 없이 그런 풍토가 생긴 것이라는 지적도 있다. 해외에선 삼성이나 LG의 작은 화면의 폰을 쉽게 구할 수 있으며 이들 폰도 상당히 잘 팔린다. 다만 그 작은 화면이라는 것들이 실질적으로 갤럭시 S 시리즈로 대표되는 5인치 이하 제품들인데, 애플이 연구해서 한 손으로도 조작 가능한 작은 화면을 고수하고 있었으나 시장이 이를 가만 내버려두지 않은 것이다. 결국 아이폰 6, 아이폰 6 Plus 에서 각각 4.7, 5.5인치가 됐다. 둘째로, 안드로이드의 개방성이 가지고 있는 편리성등의 성능적인 이유로 들기도 한다. 그런데, 많은 사람들은 스마트폰을 그냥 인터넷되는 피쳐폰으로 쓰는 실정이고, 오히려 나이가 지긋한 분들은 앱이 업데이트 되어서 인터페이스가 바뀌는 겨우 배워놨는데 바뀌었다고 화를 내는 경우도 있는 등 전적인 이유는 아니라는 의견도 있다. 셋째로,  [[삼성]]과 [[LG]]가 [[한국]]의 기업이라는 인식이 강하다보니 삼성, LG사의 제품에 대한 호감이 생김과 동시에 그에 따른 애플에 대한 부정적인 인식이 생기는 등의 감정적인 이유도 있다. 특히 삼성의 경우는 세계 최고의 일류 브랜드라는 인식이 있어서 삼성/비삼성이라는 카테고리가 획고한 사람들이 많다. 마지막으로, 두 회사에 비해 마케팅이나 한국 소비자들에 대한 분석등 애플의 한국시장에 대한 관심 부족 등등이 복합적으로 이루어져서 일어나는 현상인 것으로 보인다. 

그리고 한국은 여러가지 [[어른의 사정]]으로 유독 아이폰 도입이 늦어졌다. 다른 나라들은 우리나라와 달리 아이폰 이전에도, 피쳐폰으로도 일반적으로 와이파이와 인터넷 접속이 가능했고, 심비안 같은 스마트 폰도 어느 정도 팔리고 있었다. 여기에 아이폰이 가세한 형태였다. 그런데 한국은 스마트폰 시장이라고 부를 만한 것이 없었다가 아이폰 3GS가 갑자기 나타나 그야말로 스마트폰 시장의 빅뱅을 일으켰다. 이런 이유로 순식간에 아이폰은 스마트폰 점유율 1위에 올랐다가 단기간에 상당히 빠른 속도로 안드로이드 기기(상당수가 삼성 기기)에 밀려 곤두박질 쳤다. 그래서 이미 스마트폰 시장이 존재하던 다른 나라들과 달리 아이폰 vs. 안드로이드폰의 1대1 대결구도처럼 되었고, 당시 상황은 결국 애플과 삼성의 경쟁이었다. 언론에서도 이런 식으로 애플과 삼성을 견주는 기사가 많이 나왔다. 반면, 해외에서는 스마트폰의 왕자 심비안이 안드로이드의 공세에 몰락하는 동안 iOS가 꾸준히 점유율을 올리는 식으로 진행되었다. 이렇게 전세계 경향과 다른 템포와 방식으로 점유율 변화가 있었기 때문에 한국에서 특히 아이폰이 하락세라는 인식이 쉽게 받아들여졌다. 이 때문인지 언론이나 인터넷에서는 애플이 망했다는 듯한 이야기가 나오고, 사람들 사이에서도 그렇게 받아들여졌다. '애플 몰락설'에 대한 인터넷의 글이나 언론 기사는 꽤 많으며, 최근들어서도 언론이나 인터넷등에서 던지는 떡밥 중 하나다. 그래서 커뮤니티에서는 '이미 망했다던 애플은 도대체 언제 망하냐?'는 농담이 회자될 정도.

국내에서는 [[카카오톡/게임|카카오 게임]]을 시작으로 하여 안드로이드에서만 작동이 가능한 앱들이 압도적으로 많아 비교적 소수인 iOS 유저들의 불만이나 박탈감이 크다.[* [[모두의 게임]]이라는 앱의 경우 아예 안드로이드에서 출시되고 ~~단물 다 빼먹은 뒤에야~~ 수개월이 지난 뒤에야 출시가 됐다.] 재미있게도 안드로이드 시장이 본격화되기 전인 스마트폰 전래 초기에는 앱들이 iOS를 우선으로 취급했으나, 안드로이드 폰들이 압도적으로 많아진 뒤에는 반대로 "iOS는 추후 적용", 심지어 "안드로이드만 지원"을 못박는 앱들이 우후죽순 늘어나고 있다. (비단 게임 뿐만이 아니라 '''[[대학교]] 앱까지 그렇다!''')   

= 기타 = 
== 탈옥 ==
[[wiki:"탈옥#s-2.1"탈옥]] 항목 참조.


== [[유니코드]] 텍스트 렌더링 버그 ==
어떤 [[아랍어]]스러운 문자열을 iOS 6과 OS X 10.8에서 띄우면 프로그램이 뻗거나, 최악의 경우 OS가 탑재된 제품 자체에 치명적인 타격을 준다. [[iOS 괴문자 버그]] 항목 참고. iOS 7과 OS X 10.8.5/10.9 이후로 수정되었다. 현재 iOS 8 에서 '유' 와 'ㅣ' 를 함께 쓰면 '위' 혹은 '워' 로 바뀌는 버그가 있다. 
