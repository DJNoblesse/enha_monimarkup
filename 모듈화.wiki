[[목차]]
== [공장]에서의 모듈화 ==
예컨데 [자동차]의 경우, [엔진], [변속기], [제동장치], ECU, 현가장치 같은 [모듈](부품)들을 공장 하나에서 취급하지 않고 모듈 공장이나 [하청] 등에서 정해진 규정값에 따라 미리 조립한 다음, 생산라인으로 보내 하나로 합치는 시스템.

== [프로그래밍 언어]에서의 모듈화 ==
[프로그래밍 언어]로 [프로그램]을 제작시 생산성과 [최적화], 관리에 용이하게 [모듈](기능) 단위로[* 예컨데 A를 수행하는 기능과 B를 수행하는걸 따로 따로] 분할하는 것. 자세한건 [모듈] 항목 참조.

=== [레벨 디자인]에서의 모듈화 ===
어원은 아마 프로그래밍 쪽에서 온 걸로 추정된다. [[텍스처]]나 [[3D]] 모델 등을 [[http://www.deadmeatstavern.com/hl2_model_browser.htm 이런 식으로]] 조각조각 나눠 규격화된 부품으로 나눈 것. 일부에선 비(非) 코더 쪽에 한해 어차피 [현장 용어]니 편의상 [[직역]]해 부품 혹은 분할화라고도 칭한다.[* 비슷한 사례로 관련 [용어]에 문외한인 [[높으신 분들]]에게 [[버프]]니, [[디버프]] 등을 설명할 때 괜히 복잡하고 애매하게 말한다고 까이기도 한 경우가 있어 이를 [[강화]]나 약(체)화 기술 등으로 풀어 쓰기도 한다.]

장점은 통 모델로 했을 때보다도 다양한 형태로 조립이나 형태 일부도 바꿀 수 있어[* 대표적인 예가 [[하프라이프]]의 과학자들과 [[위험 환경 전투 부대]]. 머리나 무기 종류만 바꿨다.] [[바리에이션]]이 다양하며 해당 레벨에서 [[잉여]]인 부분들을 선택적으로 넣지 않을 수 있단 것이다. 단점은 [[재탕]]이 심하면 소위 이와 관계된 반복 [[패턴]]이 원하든 원치 않든 보인다는 것이다.[* 여담으로 [[자동 생성]]의 원리와는 좀 다르지만 [하프라이프] 텍스처 중 이름 앞에 [[마이너스]]가 붙은 동명의 텍스처들이 있는데, 맵에 사용시 구획별로 -0에서 -9 사이의 텍스처가 해당 맵을 [[로드]]할 때마다 [[랜덤]]으로 결정된다.]
