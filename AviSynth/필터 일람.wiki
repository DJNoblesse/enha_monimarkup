 * 상위 항목 : [[AviSynth]]
 * 관련 항목 : [[동영상 인코더]], [[MeGUI]], [[FFmpeg]], [[H.26x]], [[LAVFilters]], [[프레임 더블링]]

[[목차]]
== 개요 ==
[[AviSynth]]에서 사용되는 필터의 플러그인 및 스크립트 일람이다. [[추가바람]]

== 내장 필터 ==
AviSynth에 기본으로 내장 되어 있는 필터들이다.

==== 미디어 파일 필터 ====
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||
||<#e3e3e3>
AviSource
AviFileSource
OpenDMLSource||Opens an AVI file..||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>DirectShowSource||Opens a filename using DirectShow.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>
ImageReader
ImageSource
ImageSourceAnim||These filters produce a video clip by reading in still images or animated images.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>ImageWriter||Writes frames as images to your hard disk.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>Import||Imports an AviSynth script into the current script.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>
SegmentedAviSource
SegmentedDirectShowSource||This filter automatically loads up to 100 avi files per argument.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>WavSource||Opens a WAV file or the audio of an AVI file.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>SoundOut||SoundOut is a GUI driven sound output module for AviSynth (it exports audio to several compressors).||All audio.||

==== 색 변환 및 조정 필터 ====
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||
||<#e3e3e3>ColorYUV||Adjusts colors and luma independently.||YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>ConvertBackToYUY2||Converts a RGB clip back to YUY2.||RGB24, RGB32||
||<#e3e3e3>ConvertToRGB||Converts to RGB32 unless clip is RGB24.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>ConvertToRGB24
ConvertToRGB32
ConvertToYUY2
ConvertToY8
ConvertToYV411
ConvertToYV12
ConvertToYV16
ConvertToYV24||Converts to RGB24 / RGB32 / YUY2 / Y8 / YV411 / YV12 / YV16 (planar version of YUY2) / YV24 (full YUV).||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>FixLuminance||Correct shifting vertical luma offset.||YUY2||
||<#e3e3e3>GreyScale||Converts a video to greyscale.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>Invert||Inverts selected color channels of a video.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>Levels||The Levels filter scales and clamps the blacklevel and whitelevel and adjusts the gamma.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>Limiter||A filter for clipping levels to within CCIR-601 range.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>MergeARGB
MergeRGB||This filter makes it possible to select and combine a color channel from each of the input videoclips.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>MergeChroma
MergeLuma||This filter makes it possible to merge chroma/luma from a videoclip into another. There is an optional weighting, so a percentage between the two clips can be specified.||YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>Merge||This filter makes it possible to merge both luma and chroma from a videoclip into another. There is an optional weighting, so a percentage between the two clips can be specified.||
||<#e3e3e3>RGBAdjust||Adjusts each color channel seperately.||YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>ShowAlpha
ShowRed
ShowGreen
ShowBlue||Shows the selected channel of an (A)RGB clip.||YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>SwapUV||Swaps chroma channels.||YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>Tweak||Adjusts the hue, saturation, brightness, and contrast.||YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>UToY
VToY||Copies chroma U/V plane to Y plane.||YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>UToY8
VToY8||Shorthand for UToY.ConvertToY8 / VToY.ConvertToY8.||YUY2, YV411, YV12, YV16, YV24||
||<#e3e3e3>YToUV||Puts the luma channels of two clips as U and V channels. Luma is now 50% grey.||YUY2, Y8, YV411, YV12, YV16, YV24||
==== 오버레이 및 마스크 필터 ====
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||
||<#e3e3e3>ColorKeyMask||Sets the alpha-channel (similar as Mask does) but generates it by comparing the color.||RGB32||
||<#e3e3e3>Layer||Layering two videos.||RGB32, YUY2||
||<#e3e3e3>Mask||Applies an alpha-mask to a clip.||RGB32||
||<#e3e3e3>MaskHS||This filter returns a mask (as Y8) of clip using a given hue and saturation range.||YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>Overlay||Overlay puts two clips on top of each other with an optional displacement of the overlaying image, and using different overlay methods. Furthermore opacity can be adjusted for the overlay clip.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>ResetMask||Applies an "all-opaque" alpha-mask to clip.||RGB32||
||<#e3e3e3>Subtract||Produces an output clip in which every pixel is set according to the difference between the corresponding pixels.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16 (?), YV24||
==== 기하학적 변환 필터 ====
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||
||<#e3e3e3>AddBorders||Adds black borders around the image.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>Crop||Crops excess pixels from each frame.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>CropBottom||Crops excess pixels from the bottom of each frame.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>FlipHorizontal
FlipVertical||Flips the video from left to right/upside-down.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>Letterbox||Letterbox simply blackens out the top and the bottom and optionally left and right side of each frame.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>HorizontalReduceBy2
VerticalReduceBy2
ReduceBy2||Reduces the size of each frame by half horizontally, vertically or in both directions.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>BicubicResize
BilinearResize
BlackmanResize
GaussResize
LanczosResize
Lanczos4Resize
PointResize
SincResize
Spline16Resize
Spline36Resize
Spline64Resize||The resize filters rescale the input video frames to an arbitrary new resolution, using different sampling algorithms.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>SkewRows||SkewRows skews the rows of a clip.||RGB24, RGB32, YUY2, Y8||
||<#e3e3e3>TurnLeft
TurnRight
Turn180||Rotates the clip 90 degrees counter-clockwise / 90 degrees clockwise.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
==== 픽셀 보정 필터 ====
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||
||<#e3e3e3>Blur
Sharpen||This a simple 3x3-kernel blurring/sharpening filter.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>GeneralConvolution||General 3x3 or 5x5 convolution matrix.||RGB32||
||<#e3e3e3>SpatialSoften
TemporalSoften||Removes noise from a video clip by selectively blending pixels spatially/temporally.||YUY2 (SpatialSoften), Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>FixBrokenChromaUpsampling||The free Canopus DV Codec v1.00 upsamples the chroma channels incorrectly (although newer non-free versions appear to work fine). FixBrokenChromaUpsampling filter compensates for it.||YUY2||
==== 타임라인 편집 필터 ====
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||
||<#e3e3e3>AlignedSplice
UnalignedSplice||Joins two or more video clips end to end.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>AssumeFPS
AssumeScaledFPS
ChangeFPS
ConvertFPS||Changes framerate and/or video speed in different ways.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>DeleteFrame||Deletes a single frame, given as an argument.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>Dissolve||Like AlignedSplice, except that the clips are combined with some overlap.	 RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>DuplicateFrame||Duplicates a single frame given as an argument.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>FadeIn0
FadeIn
FadeIn2
FadeOut0
FadeOut
FadeOut2
FadeIO0
FadeIO
FadeIO2||Causes the video stream to fade linearly to black at the start or end.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>FreezeFrame||Replaces all the frames between first-frame and last-frame with a selected frame.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>Interleave||Interleaves frames from several clips on a frame-by-frame basis.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>Loop||Loops the segment from start frame to end frame a given number of times.	 RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>Reverse||This filter makes a clip play in reverse.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>SelectEven / SelectOdd||Makes an output video stream using only the even/odd numbered frames.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>SelectEvery||Selects frames with a fixed period, it is a generalization of SelectEven and SelectOdd.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>SelectRangeEvery||Selects a range of frames with a fixed period.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>Trim||Trims a video clip so that it includes only the frames first_frame through last_frame.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
==== 인터레이스 필터 ====
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||
||<#e3e3e3>AssumeFrameBased
AssumeFieldBased||Forces frame-based or field-based material.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>AssumeBFF
AssumeTFF||Forces field order.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>Bob||Bob takes a clip and bob-deinterlaces it.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>ComplementParity||Changes top fields to bottom fields and vice-versa.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>DoubleWeave||The filter operates like Weave, except that it produces double the number of frames by combining both the odd and even pairs of fields.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>PeculiarBlend||This filter blends each frame with the following frame in a peculiar way.||YUY2||
||<#e3e3e3>Pulldown||This filter simply selects two out of every five frames of the source video.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>SeparateColumns
SeparateRows||Takes a clip and separates the columns or rows of each frame into new frames.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>SeparateFields||Takes a frame-based clip and splits each frame into its component top and bottom fields.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>SwapFields||Swaps the two fields in an interlaced frame.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>Weave||Takes even pairs of fields from a Fields Separated input video clip and combines them together to produce interlaced frames.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>WeaveColumns
WeaveRows||Takes a clip and weaves sets of columns or rows together to produce composite frames.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
==== 음성 처리 필터 ====
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||
||<#e3e3e3>Amplify
AmplifydB||Amplify multiply audio samples by amount.||16 bit, Float||
||<#e3e3e3>AssumeSampleRate||Adjusts the playback speed of the audio.||All||
||<#e3e3e3>AudioDub
AudioDubEx||AudioDub takes the video stream from the first argument and the audio stream from the second argument and combines them. AudioDubEx is similar, but it doesn't throw an exception if both clips don't have a video or audio stream.||All||
||<#e3e3e3>AudioTrim||Trims an audio clip so that it includes only the start_time through end_time.||All||
||<#e3e3e3>ConvertAudioTo8bit
ConvertAudioTo16bit
ConvertAudioTo24bit
ConvertAudioTo32bit
ConvertAudioToFloat||Converts audio samples to 8/16/24/32/Float bits.||All||
||<#e3e3e3>ConvertToMono||Merges all audio channels.||16 bit, Float||
||<#e3e3e3>DelayAudio||Delays the audio track by second seconds.||All||
||<#e3e3e3>EnsureVBRMP3Sync||Corrects out-of-sync MP3-AVI's, when seeking or trimming.||All||
||<#e3e3e3>GetChannel
GetLeftChannel
GetRightChannel||Returns an audio channel from a clip.||All||
||<#e3e3e3>KillAudio
KillVideo||Removes the audio or video from a clip completely.||All||
||<#e3e3e3>MergeChannels||Merges channels of two audio clips.||All||
||<#e3e3e3>MixAudio||Mixes audio from two clips.||16 bit, Float||
||<#e3e3e3>MonoToStereo||Converts two mono signals to one stereo signal.||16 bit, Float||
||<#e3e3e3>Normalize||Amplifies the entire waveform as much as possible, without clipping.||16 bit, Float||
||<#e3e3e3>ResampleAudio||Performs a high-quality change of audio sample rate.||16 bit||
||<#e3e3e3>SuperEQ||High quality 16 band sound equalizer.||Float||
||<#e3e3e3>SSRC||Very high quality samplerate conversion.||Float||
||<#e3e3e3>TimeStretch||This filter can change speed of the sound without changing the pitch, and change the pitch of a sound without changing the length of a sound.||Float||
==== 조건문 및 기타 메타 필터 ====
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||
||<#e3e3e3>ConditionalFilter
FrameEvaluate
ScriptClip
ConditionalSelect||ConditionalFilter returns source1 if some condition is met, otherwise it returns source2. ScriptClip/FrameEvaluate returns the clip which is returned by the function evaluated on every frame. ConditionalSelect returns one frame from several sources based on an integer evaluator.||YUY2 ?, YV12||
||<#e3e3e3>ConditionalReader||ConditionalReader allows you to import information from a text file, with different values for each frame - or a range of frames.||YUY2 ?, YV12||
||<#e3e3e3>WriteFile
WriteFileIf
WriteFileStart
WriteFileEnd||These filters evaluate expressions and output the results to a text-file.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24 ?||
||<#e3e3e3>Animate
ApplyRange||Animate (ApplyRange) is a meta-filter which evaluates its parameter filter with continuously varying (the same) arguments.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24 ?||
||<#e3e3e3>TCPServer
TCPSource||This filter will enable you to send clips over your network. You can connect several clients to the same machine.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
==== 디버그 필터 ====
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||
||<#e3e3e3>BlankClip
Blackness||This filter produces a solid color, silent video clip of the specified length (in frames).||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>ColorBars
ColorBarsHD||This filters produce a video clip containing SMPTE colorbars scaled to any image size.||RGB32, YUY2, YV12, YV24||
||<#e3e3e3>Compare||Compares two clips and prints out information about the differences.||RGB24, RGB32, YUY2, YV12||
||<#e3e3e3>Echo||Forces getframe calls to all input clips. Returns only first clip result.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>Histogram||Adds a histogram.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>Info||Prints out image and sound information.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>MessageClip||Produces a clip containing a text message.||RGB32||
||<#e3e3e3>Preroll||Preroll the audio or video on non linear access.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>ShowFiveVersions||Takes five video clips and combines them in a staggered arrangement from left to right.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16 (?), YV24||
||<#e3e3e3>ShowFrameNumber
ShowSMPTE
ShowTime||Draws text on every frame indicating what number AviSynth thinks it is.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>StackHorizontal
StackVertical||Takes two or more video clips and displays them together in left-to-right/up-to-down order.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>Subtitle||Adds a single line of anti-aliased text to a range of frames.||RGB24, RGB32, YUY2, Y8, YV411, YV12, YV16, YV24||
||<#e3e3e3>Tone||This will generate sound.||Float||
||<#e3e3e3>Version||Generates a video clip with a short version and copyright statement.||RGB24||
 
== 확장 필터 ==
AviSynth v2.5x 이상 버전에서 추가해 사용 가능한 확장 필터 및 플러그인, 사용자 정의 스크립트
==== 소스 필터 ====
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||<width=8%><#dadada>플러그인/스크립트 ||<width=10%><#dadada> 제작자 ||
||<#e3e3e3>BassAudio||Bass Audio decoder. Supports wav, aiff, mp3, mp2, mp1, ogg. Support for aac, ac3, alac, ape, cd, flac, midi, mpc, ofr, spx, tta, wma, wv with additional included dll's. The filter is included in the Behappy package.||N/A||Plugin, x64||dimzon||
||<#e3e3e3>CMVSource||Load Dwarf Fortress CMV and CCMV movies.||RGB32||Plugin||Robert Martens||
||<#e3e3e3>DGAVCDecode||AVC/H.264 decoder plug-in.||YV12||Plugin||Donald Graft||
||<#e3e3e3>DGDecode||Decode MPEG1/MPEG2 streams from: DVD VOBs, captured transport streams, *.mpg/*.m2v/*.pva files, etc. Use this instead of MPEGDecoder/MPEG2Dec3.||YV12, YUY2, RGB24, I420||Plugin||Donald Graft||
||<#e3e3e3>DirectShowSource2||Uses the installed Haali Media Splitter along with its avss.dll AviSynth plugin. Converts vfr files to cfr in order to support frame-accurate seeking.||	||Plugin||	||
||<#e3e3e3>DVInfo||Grabs the timestamp and recording date info from a DV-AVI. ||N/A||Plugin||WarpEnterprises||
||<#e3e3e3>DVTimeStampEx||Shows DV timestamp information over a DV clip.||N/A||Plugin||basilik||
||<#e3e3e3>FFmpegSource||Decodes all ffmpeg (libavcodec) supported A/V formats with frame accurate seeking in AVI, MKV and MP4. ||RGB, YUY2, YV12, I420||Plugin||Myrsloik, TheFluff, Plorkyeran, others||
||<#e3e3e3>HDVInfo||Grabs the timestamp and recording date info out of a M2T-D2V file||N/A||Plugin||paviko||
||<#e3e3e3>ImageSequence||Load png, jpg, bmp, pcx, tga and gif image sequences using the Corona Image I/O Library. CoronaSequence/RawSequence.||RGB32||Plugin||	||
||<#e3e3e3>Immaavs||ImmaRead uses the ImageMagick libraries to read images. Many formats are supported including animations, multipage files, image sequences and images with different sizes.||	||Plugin||Wilbert Dijkhof||
||<#e3e3e3>IUF||Import Uncompressed File. Must be uncompressed! Supported uncompressed Formats: avi, omf(avid), pxr(pixar), mov(24/32bit quicktime), cineon. Can export as well. ||RGB||Plugin||	||
||<#e3e3e3>JpegSource||An advanced JPEG decoder for Avisynth 2.6. ||YV12, YV16, YV24, YV411||Plugin||SEt||
||<#e3e3e3>LSMASHSource||A source plugin for audio and video. ||RGB24, YUY2, YV12, YV16, YV24, YV411||Plugin||VFR-maniac||
||<#e3e3e3>MPASource||A mp1/mp2/mp3 audio decoder plugin. See discussion||N/A||Plugin||WarpEnterprises||
||<#e3e3e3>MPEGDecoder||Load VOB/MPEG-2 ES,PS,TS/MPEG-1 files directly. (deprecated)||YV12||Plugin||	||
||<#e3e3e3>MPEG2Dec||Mpeg2dec is a plugin which lets AviSynth import MPEG2 files. (deprecated)||RGB, YUY2||Plugin||Dividee and others||
||<#e3e3e3>MPEG2Dec3||A MPEG2Dec2.dll modification with deblocking and deringing. Note that the colorspace information of dvd2avi is ignored when using mpeg2dec.  (deprecated)||RGB, YUY2, YV12||Plugin||Marc FD, Nic, Tom Barry, sh0dan and others||
||<#e3e3e3>NicAudio||Audio Plugins for Audio: MPEGAudio/AC3/DTS/LPCM and other uncompressed formats. Formerly known As EvilMPASource. ||N/A||Plugin||Nic||
||<#e3e3e3>OmfSource||Opens the AVID OMF file format (video only, and only works with captured files). ||YUY2, YV12||Plugin||tateu||
||<#e3e3e3>QTSource||Quicktime Import/Export Filter using an existing installation of Quicktime 6/7. ||RGB32, RGB24, YUY2||Plugin||tateu||
||<#e3e3e3>R3DSource||Redcode RAW source plugin to load R3D clips. ||RGB32||Plugin||Gábor Kertai||
||<#e3e3e3>RawSource||Loads raw video data directly from files. See the initial discussion and its continuation.||RGB, YUY2, YV12||Plugin Updated with NV12 Support||WarpEnterprises, Wilbert Dijkhof and sh0dan||
||<#e3e3e3>RawSourceMod||Loads raw video data directly from files. Further modifications (most raw formats, YUV4MPEG2 compatible with latest spec) discussion.||RGB, YUY2, YV12 (for 2.5/2.6), YV24, YV16, YV411, Y8 (for 2.6)||2.5 plugin 
2.6 plugin
msvcr100.dll||Chikuzen||
||<#e3e3e3>Sashimi
(function "RawReader")||Loads raw video data directly from files, similarly to RawSource, but also allows for skipping headers, and extra formats (long list to help anyone doing a search): GREY, Y8, interleaved RGB, BGR (which is RGB24), BGRA (which is RGB32), ARBG, ABGR, RGBA, interleaved YUV (which is YCbCr), YUY2, UYVY, AYUV, planar YUV formats YUV444, YUV422, YUV420 (as YV12), YUV420 (as IMC2), and some raw ImageMagick formats. Some supports for different bit-depths. Includes YUVInterleaved.avsi, InterleavedConversions.avsi, and PlanarConversions.avsi. Discussion.||RGB, YUY2, and YV12.||Plugin with scripts||PitifulInsect||
||<#e3e3e3>VapourSource||VapourSynth script reader for AviSynth2.6x. Discussion.||RGB24, RGB32, YUY2, Y8, YV12, YV16, YV24.||Plugin||Chikuzen||

==== 보정 필터 ====
====== 안티에일리어싱 ======
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||<width=8%><#dadada>플러그인/스크립트 ||<width=10%><#dadada> 제작자 ||
||<#e3e3e3>AAA||Anti-aliasing filter designed for anime. ||YV12||Script||Soulhunter||
||<#e3e3e3>AntiAliasing||Anti-aliasing script for, well, anti-aliasing. ||YV12||Script||SpikeSpiegel, Didée, mf, scharfis_brain and Soulhunter||
||<#e3e3e3>AntiAliasRG||An anti-aliasing script that uses RemoveGrain(SSE3).dll. ||YV12||Script||Bloax||
||<#e3e3e3>DAA||Anti-aliasing with contra-sharpening. Included in AnimeIVTC.||YV12||Script||Didée||
||<#e3e3e3>mcDAA3||Motion-Compensated Anti-aliasing with contra-sharpening by AmjadSONY, can deal with ifade too, created because when applied daa3 to fixed scenes, it could damage some details and other issues. See discussion||YV12||Script||AmjadSONY||
||<#e3e3e3>FAA||Faster Anti-aliasing. [* http://forum.doom9.org/showthread.php?t=83396&page=4]||YV12||Script||list||
||<#e3e3e3>MAA||Anti-aliasing with edge masking. Included in AnimeIVTC.||YV12||Script||martino, Kintaro, thetoof||
||<#e3e3e3>MAA2||Updated version of the MAA antialising script from AnimeIVTC.||Y8, YV12, YV24||Script||line0||
||<#e3e3e3>SAA||A simple anti-aliasing script. ||YV12||Script||Soulhunter||
||<#e3e3e3>SharpAAMCmod||High quality MoComped AntiAliasing script, also a line darkener since it uses edge masking to apply tweakable warp sharpening, "normal" sharpening and line darkening with optional temporal stabilization of these edges. Part of AnimeIVTC. [* http://forum.doom9.org/showthread.php?t=138305][* http://forum.doom9.org/showthread.php?t=140031]||YV12||Script||thetoof||
||<#e3e3e3>TIsophote||A level-set (isophote) smoothing filter[* http://web.missouri.edu/~kes25c/]||YV12||Plugin||tritical||
====== 채도 보정 ======
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||<width=8%><#dadada>플러그인/스크립트 ||<width=10%><#dadada> 제작자 ||
||<#e3e3e3>BT709ToBT601||Convert from BT.709 (HDTV) to BT.601 (SDTV) colorimetry.||YV12||Plugin||Tom Barry||
||<#e3e3e3>ChromaShift||This filter will shift the chrominance information by an even number of pixels, in either horizontal direction. It can also apply an overall vertical shift of the total chrominance information, up or down. It is primarily intended to correct improper colour registration. ||YV12, YUY2, RGB||Plugin||Simon Walters||
||<#e3e3e3>ChromaShiftSP||This script can shift chroma in all directions with subpixel accuracy.||	||Script||	||
||<#e3e3e3>ColorMatrix||ColorMatrix corrects the colors of MPEG-2 streams. More correctly, many MPEG-2 streams use slightly different coefficients (called Rec.709) for storing the color information than AviSynth's color conversion routines or the XviD/DivX decoders (called Rec.601) do, with the result that DivX/XviD clips or MPEG-2 clips encoded by TMPGEnc/QuEnc are displayed with slighty off colors. This can be checked by opening the MPEG-2 stream directly in VDubMod. ||YV12, YUY2||Plugin||Wilbert Dijkhof
tritical (v2.0+)||
||<#e3e3e3>FixChromaBleeding||Fixes area of chroma bleeding by shifting the chroma and lowering the saturation in the affected areas.||YV12||Script||	||
||<#e3e3e3>ReInterpolate411||This is a fast simple filter to correct the improper 4:1:1 => 4:2:2 conversion that seems to occur with some DV/4:1:1 codes when used with Avisynth. It assumes the odd chroma pixels are duplicates and discards them replacing them with the average of the two horizontally adjacent even chroma pixels. It doesn't matter whether the clip is interlaced though it must be in YUY2 format for Avisynth 2.5. There are no parameters, and currently no readme file.||YUY2||Plugin||Alex Jordan||
||<#e3e3e3>ReInterpolate420||Usually, DV decoders upsample PAL DV (which is YV12) to YUY2 using point sampling. This plugin reinterpolates the original chroma samples.||YUY2||Plugin||Tom Barry||
||<#e3e3e3>MoveChroma||MoveChroma is a simple filter combination that helps in moving chroma back, if it has been displaced.||	||Script||Wilbert Dijkhof
Fizick (v3)||
||<#e3e3e3>FixChromaticAberration||FixChromaticAberration resizes (and crops) the red/green/blue channels of the image separately. This helps to minimize the colored edges next to the image corners that result from lenses with chromatic aberration. ||RGB24||Script||	||
====== 디밴딩 ======
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||<width=8%><#dadada>플러그인/스크립트 ||<width=10%><#dadada> 제작자 ||
||<#e3e3e3>AdaptDBMC||Luma / Fade / Blue adaptive debanding script.||YV12||Script||06_taro||
||<#e3e3e3>GradFun2DB||DeBanding Filter. See wikipedia:Color Banding||YV12, YUY2, RGB24, RGB32||Plugin||Prunedtree||
||<#e3e3e3>GradFunkMirror||Script that fixes GradFun2DB's bug that leaves the first 16 pixels on every border unprocessed. Needs GradFun2DB !||YV12, YUY2, RGB24, RGB32||Script||Alain2, MugFunky||
||<#e3e3e3>GradFun2DBmod||An advanced debanding script based on GradFun2DB.||YV12||Script||LaTo||
||<#e3e3e3>GradFun3||This debanding script, part of the Dither package, has several gradient smoothing algorithms, including a bilateral filter. It uses an ordered dithering, which has a good resilience to lossy compression.||YV12, YV16, YV24, Y8, YV411||Script||cretindesalpes||
||<#e3e3e3>flash3kyuu_deband||Fast debanding plugin ported from AviUtl.||YV12, YUY2, YV16, YV24, Y8, YV411||Plugin||SAPikachu||
||<#e3e3e3>LumaDB||Fast debanding filter with luma-adaptive grain and mask. Used to process luma only. ||YV12||Script||06_taro||
||<#e3e3e3>LumaDBL||Fast debanding filter with luma-adaptive grain and mask. Used to process luma only. Works in 16-bit internally and can also input/output 16-bit. ||YV12||Script||06_taro||
====== 디블로킹 ======
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||<width=8%><#dadada>플러그인/스크립트 ||<width=10%><#dadada> 제작자 ||
||<#e3e3e3>BlockKiller||Deblocking filter, ||YV12, YUY2||Script||Jawed||
||<#e3e3e3>BlockTerminator||Deblocking filter, ||YV12, YUY2||Script||foxyshadis||
||<#e3e3e3>DeBlock||Deblocking filter, see discussion, also DGDecode uses DeBlock.||YV12, YUY2||Plugin||Fizick / Manao||
||<#e3e3e3>Deblock_QED||A postprocessed Deblock(): Uses full frequencies of Deblock's changes on block borders, but DCT-lowpassed changes on block interiours. Didée.  For updated Deblock QED see this discussion||YV12||Script||Didée||
||<#e3e3e3>FunkyDeBlock||Deblocking script based on BlindPP and high/low pass separation. ||YV12||Script||Mug Funky||
||<#e3e3e3>MDeblock||Plugin for removing block artifacts, see homepage.||YV12||Plugin||Kassandro||
||<#e3e3e3>SmoothD||Filter to deblock frames while keeping high frequency detail. ||YV12||Plugin||Tobias Bergmann||
||<#e3e3e3>SmoothD2||Deblocking filter. Rewrite of SmoothD. Faster, better detail preservation, optional chroma deblocking. ||YV12||Plugin||Jim Conklin||
||<#e3e3e3>SmoothDeblock3||Slow and complex, but produces very good results - especially on severely blocky sources - in a similar manner to TempGaussMC and QTGMC. See discussion and an overall comment.||YV12||Script||redfordxx||
====== 디할로잉 ======
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||<width=8%><#dadada>플러그인/스크립트 ||<width=10%><#dadada> 제작자 ||
||<#e3e3e3>abcxyz||Filter to remove halos. ||YV12||Script||Didée||
||<#e3e3e3>BlindDeHalo3||Filter to remove edge enhancement artefacts. ||YV12||Script||Didée||
||<#e3e3e3>DeHalo_alpha||Very powerful filter to remove edge enhancement artefacts. ||YV12||Script||Didée||
||<#e3e3e3>Mask_DHA||A combination of the best of DeHalo_alpha and BlindDeHalo3, plus a few minor tweaks to the masking. ||YV12||Script||'Orum||
||<#e3e3e3>YAHR||Basic filter with no variables to remove edge enhancement artefacts.[* http://forum.doom9.org/showthread.php?p=1205653#post1205653]||YV12||Script||Didée||
====== 디더링 및 압축 잡음 ======
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||<width=8%><#dadada>플러그인/스크립트 ||<width=10%><#dadada> 제작자 ||
||<#e3e3e3>aWarpSharpDering||Tries to clean up slight ringing around edges by heavily AWarpSharp-ing the image and then applying it only to the areas where the difference is small enough so detail isn't destroyed.||YV12||Script||Leak||
||<#e3e3e3>BlindDeRing||Deringing filter.||YV12||Plugin||krieger2005||
||<#e3e3e3>EdgeCleaner||A simple edge cleaning and weak dehaloing function. ||YV12||Script||canuckerfan||
||<#e3e3e3>HQDering||Applies deringing by using a smart smoother near edges (where ringing occurs) only. See here and here for details.||YV12||Script||mf||
||<#e3e3e3>HQDering mod||Applies deringing by using a smart smoother near edges (where ringing occurs) only.||YV12||Script||mawen1250||
||<#e3e3e3>LazyDering||Tries to clean up slight ringing around edges by applying aWarpSharp2 only to areas where the difference is small enough so detail isn't destroyed.||YV12||Script||Leak, RazorbladeByte||
||<#e3e3e3>MosquitoNR||A noise reduction filter designed for mosquito noise, which is often caused by lossy compression.||Y8, YV411, YV12, YV16, YV24, YUY2||Plugin||b_inary||
====== 디인터레이싱 ======
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||<width=8%><#dadada>플러그인/스크립트 ||<width=10%><#dadada> 제작자 ||
||<#e3e3e3>Area||A port of Gunnar Thalin's VirtualDub filter "Deinterlace - area based" to AviSynth.||RGB32||Plugin||Donald Graft // Gunnar Thalin||
||<#e3e3e3>BlendBob||Filter designed for use after a smart bob; blends every other frame with the closest matching neighbouring frame. ||YV12||Plugin||Kurt Prünner||
||<#e3e3e3>DGBob||This filter splits each field of the source into its own frame and then adaptively creates the missing lines either by interpolating the current field or by using the previous field's data. ||RGB, YV12, YUY2||Plugin||Donald Graft||
||<#e3e3e3>Decomb||The FieldDeinterlace filter provides functionality similar to the postprocessing function of Telecide. You can use it for pure interlaced streams (that is, those not containing telecined progressive frames). The name refers to the fact that field mode differencing is used.||YV12, YUY2||Plugin||Donald Graft||
||<#e3e3e3>GreedyHMA||GreedyHMA is an Avisynth filter that executes DScaler's Greedy/HM algorithm code to perform pulldown matching, filtering, and video deinterlace. It has pretty much been superceded by Donald Graft's Decomb package. However there may be occasions where it sometimes gives preferable results, especially with some bad PAL clips.||YUY2||Plugin||Tom Barry||
||<#e3e3e3>eedi3||Another edge directed interpolation filter. Works by minimizing a cost functional involving every pixel in a scan line. eedi3 is good for deinterlacing and enlarging images by the powers of 2.||RGB24, YUY2, YV12||Plugin||tritical||
||<#e3e3e3>IBob||Interpolating Bob works identically to the Avisynth built-in Bob filter except that it uses linear interpolation instead of bicubic resizing. ||YV12, YUY2||Plugin||Kevin Atkinson||
||<#e3e3e3>KernelDeint||This filter deinterlaces using a kernel approach. It gives greatly improved vertical resolution in deinterlaced areas compared to simple field discarding. Superceded by LeakKernelDeint, see the description below in this table.||RGB, YV12, YUY2||Plugin||Donald Graft||
||<#e3e3e3>LeakKernelBob||This filter does a full framerate deinterlacing, i.e. it turn 50 fields per second into 50 frames per second. Adapted from Scharfis_brain's script of the same name.||RGB32, YV12, YUY2||Plugin||Kurt Prünner||
||<#e3e3e3>LeakKernelDeint||This filter deinterlaces using a kernel approach. It gives greatly improved vertical resolution in deinterlaced areas compared to simple field discarding. Compared to KernelDeint, it is low-level optimized (for speed) and provides some useful new functionality. As the original author of KernelDeint() states, LeakKernelDeint() is the preferred version to use.||RGB32, YV12, YUY2||Plugin||Kurt Prünner||
||<#e3e3e3>MCBob||Another approach to motion compensated bobbing. No residual combing, Motion Masking adaptive to local complexity, self adaptive error correction for temporal interpolation, Motion Search between fields of same parity, and spatial Interpolation overweights spatio-temporal interpolation. Is SLOW. MCBob + EEDI2 [* http://forum.doom9.org/showthread.php?t=124676#post988224] MCBob + NNEDI [* http://forum.doom9.org/showthread.php?t=129953#post1055263]||	||Script||Didée||
||<#e3e3e3>MVBob||by scharfis_brain [* http://forum.doom9.org/showthread.php?t=84725]||	||Script||scharfis_brain||
||<#e3e3e3>nnedi3||nnedi3 is an intra-field only deinterlacer. It takes in a frame, throws away one field, and then interpolates the missing pixels using only information from the kept field. It also has same rate and double rate modes.||RGB24, YUY2, YV12||Plugin||tritical||
||<#e3e3e3>nnedi3ocl||OpenCL rewrite of nnedi3. ||Y8, YV12, YV16, YV24, YV411||Plugin||SEt||
||<#e3e3e3>QTGMC||by -Vit- [* http://forum.doom9.org/showthread.php?t=156028] A new deinterlacer based on TempGaussMC_beta2. It's faster and has a presets system for speed/quality selection. There are also several new features including progressive support and noise/grain processing. The script also contains extensive comments to better describe the settings and the workings of the TGMC algorithm.||	||Script||-Vit-||
||<#e3e3e3>SangNom||A single field deinterlacer, can also be used for anti-aliasing. ||YV12||Plugin||Marc FD||
||<#e3e3e3>SangNom2||Reimplementation of the old SangNom plugin. ||Y8,YV12, YV16, YV24, YV411||Plugin||tp7||
||<#e3e3e3>Securebob||type=2 or type=3. (part of MVbob) [* http://web.archive.org/web/20080924163957/http://home.arcor.de/scharfis_brain/mvbob/]||	||Script||scharfis_brain||
||<#e3e3e3>SecureDeint||(part of MVbob) [* http://web.archive.org/web/20080924163957/http://home.arcor.de/scharfis_brain/mvbob/]||	||Script (?)||scharfis_brain||
||<#e3e3e3>SmoothDeinterlace||by Gunnar Thalin [* http://www.guthspot.se/video/AVSPorts/SmoothDeinterlacer/]||	||Plugin||Gunnar Thalin||
||<#e3e3e3>TDeint||TDeint is a bi-directionally, motion adaptive (sharp) deinterlacer. It can also adaptively choose between using per-field and per-pixel motion adaptivity. It can use cubic interpolation, kernel interpolation (with temporal direction switching), or one of two forms of modified ELA interpolation which help to reduce "jaggy" edges in moving areas where interpolation must be used. TDeint also supports user overrides through an input file, and can act as a smart bobber or same frame rate deinterlacer, as well as an IVTC post-processor. ||YUY2, YV12||Plugin||tritical||
||<#e3e3e3>Telecide Hints||The filter process the stats file to get the usual progressive matches and identify VFR sections.||	||Plugin||	||
||<#e3e3e3>TempGaussMC||Motion-compensated bob deinterlacer, based on temporal gaussian blurring. reduces noise/grain of the source and does NOT leave the original fields unchanged. Output is rich with details and very stable. Is SLOW||YUY2, YV12||Script||Didée||
||<#e3e3e3>TomsMoComp||This filter uses motion compensation and adaptive processing to deinterlace video source (not for NTSC film). ||YUY2, YV12||Plugin||Tom Barry||
||<#e3e3e3>Yadif||Port of YADIF (Yet Another DeInterlacing Filter) from MPlayer by Michael Niedermayer (http://www.mplayerhq.hu). It check pixels of previous, current and next frames to re-create the missed field by some local adaptive method (edge-directed interpolation) and uses spatial check to prevent most artifacts.||YUY2, YV12||Plugin||Fizick||
||<#e3e3e3>Yadifmod||Modified version of Fizick's avisynth filter port of yadif from mplayer. This version doesn't internally generate spatial predictions, but takes them from an external clip. It also is not an Avisynth_C plugin (just a normal one).||YUY2, YV12||Plugin||tritical||
||<#e3e3e3>TomsBob||We've asked Tom to include a proper 60fps deinterlacer in his wonderful TomsMoComp, but until then you'll have to make do with TomsBob.||	||Script||	||
====== 필드블랜딩과 프레임블렌딩 제거 ======
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||<width=8%><#dadada>플러그인/스크립트 ||<width=10%><#dadada> 제작자 ||
||<#e3e3e3>c_deblend superseded by srestore||Cdeblend is a simple blend replacing function like unblend or removeblend.||	||Script||MOmonster||
||<#e3e3e3>Deblend||||	||Script||actionman133||
||<#e3e3e3>ExBlend||ExBlend is a plugin to repair damage caused by blend deinterlacing of telecined clips, which results in a double blend, every five frames, GGGBBGGGBBGGGBB etc where 'G' is good and 'B' is blend. See discussion||YV12, YUY2||Plugin||StainlessS||
||<#e3e3e3>mrestore superseded by srestore||Uses conditional frame evaluation to undo standard conversions with blends.||YV12||Script||MOmonster||
||<#e3e3e3>RemoveBlend||This filter is used to remove blended fields/frames. ||YV12||Plugin||violao||
||<#e3e3e3>Restore24||Restore24 is an AviSynth filter that is able to do the nearly impossible: Restore 24fps FILM out of a fieldblended FILM -> Telecine -> NTSC -> Blendconversion -> PAL - Video. ||	||Script||scharfis_brain||
||<#e3e3e3>RestoreFPS||RestoreFPS reverses the kind of blending generated by ConvertFPS, restoring original framerate. It will work perfectly well on any regular blend pattern.||YV12||Plugin||mg262||
||<#e3e3e3>Specials||Helps restore video with blended fields/frames using a reference source. See discussion||YV12||Plugin||David Horman||
||<#e3e3e3>Unblend||Unblend is based on warpenterprise's deblend algorithm and neuron2's decimate code, with YV12 support only. The aim is the same of deblend. ||YV12||Plugin||Bach||
||<#e3e3e3>FixBlendIVTC superseded by srestore||A blend replacing/frame restoring function for doubleblends caused by blend-deinterlacing of telecined sources.||?||Script||MOmonster||
||<#e3e3e3>Cdeint||Restores 24fps FILM out of a fieldblended FILM -> Telecine -> NTSC -> Blendconversion -> PAL - Video (alternative for Restore24).||	||Script||	||
====== 필름 손상 복원 ======
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||<width=8%><#dadada>플러그인/스크립트 ||<width=10%><#dadada> 제작자 ||
||<#e3e3e3>DeScratch||DeScratch removes vertical scratches from films. Also it can be used for removing of horizontal noise lines such as drop-outs from analog VHS captures (after image rotation).||YV12||Plugin||Fizick||
||<#e3e3e3>DeSpot||This filter is designed to remove temporal noise in the form of dots (spots) and streaks found in some videos. The filter is also useful for restoration (cleaning) of old telecined 8mm (and other) films from spots (from dust) and some stripes (scratches).||YV12||Plugin||Fizick||
||<#e3e3e3>deVCR||deVCR elliminates (to a certain degree) the annoying horizontal lines that keep crawling around your VHS or Beta recorded video. See discussion here and here.||	||Script||Ricardo Garcia||
||<#e3e3e3>Film_Restoring_Frame_Blending||	||	||Script||videoFred||
||<#e3e3e3>Film_Restoring_Frame_Interpolation||	||	||Script||videoFred||
||<#e3e3e3>RemoveDirt||RemoveDirt is a temporal cleaner for Avisynth 2.5x. It has now become an AVS script function, which involves RestoreMotionBlocks and various filters from the RemoveGrain package.||YV12, YUY2||Plugin||Kassandro||
||<#e3e3e3>UnDot||UnDot is a simple median filter for removing dots, that is stray orphan pixels and mosquito noise. It clips each pixel value to stay within min and max of its eight surrounding neigbors. ||YUY2, YV12||Plugin||Tom Barry||
====== 주파수 간섭 제거 ======
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||<width=8%><#dadada>플러그인/스크립트 ||<width=10%><#dadada> 제작자 ||
||<#e3e3e3>DeFreq||Defreq uses Fast Fourier Transform method for frequency selecting an removing. ||YV12, YUY2||Plugin||Fizick||
||<#e3e3e3>FanFilter||Regular vertical frequency interference is filtered in spatial domain.||YV12, YUY2, RGB32, RGB24||Plugin||V. C. Mohan||
====== IVTC & 데시메이션 ======
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||<width=8%><#dadada>플러그인/스크립트 ||<width=10%><#dadada> 제작자 ||
||<#e3e3e3>AnimeIVTC||"What it does: High quality adaptative field matching for hard telecine  * High quality adaptative field matching for hard telecine
 * Bob, remove the blends and decimate back to the desired framerate for DHT/field-blended
 * Creating a VFR clip for hybrid sources
 * Bob the interlaced credits, blend-deinterlacing the background while doing minimal damage on the progressive  credits, convert their framerate to match the episode's and splice them with it OR leave them @ 30p to create a VFR clip
 * Very good combing removal and anti-aliasing functions[* http://forum.doom9.org/showthread.php?t=138305][* http://forum.doom9.org/showthread.php?p=1673928]||	||Script||thetoof||
||<#e3e3e3>BruteIVTC||	||	||Plugin||Marc FD||
||<#e3e3e3>DOCI||Destruction of Chroma Interlacing fixes a problem where you captured pulleddown video in YV12. In the combed frames, the chroma from two frames has been blended, leading to a ghosting effect when IVTC'd. This filter reconstructs the chroma exactly and fixes the problem.||	||Script||jmac698||
||<#e3e3e3>FDecimate||The FDecimate() filter provides extended decimation capabilities not available from Decimate(). It can remove frames from a clip to achieve the desired frame rate, while retaining audio/video synchronization. It preferentially removes duplicate frames where possible. ("FDecimate" stands for "Free Decimate", which implies that the output frame rate may be freely chosen, and is not limited to 1-in-N decimation).||YUY2, YV12||Plugin||Donald Graft||
||<#e3e3e3>GreedyHMA||GreedyHMA is an Avisynth filter that executes DScaler's Greedy/HM algorithm code to perform pulldown matching, filtering, and video deinterlace. It has pretty much been superseded by Donald Graft's DeComb package. However there may be occasions where it sometimes gives preferable results, especially with some bad PAL clips.||YUY2||Plugin||Tom Barry||
||<#e3e3e3>IT||Inverse Telecine||YUY2, YV12||Plugin||thejam79 / minamina||
||<#e3e3e3>ivtc_txt60mc||Deinterlaces telecined footage with that has been overlayed scrolling text at 60i.||	||Script||cretindesalpes aka Firesledge||
||<#e3e3e3>MultiDecimate||Removes N out of every M frames, taking the frames most similar to their predecessors. ||YUY2||Plugin||Donald Graft||
||<#e3e3e3>PFR||PFR (Progressive Frame Restorer) is an Avisynth filter that attempts to produce progressive frames from a mixed progressive/interlaced/IVTCed source.||YUY2||Plugin||Simon Walters||
||<#e3e3e3>ReMatch||ReMatch is a field matching plugin, specifically for anime.||YV12||Plugin||Dan Donovan||
||<#e3e3e3>RePal||	||	||Plugin||Bach||
||<#e3e3e3>SmartDecimate||Smart Decimate removes telecine by combining telecine fields and decimating at the same time, which is different from the traditional approach of matching telecine frames and then removing duplicates. ||YUY2, YV12||Plugin||Kevin Atkinson||
||<#e3e3e3>Decomb||The Telecide and Decimate filters can be combined to implement IVTC.||YUY2, YV12||Plugin||Donald Graft||
||<#e3e3e3>TIVTC||A package containing these 7 filters: TFM, TDecimate, MergeHints, FrameDiff, FieldDiff, ShowCombedTIVTC, and RequestLinear. Also contains these 3 conditional functions: IsCombedTIVTC, CFieldDiff, and CFrameDiff. Designed primarily for IVTC operations. Discussion||YUY2, YV12||Plugin||tritical||
||<#e3e3e3>TPRIVTC||	||	||Plugin||daxab, Kurosu||
||<#e3e3e3>UnComb||Filter for matching up even and odd fields of properly telecined NTSC or PAL film source video. ||YV12||Plugin||Tom Barry||
||<#e3e3e3>IvtcBlend||Waka demonstrated an IvtcBlend function that uses the information in the "extra" fields of a telecined source to help combat temporal noise.||	||Script||	||
====== 고스트 제거 ======
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||<width=8%><#dadada>플러그인/스크립트 ||<width=10%><#dadada> 제작자 ||
||<#e3e3e3>FixVHSOversharp||FixVHSOversharp attempts to repair the light and dark halos that follow high contrast edges found in VHS sources. ||YV12||Plugin||MrTibs||
||<#e3e3e3>GhostBuster||Ghostbuster is an Avisynth filter for removing "ghosts" from a clip. A ghost in this context is a faint copy of the picture offset horizontally. It works by either subtracting or adding the image from itself at the specified offset. With some tweaking the result, while not perfect, can be very pleasing. See discussion here and here.||YUY2||Plugin||SansGrip||
||<#e3e3e3>LGhost||Plugin intended for ghost removal but can also reduce edge (ringing) artifacts. ||YV12, YUY2||Plugin||minamina||
====== 로고 제거 ======
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||<width=8%><#dadada>플러그인/스크립트 ||<width=10%><#dadada> 제작자 ||
||<#e3e3e3>DeKafka||This fairly simple filter washes away those annoying bugs from broadcast clips.||	||Script||	||
||<#e3e3e3>DeLogo||DeLogo Filter for VirtualDub. Removes static elements, e.g. logos or watermarks, from the video stream. It can remove either opaque elements or alpha blended, the latter even without destroying the picture beneath.||	||Plugin & Script||Karel Suhajda||
||<#e3e3e3>InpaintFunc||Script for logo removal using inpainting. Can remove alpha blended or opaque logos with a basic postprocessing to hide artifacts.||	||Script||Reuf Toc||
||<#e3e3e3>rm_logo||Combination of deblending and inpainting to remove logos with adjustable postprocessing to further hide artifacts. [* http://forum.doom9.org/showthread.php?t=134919]||	||Script||Spuds||
||<#e3e3e3>X-Logo||X-Logo Avisynth plugin and Virtualdub filter. Removes opaque logos.||	||Plugin||Leuf||
====== Luma 이퀄라이저 ======
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||<width=8%><#dadada>플러그인/스크립트 ||<width=10%><#dadada> 제작자 ||
||<#e3e3e3>Antiflicker||A quick-and-dirty port of my VirtualDub filter (which sucks, by the way; it was one of my first filters). ||YUY2||Plugin||Donald Graft||
||<#e3e3e3>DeFlicker||Can remove old film intensity flicker by temporal mean luma smoothing. Can also correct blinding of automatic gain control after flashes.||YV12, YUY2||Plugin||Fizick (Alexander G. Balakhnin)||
||<#e3e3e3>Dumb Deflicker||Gathers average luma of frames, smoothens that with temporalsoften, and applies the obtained difference to the original input. It is pretty simple, read "dumb". See discussion||YV12||Script||Didée||
||<#e3e3e3>EquLines||Equalizes total luminosity in pairs of even and odd lines. Useful for removing inter-line differences from telecined films.||YV12, YUY2||Plugin||Fizick||
||<#e3e3e3>LMFlicker||LMFlicker is intended to reduce flickering in some film/vhs transfers. FieldFade is a similar concept, but applied on a per-field basis, to reduce combing in a video where fades were applied after telecine.||YV12||Plugin||akupenguin||
||<#e3e3e3>Local Deflicker||Deflickers only part of a frame. ||YV12||Script||prokhozhijj||
||<#e3e3e3>ReduceFlicker||Reduces temporal oscillations in clips; should be applied before deinterlacing. Contains ReduceFlicker, ReduceFluctuations, and LockClense. ||YV12, YUY2||Plugin||Kassandro||
||<#e3e3e3>TimeLapseDF||Designed to remove luminosity flicker in time lapse photography. Unlike most other flicker removal filters, utilizes cumulative distribution function in addition to average frame luminosity. ||YV12, YUY2||32-Bit Plugin 64-Bit Plugin||Denis Zhitenev||
||<#e3e3e3>wdeflicker||Modifies luma of a source clip by refering to a temporally super-smoothed clip. Heights of source and reference clips must match.||YV12, YUY2||Plugin||Osmiridium||
====== 레인보우 및 닷 크롤링 제거 ======
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||<width=8%><#dadada>플러그인/스크립트 ||<width=10%><#dadada> 제작자 ||
||<#e3e3e3>Bifrost||Bifrost uses temporal blending to remove or at least reduce the effect of rainbows.||YV12||Plugin||Myrsloik, dubhater||
||<#e3e3e3>CC||Dot crawl and rainbow removal.||YV12, YUY2||Plugin||chiyo-clone||
||<#e3e3e3>Checkmate||Spatial-temporal dot crawl removal.||YV12||Plugin||mf / prunedtree||
||<#e3e3e3>ChubbyRain||Spatial-temporal rainbow reducing script.||YV12||Script||Mug Funky||
||<#e3e3e3>ChubbyRain2||Spatial-temporal rainbow reducing script based on ChubbyRain.||YV12||Script||Lothar||
||<#e3e3e3>DeCrawl||Spatial and temporal dot crawl removal, particularly for animated material.||YV12||Plugin||Dan Donovan||
||<#e3e3e3>DeCross||Cross Color Reduction. Also known as rainbows.||YV12, YUY2||Plugin||minamina||
||<#e3e3e3>DeDot||Removes dot crawl and may also be useful for rainbows.||YV12, YUY2||Plugin||thejam79 / minamina||
||<#e3e3e3>DeRainbow||A simple script to reduce rainbows. ||YV12, YUY2||Script||sh0dan||
||<#e3e3e3>DFMDeRainbow||Creates mask to process only edges; rainbows are removed by hitting chroma planes with two passes of FluxSmooth (hence "Double-Flux-Mask").||YV12||Script||Scintilla||
||<#e3e3e3>GuavaComb||Removes dot crawl, rainbows, and some kinds of shimmering. See discussion||YUY2||Plugin||Lindsey Dubb||
||<#e3e3e3>LUTDeCrawl||Purely spatial; only targets pixels for dot crawl removal if luma is fluctuating and (optionally) chroma is not.||YV12||Script||Scintilla||
||<#e3e3e3>LUTDeRainbow||Purely spatial; only targets pixels for derainbowing if chroma is fluctuating and (optionally) luma is not.||YV12||Script||Scintilla||
||<#e3e3e3>mfRainbow||Derainbows in areas of high Y, U and V frequencies, which fluctuate heavily.||YV12||Script||mf||
||<#e3e3e3>Rainbow_Smooth||A small spatial derainbow function. It uses SmoothUV to smooth out chroma and edge masking to prevent color bleeding.||YV12||Script||MOmonster||
||<#e3e3e3>SmartSSIQ||SSIQ can alter the color on the entire picture. So this script first applies SSIQ to the entire picture. Then it locates the edges. Finally, it layers ONLY the de-rainbowed edges onto the original video.||YV12||Script||LB||
||<#e3e3e3>SSIQ||Rainbow remover. A port of the VirtualDub plugin Smart Smoother IQ.||YV12, YUY2, RGB32||Plugin||Myrsloik||
||<#e3e3e3>TComb||A temporal comb filter (it reduces cross-luminance (rainbowing) and cross-chrominance (dot crawl) artifacts in static areas of the picture).||YV12, YUY2||Plugin||tritical||
||<#e3e3e3>YARK||Yet Another Rainbow Killer. Based on mfRainbow v0.31, chubbyrain2, and various other scripts shown here.||YV12||Script||jase99||
====== 안정기 ======
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||<width=8%><#dadada>플러그인/스크립트 ||<width=10%><#dadada> 제작자 ||
||<#e3e3e3>DePan||Tools for estimation and compensation of global motion (pan) .[* http://avisynth.org.ru/depan/depan.htmlfunction of a Time Base Corrector.(note: will cause SEt's Avisynth 2.6 MT to stop working)||	||Script||	||
||<#e3e3e3>Stab||Simple but powerful script to remove small high frequenzy jitter that appears often on old/bad transfers.[* http://forum.doom9.org/showthread.php?p=1222830#post1222830]||	||Script||g-force||
||<#e3e3e3>TBC||Stabilizes horizontal jitter in video from analog VCRs, similar to the function of a Time Base Corrector.(note: will cause SEt's Avisynth 2.6 MT to stop working)||	||Script||	||
||<#e3e3e3>CelStabilize||Script which holds a fixed background steady. Doesn't work well with pans or fades.||	||Script||mg262||

==== 잡음 제거 ====
====== 공간적 디노이저 ======
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||<width=8%><#dadada>플러그인/스크립트 ||<width=10%><#dadada> 제작자 ||
||<#e3e3e3>_2DCleanYUY2||Averages pixels in a configurable radius around a source pixel that are within a configurable threshold of the central pixel. A port of the VirtualDub plugin 2D Cleaner.||YV12, YUY2||Plugin||kiraru2002, xeon533||
||<#e3e3e3>DctFilter||An experimental filter that operates on DCT coefficients.||YV12, YUY2||Plugin||Tom Barry||
||<#e3e3e3>DCTFun||A fast spatial denoiser that does a hard thresholding of a complete 4x4 ICT transform.||YV12||Plugin||Prunedtree||
||<#e3e3e3>eDeen||eDeen is a ultra powerfull spatial denoiser for very experienced encoders only.||YV12||Plugin||Marc FD||
||<#e3e3e3>frfun3b||Fractal denoising. See discussion||YV12||Plugin||prunedtree||
||<#e3e3e3>frfun3d||Fractal denoising; frfun3d is a quality optimized frfun3b. See discussion||YV12||Plugin||prunedtree||
||<#e3e3e3>frfun7||Fractal denoising. See discussion||YV12||Plugin||prunedtree||
||<#e3e3e3>GPUBilateral||In short, bilateral filter is a edge-preserving smooth filter. ||RGB32||Plugin||Sompon Virojanadara||
||<#e3e3e3>Msmooth||Masked smoother, designed specifically for anime.||YV12, RGB32||Plugin||Donald Graft||
||<#e3e3e3>SmoothUV||A spatial denoising plugin based on Smart Smoother and Smart Smooth HiQ.||YV12||Plugin||Kurosu||
||<#e3e3e3>SPresso||A fast script to make SD content compress better while keeping the "original look".||YV12||Script||Didée||
||<#e3e3e3>TBilateral||TBilateral is a spatial smoothing filter that uses the bilateral filtering algorithm. It does a nice job of smoothing while retaining picture structure.||YV12, YUY2||Plugin||tritical||
||<#e3e3e3>VagueDenoiser||This is a Wavelet based Denoiser. Basically, it transforms each frame from the video input into the wavelet domain, using various wavelet filters. Then it applies some filtering to the obtained coefficients. ||YV12, YUY2, RGB32||Plugin||Lefungus, Kurosu, Fizick||
||<#e3e3e3>VerticalCleaner||Fast vertical cleaner. Parameter information here. Explanation of mode 2 here.||YV12, YUY2||Plugin||Kassandro||
====== 시간적 디노이저 ======
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||<width=8%><#dadada>플러그인/스크립트 ||<width=10%><#dadada> 제작자 ||
||<#e3e3e3>Cnr2||A fast chroma denoiser. Very effective against stationary rainbows and huge analogic chroma activity. Useful to filter VHS/TV caps. ||YV12, YUY2||Plugin||Marc FD, tritical||
||<#e3e3e3>FluxSmooth||Examines each pixel and compares it to the corresponding pixel in the previous and last frame.||YV12, YUY2||Plugin||SansGrip, sh0dan||
||<#e3e3e3>GrapeSmoother||This filter averages out visual noise between frames.||YUY2||Plugin||Lindsey Dubb||
||<#e3e3e3>MVDegrain||Strong and effective temporal denoiser. Part of the MVTools package.||YV12, YUY2||Plugin||Fizick||
||<#e3e3e3>TemporalCleaner||TemporalCleaner is an Avisynth port of the original port of the VirtualDub filter TemporalCleaner made by Jim Casaburi.||YV12, YUY2||Plugin||vlad59||
||<#e3e3e3>TTempSmooth||TTempSmooth is a motion adaptive (it only works on stationary parts of the picture), temporal smoothing filter.||YV12, YUY2||Plugin||tritical||
||<#e3e3e3>Temporal Degrain||SLOW but very effective at removing most grain from video sources.||	||Script||	||
====== 시공간적 디노이저 ======
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||<width=8%><#dadada>플러그인/스크립트 ||<width=10%><#dadada> 제작자 ||
||<#e3e3e3>Convolution3D||Convolution3D is a spatio-temporal smoother, it applies a 3D convolution filter to all pixels of consecutive frames. ||YUY2||Plugin||Sébastien Lucas||
||<#e3e3e3>Deen||Deen is a set of assembly-optimised denoisers, like various 3d and 2d convolutions.||YV12||Plugin||MarcFD||
||<#e3e3e3>DenoiseMF||A fast and accurate denoiser for a Full HD video from a H.264 camera. ||YV12||Script||rean||
||<#e3e3e3>dfttest||A 2D/3D frequency domain denoiser. ||YV12, YUY2||Plugin||tritical||
||<#e3e3e3>dfttestMC||A script that motion compensates dfttest. ||YV12||Script||thewebchat||
||<#e3e3e3>DeGrainMedian||Two stage Spatio-Temporal Limited Median filter for grain removal. See||YV12, YUY2||Plugin||Fizick||
||<#e3e3e3>FFT3DFilter||A 3D Frequency Domain filter - gives strong denoising and moderate sharpening||YV12, YUY2||Plugin||Fizick||
||<#e3e3e3>FFT3DGPU||Similar algorithm to FFT3DFilter, but uses graphics hardware for increased speed. ||YUY2, YV12||Plugin||tsp||
||<#e3e3e3>frfun4||Spatial-temporal fractal denoising.||YV12||Plugin||prunedtree||
||<#e3e3e3>HQdn3d||High Quality DeNoise 3D is an Avisynth 2.5 port of the MPlayer filter of the same name. It performs a 3-way low-pass filter, which can completely remove high-frequency noise while minimizing blending artifacts.||YV12||Plugin||akupenguin||
||<#e3e3e3>MC_Spuds||Motion compensated noise removal with sharpening. Extremely slow, but extremely effective.||YV12||Script||Spuds, Didée||
||<#e3e3e3>MCTemporalDenoise||Another high quality motion compensated noise removal script with an accompanying post-processing component (with loads of excess feature such as MC-Post-sharpening, MC-antialiasing, deblock, edgeclean and much more)||YV12||Script||LaTo||
||<#e3e3e3>MipSmooth||MipSmooth is a reinvention of SmoothHiQ and Convolution3D. MipSmooth was made to enable smoothing of larger pixel areas than 3x3(x3), to remove blocks and smoothing out low-frequency noise. ||YV12||Plugin||sh0dan||
||<#e3e3e3>NoMoSmooth||NoMoSmooth temporally denoises relatively static areas and a spatially denoises moving parts. In addition to this motion-based approach, NoMoSmooth employs another technique to try to retain as much existing detail as possible: only pixels that are "fluctuating" are smoothed. ||YUY2||Plugin||SansGrip||
||<#e3e3e3>PeachSmoother||PeachSmoother was designed to cope with the oddities of analog broadcast TV.||YV12||Plugin||Lindsey Dubb||
||<#e3e3e3>RemoveDirtMC||	||YV12||Script||Nephilis||
||<#e3e3e3>RemoveGrain||RemoveGrain is a plugin package containing various plugins for spatial and temporal denoising, repairing, sharpening, deinterlacing, and other utility functions.||YV12, YUY2||Plugin||Kassandro||
||<#e3e3e3>RemoveGrainHD||RemoveGrainHD is like RemoveGrain but intended for high definition content. It includes various spatial and temporal functions. See documentation.||YV12, YUY2||Plugin||Kassandro||
||<#e3e3e3>RemoveNoiseMC||Motion compensated filter for removing noise, larger spots and other dirt. Written as an alternative to the old Dust. Last update Nov 2006. It uses mvtools v1. Jenyok collected together all RemoveNoise and various filters functions and adapted to MVTools v2.||YV12||Script||Heini011||
||<#e3e3e3>RgTools||Modern rewrite of RemoveGrain, Repair, Clense (including BackwardClense and ForwardClense) and VerticalCleaner all in a single plugin.||Y8, YV12, YV16, YV24, YV411||Plugin||tp7||
||<#e3e3e3>STPresso||A fast script to make SD/720p content compress better without losing detail and original grain structure. ||YV12||Script||Didée||
||<#e3e3e3>zzz_denoise||Simple wrapper around a combination of dfttest and MDegrain3. Requires the Dither package.||YV12||Script||cretindesalpes||
====== 미분류 디노이저 ======
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||<width=8%><#dadada>플러그인/스크립트 ||<width=10%><#dadada> 제작자 ||
||<#e3e3e3>AdaptiveMedian||This is an adaptive Median Filter for eliminating certain types of noise. It uses local statistics (minimum, maximum and median values) of a moving local grid, and changes grid size depending on local statistics.||RGB24, RGB32, YUY2, YV12||Plugin||V. C. Mohan||
||<#e3e3e3>Atc||Alternate Temporal Cleaner; a fast temporal cleaner with some cool stuff.||YV12||Plugin||Marc FD||
||<#e3e3e3>ColourizeSmooth||ColourizeSmooth uses a general colourizing algorithm to smooth a given clip. ColourizeSmooth is based on this algorithm. See discussion||YUY2, YV12||Plugin||insanedesio||
||<#e3e3e3>ConditionalTemporalMedian||This filter is designed to remove temporal noise in the form of small dots and streaks found in some videos. A common cause of this is dirty VHS heads but I have also seen small black or white streaks in broadcast material.||YV12||Plugin||Kevin Atkinson||
||<#e3e3e3>DeNoise||This is an adaptive local noise reduction filter. It uses global variance of the noise, local mean and local variance in a moving grid of specified size. It tries to preserve edges as closely as possible. The global variance value can be specified or it can be computed from a window. The global variance can have one value for the entire clip or can vary frame to frame linearly or computed from a window with its coordinates linearly moving with frame numbers.||RGB24, RGB32, YUY2, YV12||Plugin||V. C. Mohan||
||<#e3e3e3>DNR2||Dynamic Noise Reduction 2 is based on the VirtualDub DNR filter by Steve Don and Avery Lee.||RGB32, YUY2, YV12||Plugin||kiraru2002||
||<#e3e3e3>ExtendedBilateral||ExtendedBilateral extends the regular bilateral filtering process by adding an "initial estimation preprocess." It is similar in operation to TBilateral and offers many of the same options (though not all) while adding the preprocess. ||YUY2, YV12||Plugin||insanedesio||
||<#e3e3e3>MedianBlur||Spatial median blur filter with a variable radius||	||Plugin||tsp||
||<#e3e3e3>PixieDustPP||Deprecated! DO NOT USE! Requires 'Dust' an Avisynth 2.0 plugin. [Move to deprecated section]||YV12||Script||Didée||
||<#e3e3e3>SmartSmoother||	||	||Plugin||	||
||<#e3e3e3>SmootherHiQ||	||	||Plugin||	||
||<#e3e3e3>SSIQ||	||	||Plugin||	||
||<#e3e3e3>TNLMeans||TNLMeans is an implementation of the NL-means denoising algorithm. ||YV12, YUY2||Plugin||tritical||
||<#e3e3e3>UberSmooth (Bloated)||	||	||Script||	||
||<#e3e3e3>UberSmooth (DCTFun)||	||	||Script	||
||<#e3e3e3>UberSmooth (Deen)||	||	||Script||	||
||<#e3e3e3>VariableBlur||	||	||Plugin||	||
==== 적응형 필터 ====
====== 색공간 변환 ======
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<width=15%><#dadada> 색상 형식 ||<width=8%><#dadada>플러그인/스크립트 ||<width=10%><#dadada> 제작자 ||
||<#e3e3e3>AutoYUY2||This filter is correctly converts YV12 to YUY2 without color bias.||YV12||Plugin||Donald Graft||
||<#e3e3e3>ConvertToYCgCo||Converts to the YCgCo colorspace. ||RGB24, RGB32||Plugin||xv||
||<#e3e3e3>InterleavedConversions||Tools for interleaving and de-interleaving 2, 3, and 4-channel data.||	||Script||PitifulInsect||
||<#e3e3e3>YUY2inRGB||A quick filter that stuffs YUY2 into RGB24. ||YUY2||Plugin||Trevlac||
||<#e3e3e3>YUY2toRGB219||Converts YUY2 to studioRGB. With this kind of conversion, luma will not change, meaning no quantization error on luma. ||YUY2||Plugin||Trevlac||
||<#e3e3e3>YV12toRGB24HQ||YV12 to RGB24 with dithering.||YV12||Plugin||prunedtree||
||<#e3e3e3>PlanarConversions||Planar conversion functions for AVISynth.||	||Script||PitifulInsect||
====== 중복 프레임 검출기 ======
||<tablewidth=100%><width=15%><#dadada> 필터 ||<#dadada> 설명 ||<wi