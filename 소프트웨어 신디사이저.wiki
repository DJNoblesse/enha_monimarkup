Software Synthesizer. 

넓은 의미로 [[하드웨어]] 형태로 제작된 것이 아닌, 소프트웨어 형태로 제작된 [[신디사이저]]의 기능을 하는 모든 프로그램을 뜻하는 말이며, 이 뜻의 소프트웨어 신디사이저의 역사는 컴퓨터가 등장한 이후인 1950년대 부터 시작된다. 좁은 의미의 소프트웨어 신디사이저는 개인용 컴퓨터 환경에서 음의 재생에 특화된, 특히 [[VST]], AU와 같은 인터페이스 규격을 준수하는 플러그인 프로그램을 뜻한다. 여기에서는 후자에 대해서 설명한다.

[[목차]]

== 소개 ==
소프트웨어 신디사이저는 [[소프트웨어]] [[악기]], 실제 하드웨어가 존재하지 않기 때문에 가상[[악기]]로 불리기도 하며, 특히 [[VST]], AU 등의 플러그인 형태의 소프트웨어 신디사이저는 가상악기, 가상음원 등으로 불리기도 한다. 영어로는 Software Synth, Soft Synthesizer[* Soft Synthesizer는 [[YAMAHA]]의 등록상표다.], Softsynth, Virtual Instrument, 등으로 불린다.

주로 [[MIDI]] 시퀀서, [[DAW]]와 같은 소프트웨어 기반 음악 제작 환경에서 사용되며, 사보 프로그램에서 사용되는 경우도 있다. 

소프트웨어 신디사이저는 대부분 기능적으로 원래 존재하던, 공기를 진동하여 소리내는 악기의 소리를 소프트웨어로 재현하거나, 또는 인공의 전자음을 만드는 [[신디사이저]]의 소리를 소프트웨어로 재현한다. 보통 꽤 많은 조작 가능한 파라미터를 제공하며, 이것을 프리셋으로 저장하여 사용할 수 있다. 또한 [[MIDI]] 신호를 수신하며, 따라서 [[MIDI Keyboard Controller]] 또는 다른 형태의 MIDI Controller를 연결하여 연주할 수 있다. 

소프트웨어 신디사이저는 MIDI 시퀀서, [[DAW]] 프로그램 또는 운영체제에서 지원되며, 오디오 신호, MIDI 신호를 송수신하는 API를 사용하여 [[MIDI]] 신호를 수신하고, 실시간으로 CPU나 별도로 추가된 [wiki:"Digital Signal Processor" DSP]보드를 사용하여 음을 합성하여 이를 오디오 데이터로 변환하고, 다시 이를 운영체제 또는 시퀀서, [[DAW]] 프로그램의 오디오 신호 송수신 API를 사용하여 출력하는 형태로 되어있다.  

== [[DAW]] 프로그램과 연동 ==
많은 소프트웨어 신디사이저가 별도의 추가 프로그램 없이, 독립적으로 실행이 가능하지만, [[VST]], AU 등과 같은 플러그인 형태의 소프트웨어 인터페이스를 제공한다. 이것들은 바로 [[Logic Pro|Logic]], [[Cubase]]와 같은 [[DAW]] 플러그인 호스트 역할을 하는 프로그램에서 불러 쓸 수 있다.

이러한 형태로 소프트웨어 신디사이저를 사용하면 [[DAW]] 프로그램 내부의 [[MIDI]] 트랙에서 데이터를 받아서 소리를 내는 오디오 데이터를 출력할 수 있으며, 이렇게 출력된 오디오 데이터는 바로 [[DAW]] 프로그램 내부의 가상 [[믹서]]로 연결되며, 가상 믹서에 연결된 소프트웨어 이펙터 플러그인에 의해 오디오 데이터가 처리된다.

== 장점 ==
[[DAW]]와 함께 사용하면 공간과 케이블이 필요하지 않고, 하드웨어 신디사이저가 케이블로 연결될 때와는 달리 신호 손실이 전혀 없게 된다. ~~[[우왕ㅋ굳ㅋ]]~~

또한 컴퓨터의 [[RAM]]과 [[CPU]]가 허용하는 한계에 도달하기 전 까지는 무제한으로 소프트웨어 신디사이저를 사용할 수 있다. 더불어 최근에는 하드웨어 형태로 된 [[신디사이저]]를 능가 할 수 있을 정도로 소리마저 좋아졌기 때문에, 100% 소프트웨어 신디사이저만을 사용하여 프로듀싱을 하는 경우도 생각보다 꽤 흔하게 발견된다.

무엇보다 음악인 입장에서는 소프트웨어 신디사이저가 꽤 쓸만하면서 상대적으로 가격이 엄청 싼 편에 속하기 때문에, 음악을 제작할 때 [[DAW]]와 함께 사용하면 예산을 대폭 절감할 수 있다. 일단 곡 전체를 소프트웨어 신디사이저를 사용하여 만들고, 최종 녹음 작업 때 필요한 부분만 하드웨어 [[신디사이저]]를 대여하여 사용하거나 [[드럼]], [[기타]] 등의 전문 세션맨을 고용하여 녹음을 하는 형태가 가장 일반적이며, 위에 적은 것과 같이 아예 100% 소프트웨어 신디사이저만으로 녹음된 음반을 내는 경우도 있다.

예를 들어 East West/Quantum Leap[* 이하 EWQL. 이전 문서에선 Best Service의 것이라 되있었으나 그건 유통사라 할 수 있겠다.]사 의 Complete Classical Collection Second Edition 오케스트라 가상악기의 경우 500 달러가 채 안되게 구입할 수 있다. 그런데 실제 관현악단을 섭외하여 녹음을 하면 어떨까? 예산 문제에서 비교가 되지를 않는다. 비단 오케스트라 뿐만이 아니라 홀로 작편곡을 하는 사람은 드럼을 녹음 할 때에는 기본적으로 베이스, 스네어, 심벌, 탐, 오버헤드 등 못해도 마이크가 6개는 들어가고 상업 스튜디오를 빌린다고 해도 몇 곡 넘어가다보면 연주자와 스튜디오 대여 비용보다 가상악기 하나 사는게 훨씬 싸게 먹힌다.

이러한 환경을 데스크탑 컴퓨터가 아닌 [[노트북]] 컴퓨터에 구축하면, 이것을 들고 다니는 모든 곳이 음악 작업을 할 수 있는 곳이 된다. 실내무대, 야외무대, 간이무대, 차 안, 기차 안, 비행기 안, 호텔 등에서 노트북을 켜기만 하면 바로 음악 작업을 할 수 있게 되는 것이다. 더불어 12U 랙 케이스 8개에 빽빽히 꼽힌 것과 같은 산더미같은 장비가 더 이상 필요없게 되니, 공연 때 마다 트럭을 대여하거나 항공 화물을 부치지 않아도 되므로 이러한 비용 또한 절감된다. 

전문 음악인이 이렇게 사용한 예로, 전문 [[색소폰]] 연주자이자 [[전자관악기]] 연주자였던 Michael Brecker를 들 수 있다. Brecker는 수도 없이 많은 [[MIDI]] 장비를 공연때마다 대동하는 것으로 유명했는데, 말년에 이 모든 것을 [[Logic]] 환경 설정을 이용하여 소프트웨어 신디사이저로 구성하여 대체했다[* Michael Brecker가 실제 사용했던 [[Logic]]의 Environment 구성. attachment:MichaelBreckerEnvironment.jpg?width=100% ].
 
== 단점 ==
소리가 예전대비 많이 좋아졌다고는 하나, 기존에 존재하던 악기를 재현하는 소프트웨어 신디사이저는 실제 악기를 연주할 때 사용하는 연주 기법을 똑같이 흉내내는데 어느 정도 한계가 아직까지 존재한다. 특히 특정 주법에서 나오는 고유한 소리를 낼 때 약한 모습을 많이 보인다[* 사실 어쿠스틱 악기의 특정 주법을 흉내내지 못하는 한계는 하드웨어 신디사이저에도 똑같이 존재한다.]. 

예를 들면 [[색소폰]]에서 원래 기본음역에는 없는 고음을 호흡 조절과 특화된 운지를 통해 연주하는 알티시모는 아직까지 극복되지 못한 난제이며, 누구나 한 번쯤 해봤을 [[통기타]]에서 피크를 쥐고 위 아래로 스트러밍 하는 것을 [[MIDI Keyboard Controller]]로 연주하여 흉내내는 것은 대단히 어렵다. 이러한 어쿠스틱 악기가 아니더라도 오래 사용하면 소리가 살짝 맛이 가는 [[아날로그 신디사이저]] 특유의 소리 또한 재현하지 못한다[* 그러나 최근에는 이것조차 어느 정도 비슷하게 재현하는 소프트웨어 신디사이저가 등장했다!].[http://www.youtube.com/watch?v=42hrU8g6_oE #] [http://www.youtube.com/watch?v=ObyZNTIrB_Y ##]

그 밖에 컴퓨터에서 구동되는 만큼, [[CPU]] 성능, [[RAM]] 용량과 함께 내부 대역폭에 제약을 받으며, 컴퓨터가 고장나거나 하드디스크가 깨지기라도 하는 날에는 지옥문이 열린다. 그러므로 알아서 백업 자주하자.

== 역사 ==
[[PC]] 환경에서 최초로 등장한 소프트웨어 신디사이저는 [[MIDI]] 표준을 제정하는데 참여했던 David Smith가 Seer Systems의 CEO로 있을 때 CCRMA의 연구 결과인 Waveguide Synthesis를 소프트웨어로 구현하여 탄생했다. 이에 [[인텔]]이 후원금을 지급했으며, 1994년 COMDEX에서 Andy Grove가 기조연설을 할 때 같이 시연되었다. 

이것의 2세대 버젼이 1996년에 발매된 SoundBlaster AWE64에 소프트웨어 [[신디사이저]]로 번들된 WaveSynth[* AWE64는 하드웨어로 구현된, Sound Font를 불러와서 사용하는 Wavetable Synthesis 방식과 함께 소프트웨어로 구현된 Waveguide Synthesis 방식을 동시에 사용하는 특이한 제품이었다.]이며, 최초의 상용화된 소프트웨어 신디사이저이다. 그러나 WaveSynth는 조작할 수 있는 파라미터가 많이 부족했고, 편리하게 조작할 수 없었으며, AWE64의 드라이버 형태로 제공되었다는 결정적인 한계가 있었다.

특정 하드웨어에 종속되지 않은, 완벽하게 독립된 소프트웨어 신디사이저로는 1996년에 발매된, [롤랜드|Roland]의 [[드럼머신]]인 TB-303, TR-808, TR-909를 소프트웨어 신디사이저로 재현한 Propellerhead의 ReBirth RB-338을 최초로 꼽는다. 일단 바탕이 된 원조 [[아날로그 신디사이저]]의 소리에 꽤 근접한 소리를 내면서 실제 기계보다 조작하기 편리했기 때문에, 이것을 보고 모두 말 그대로 신기해하며 깜짝 놀랐다.

여기에 때마침 개인용 컴퓨터의 처리능력이 엄청나게 향상되고, [[Windows]] 환경에서 [[ASIO]] 등의 기술로 오디오 신호의 입출력 한계가 사실상 사라지자, 이후 폭발적일 정도로 소프트웨어 신디사이저가 제작된다.

1998년 [[Cubase]], [[wiki:"누엔도" Nuendo]]를 제작한 Steinberg에 의해 소프트웨어 신디사이저, 소프트웨어 이펙터 규격인 [[VST]]가 제정되고, 업계에 널리 전파되면서 표준이 되었다.

초기에는 기술력의 부족 등의 이유로 소프트웨어 신디사이저를 이용한 연주는 실제 연주와는 큰 차이를 보였고, 매우 단순한 형태가 주를 이뤘으나, 현재는 연주력에 상관없이 MIDI 데이터를 생성하는 개인의 역량에 따라 실제 연주와 거의 차이가 없는[* 물론 해당 악기를 직접 연주하는 전문 연주인이 들으면 차이를 간파할 수 있는 경우가 대부분이지만, 이들을 제외하면 사실 알 수 없다] 연주를 하는것도 가능해질 정도로 성능이 좋아졌다.

또한 괜찮은 성능에 상대적으로 싼 가격에 편리하기 때문에 폭발적인 인기를 끌게 되었고, 이제는 하드웨어 [[신디사이저]]의 자리를 위협할 정도로 시장 규모가 커졌다.

== 분류 == 
너무나 다양한 형태가 존재하지만, 대략 다음과 같은 형태로 분류할 수 있다.

=== 아날로그 시뮬레이션 ===
하드웨어로 된 Analog Simulation Synthesizer의 소프트웨어 버젼. 원조가 되는 [[아날로그 신디사이저]]에 사용된 아날로그 신호처리 기법이 매우 단순한 방식들이기 때문에 CPU가 별로 필요하지 않으며, 알고리즘에 의해 음을 합성하므로 RAM도 별로 필요없다. 따라서 성능이 아주 좋은 컴퓨터가 아니더라도 무리없이 구동할 수 있다. 이러먼셔 과거의 명기 [[아날로그 신디사이저]]를 재현하면 아래의 것으로도 분류 가능하다. 자세한 것은 [[신디사이저/합성방식]]을 참조하라.

=== 빈티지 악기 시뮬레이션 ===
과거의 명기로 불렸던 악기를 본따서 만든 것. 예를 들면 [[로즈 일렉트릭 피아노]], 하몬드 오르간, 위에서 언급된 TB-303, TR-808, TR-909, 멜로트론, Prophet 5, DX7 과 같은 것을 재현한 소프트웨어 신디사이저이다.

대부분 과거의 명기는 [[충공깽]]스런 가격에, 매우 희귀하여 구하기가 어렵고, 구하더라도 정상적으로 동작한다는 보장을 할 수 없다. 더불어 쓰고 싶어도 구하는 것 자체가 불가능한 경우도 더러 있다. 빈티지 악기 시뮬레이션은 이러한 수요를 노리고 만들어진 소프트웨어 신디사이저이다. 수 만 ~ 수십 만원에 명기의 소리를 쓸 수 있다고 생각해보자. 구미가 당기지 않을 수 없다. 

이들은 대부분 악기가 음을 내는 메커니즘은 물론, 악기에 사용된 회로의 특성까지 고스란히 흉내내며 재현한다. 그래도 원조 실물을 100% 재현하지는 못하지만 꽤 비슷한 느낌으로 재현한다.

=== 샘플러 ===
빈티지 악기 시뮬레이션도 결국 PCM 오디오 데이터에 기반을 하기는 하지만, 여러 가지 알고리즘을 적용하여 최대한 원본 기계를 재현하려는 반면, 샘플러는 악기가 낼 수 있는 모든 소리를 녹음하여 재생한다. 피아노를 예를 들면, 88개의 매 건반마다 3 ~ 6 단계 사이로 소리의 세기에 단계를 두고 그대로 녹음을 한다. 그리고 [[MIDI]] 신호가 들어오면 음 높이와 세기에 맞는 건반의 샘플에 최소한의 알고리즘만을 적용하여 재생하는 식이다. 말 그대로 샘플 위주로 소리를 재현한다. 만약 건반 10개를 동시에 누른다면? 동시에 이 작업을 10개를 진행해야 제대로 된 소리가 난다.

그렇기 때문에 가상악기의 질과 용량이 높아질 수록 CPU와 더불어 RAM과 빵빵한 하드디스크의 용량은 물론, 악기를 악기를 불러오는 시간을 단축학 위한 하드디스크의 속도가 매우 중요하다. 결국 PC의 발전과 함께 샘플러는 하드웨어에서 빠르게 소프트웨어로 전환되었다. 여담으로 [SSD]의 용량 대비 가격이 [하드디스크]급으로 낮아지면 가상악기 트랙을 세 자릿수 단위로 놓고 쓰는 사람들에겐 천국이 열릴 것이다. ~~하지만 그 후엔 더 빠른 저장장치를 부러워 할 수도 있겠지~~

최근 판매되는 [DAW] 프로그램에 경우엔 따로 자체 샘플러를 내장한다. [Logic Pro|로직 시리즈]의 EXS24나 [[큐베이스]]의 할리온의 경우가 그 예.

관현악단 샘플러 소프트웨어 신디사이저인 EWQL의 Symphonic Orchestra PLATINUM COMPLETE PLUS와 같이 용량만 197GB에, 주문하면 하드디스크에 복사하여 배송해주는 제품도 있다.(이건 EWQL 사 샘플러인 Play로 구동시킨다.) 특히 (악기 하나만 있는 건 아닌) Native Instrument의 번들 제품에 경우엔 Ultimate 9 버전 기준으로 320GB의 빈 공간을 권장한다.

그 밖에 기타, 드럼, 색소폰, 트럼펫과 같은 단일 악기의 소리를 샘플에 기반하여, [[MIDI]]를 이용한 연주에 특화된 알고리즘을 탑재하는 경우도 샘플러로 분류한다. 특정 CC가 들어오거나 특정 연주 패턴을 감지하면 해당 주법의 샘플을 재생하는 식으로 되어있다.

기존의 PCM 기반 Wavetable 합성방식의 하드웨어 신디사이저를 소프트웨어 신디사이저로 만들면 특성상 샘플러로 분류할 수도 있다. 그러나 이렇게 만들면 샘플 용량이 잘 해야 수 MB에서 수십 MB 밖에 안된다.

또한 당연히, 기존에 존재하던 하드웨어 샘플러의 소프트웨어 버젼도 존재한다.

=== 리듬/[[드럼머신]] ===
[[드럼]], [[타악기]] 전문 소프트웨어 신디사이저이다. 기본적으로 소리를 내는 기능 이외에 많은 양의 드럼 패턴을 가지고 있으며, 패턴을 정해서 순서대로 배열하는 것 만으로 손쉽게 사용할 수 있도록 된 것이 많다. [[Logic Pro|로직]] 내부의 Ultrabeats, FXpansion의 BFD 시리즈 같은 것이 있다.

=== Physical Modeling ===
기존에 존재하던 악기를 공학적인 방법을 사용하여 수학적으로 특성을 모델링하여 재현하는 방식을 소프트웨어로 구현한 것이다. 자세한 것은 [[신디사이저/합성방식]]을 참고하라. 어쿠스틱 악기 재현에는 위의 샘플러와 함께 가장 탁월한 방식으로 인식되고 있다.  

=== Mobile Software Synthesizer ===
구동 환경이 말 그대로 [[스마트폰]], [[태블릿 컴퓨터]]에서 실행되면 이렇게 분류한다. 환경의 특성상 [[iOS]]에서 구동되는 것이 많다. 장난감 같은 것에서, [[조던 루데스]] 같은 레전드급 프로 뮤지션이 공연에서 한 두번 사용도 아닌 애용할 정도로 완성도가 높은 것까지 온갖 것이 존재한다.

=== 그 밖에 ===
여러가지 다양한 방식이 존재한다. 주파수 도메인에서 합성하는 방식, 아예 사용자가 여러 컴포넌트를 조합하거나 스크립트로 프로그래밍을 하여 사용자에게 극도의 자유도를 주는 방식 등 말 그대로 한계가 안보인다. 

일본에서 발매된 [[보컬로이드]] 또한 음성을 합성하여 노래를 만들기 때문에 소프트웨어 신디사이저의 일종으로 분류되기도 한다.

== 소프트웨어 신디사이저/가상악기 인터페이스 규격 ==
[[VST]] 이후, 여러 회사에서 우후죽순격으로 자사의 시퀀서 또는 [[DAW]] 프로그램 전용으로 비슷한 규격을 내놓았지만 최종적으로 다음의 목록에 있는 것들이 살아남았으며, [[오픈소스]] 진영에서 제정된 규격도 있다.

이 인터페이스 규격은 소프트웨어 신디사이저와 함께 오디오 신호를 처리하는 소프트웨어 이펙터를 위해 제정된 것들이다. 

 * Steinberg
  * [[VST]]: 사실상의 업계 표준 규격. [[Windows]], [[Mac OS X]], [[Linux]]에서 지원된다. 이를 지원하지 않는 [[DAW]] 소프트웨어는 [[Logic]], GarageBand 정도밖에 없다. ~~[[어른의 사정]]~~
 * [[wiki:"애플(기업)" Apple]]
  * AU: Audio Unit. [[Mac OS X]] 전용이다. 그럴 수 밖에 없는 것이, [[Mac OS X]] 의 디지털 오디오 [[API]]인 Core Audio의 플러그인 규격이기 때문이다. 따라서 [[매킨토시]] 에서만큼은 가장 확실한 표준 규격. 
 * Digidesign/Avid: [[Pro Tools]]에서 사용하는 그것. [[Windows]], [[Mac OS X]] 모두 지원한다.
  * TDM 
  * RTAS 
  * AAX
 * [[Microsoft]]
  * DXi 플러그인: [[wiki:"DirectX" '''D'''irect'''X''']] '''i'''nstrument. 가상이펙터용 규격은 DX 플러그인. 당연히 [[Windows]] 전용이다. [[DAW]] 소프트웨어 중에서는 Cakewalk [[wiki:"Sonar" SONAR]]가 이것을 지원한다.
 * [[오픈소스]] / [[Linux]] 진영
  * DSSI
  * LADSPA
  * LV2

[[오픈소스]], [[Linux]] 진영이 VST 가 아닌 자체적인 API 표준을 제정한 데에는 이유가 있다. [[VST]] 가 사실상 업계의 표준으로 매우 널리 쓰임에도 불구하고 그 개발 라이센스 자체는 Steinberg에 귀속되어 있기 떼문에, VST 형식으로 생성된 [[파일]]의 배포는 문제가 되지 않지만, VST 또는 VST를 불러다 쓰는 호스트의 소스코드를 배포하면, 어떠한 방법으로든 최종적으로 Steinberg에서 제공하는 [[SDK]]를 가져다 쓰지 않으면 컴파일을 할 수 없게 되며, 이렇게 만들어진 프로그램을 배포하면 당연히 Steinberg에서 정한 라이선스 약관의 적용을 받게 된다. 이는 [[오픈소스]] 진영, [[GNU]]의 철학과 어긋난다.  

그래서 오픈소스 [[DAW]] 프로그램인 LMMS의 경우, Linux에서 실행될 때, VST는 [[wiki:와인(소프트웨어)" Wine]]으로 Windows용을 구동하고 이를 VeSTige 라는 플러그인을 사용하여 연결하는 방식을 취하고 있다. 이렇게 에뮬레이터를 통해서 Windows용 VST를 구동하는 탓에 불안정한 모습을 보일때가 종종 있다.

[[Linux]] 진영에는 공식적으로 LADSPA라는 소프트웨어 신디사이저/이펙터 플러그인 [[API]] 규격이 존재한다. 많이 활성화되지는 않았지만 최소한으로 필요한 만큼의 소프트웨어 신디사이저, 이펙터 프로그램이 존재하며, [[오픈소스]]로 배포되는 [[MIDI]] 시퀀서, [[DAW]], 기타 음악 제작 프로그램은 대부분 이것을 지원하고, 이 규격의 가상악기 또는 가상 이펙터를 하나 이상은 탑재하고 발표된다.

LMMS에 포함된 많은 소프트웨어 신디사이저, 이펙터들 중 제작진들이 어느 정도 안정되었다고 판단되는 것들은 테스트를 마치고 VST 로 만들어진 것들도 존재한다. LMMS 이외에도 Ardour 등에서도 관련 [[플러그인]]을 개발해서 VST 로 만들고 있다.

== 가장 흔하게 접할 수 있는 소프트웨어 신디사이저 ==
=== S-YXG 시리즈 ===
[[YAMAHA]]에서 제작한 소프트웨어 신디사이저. [[Windows]] 98 시대에 등장하여 '이런 것이 가능하구나!!' 라고 [[충공깽]]을 선사한 물건이다. 최초 등장이 Windows 98 에서였으니 만큼 초기에는 VxD 형태로 제공되었다. 

[[Windows XP]] 에는 S-YXG50이 추가 업데이트로 제공되어서 Windows Update를 통해 설치할 수 있었다. ~~문제는 이것을 알고 있는 사람이 거의 없었다는 것. 그래서 그런지 욕을 별로 안먹었다.~~ 역시나 WDM 형태로 되어 있어서 Latency에 대해서는 [[답이 없다]].

최종 버젼인 S-YXG100Plus 에는 1990년대 중반에 출시된 Physical Modeling 방식의 Virtual Acoustic 음원도 탑재되어 있었다. ~~이걸 XP로 이식했어야지 이 나쁜 놈들아!!~~

[[Windows Vista]], [[Windows 7]], [[Windows 8]]에서는 기본적으로 사용할 수 없으나 VSTi 호스트 드라이버를 이용하여 비슷하게 구현할 수 있다.[http://www.mudlord.info/crap/audio/vstmididrv.exe #][http://www.mudlord.info/temp/yamaha_xgvst.zip S-YXG50 VST][* [[Windows 8.1]]에서도 동작은 하나 '''잦은 [[블루스크린]]을 유발한다.''']

=== [[Microsoft]] GS Wavetable SW Synth ===
윈도우98 SE[* 윈도우98 SE에서는 일부 WDM드라이버(ESS계열 또는 YAMAHA OPL3 sAx 사운드카드 등)에서 지원하였으나 2000/ME, 그 이후버전에서는 대부분의 사운드 카드를 지원한다. 이는 자체 내장된 모든 드라이버가 WDM드라이버로 변경되었기에 가능했다.]때부터 내장된 바로 그것이다. 1996년에 Roland에서 라이센스를 받아서 [[사운드 캔버스]]의 음원을 내장하여 탄생한 물건. 

WDM으로 되어있어서 연주용으로는 사용할 수 없는 500ms 수준의 지연이 발생하기 때문에 나름 꽤 욕을 먹는 물건이다. 보통 아무리 못해도 3ms 이내로 지연이 발생해야 연주를 수월하게 할 수 있으며, 10ms 대도 좀 위험하다. 그런데 500ms 라니!! 그리고 잘 몰랐겠지만 이 후진 것이 [[DirectX]]의 구성 요소 중 하나이다. 그리고 비스타, 7, 8에서는 '''일부 악기 소리가 들리지 않는 현상'''이 있다.

왠지 같은 데이터를 사용하는 [[Virtual Sound Canvas]] 소리가 더 좋게 들린다. ~~기분탓만은 분명 아닐텐데...~~

=== QuickTime Music Synthesizer / DLSMusicDevice ===
[[Mac OS X]] 등장 이전에는 QuickTime의 일부였으며, [[Mac OS X]] 등장 이후에는 기본으로 내장되는 소프트웨어 신디사이저이다. 1997년에 역시 Roland한테서 라이센스를 받아서 [[사운드 캔버스]]의 음원을 사용했다. 이쪽은 AU 형태로 제공된다.

=== WinGroove ===
윈도우 3.1 때부터 나온 나름 유서깊은 셰어웨어 형태의 소프트웨어 신디사이저이다. 윈도우 XP가 나온 직후까지 나름 끈질기게 개발되었으나, 2002년 이후로 업데이트가 안되고 있다. 

소리 자체는 당시 발매되었던 [[사운드 캔버스]] 시리즈보다 다양한 소리를 가지고 있었다.

1998년에 부정한 방법으로 라이센스 키를 입력하면 임의의 파일을 지우거나 파일시스템을 파괴하는 기능을 넣어 배포하는 극단적인 불법사용 방지 기능이 들어있는 버젼이 유포되는 ~~[[병크]]를 저지른~~ 바람에 일본에서는 나름 악명을 떨쳤다. 제작자인 나카야마 히로키는 부정사용 방지 기능 테스트 버젼을 실수로 잘못 배포한 것으로 해명했다.

=== Creative Labs Synthesizer ===
Sound Blaster를 제작한 Creative Labs의 소프트웨어 신디사이저. 사실 진짜 소프트웨어 신디사이저는 아니고, 해당 사운드 카드에 내장되어 있는 [[FM 음원]]을 고정된 음색으로 설정한 것.

약간 괴랄한 음(...)[* 단 Skyroads 에서는 색다른 음이 나온다.]이 특징이지만 다른 소프트웨어 신시사이저에서 일부 게임을 구동하면 이것 때문에 소리가 안 나오거나 밸런스가 어긋난다(…).

=== VirtualMIDISynth ===
프리웨어 소프트웨어 신디사이저.
[http://coolsoft.altervista.org/en/virtualmidisynth 사이트]
위의 S-YXG나 Virtual Sound Canvas는 XP시절까지만 내놓고 그이후로는 후속지원을 안하다보니 비스타나 윈도우 7에서는 쓰기가힘든데 그 대체품으로 쓰기 좋은 프로그램이다. 단점은 사운드폰트를 따로 내장하지는 않았다보니 유저가 찾아다가 넣어야하지만 장점은 사운드폰트만 구하면 같은미디파일도 다르게 들어볼수있다.(물론 전문 유료 소프트웨어 신디사이저에서는 당연히 지원하는 기능이지만 프리웨어중에서 업데이트가 가장 잘되는건 이 프로그램이다.)
[https://sites.google.com/site/propws/soundfont 사운드폰트링크사이트]

== Latency(지연) ==
이러한 소프트웨어 신디사이저가 동작하려면, 컴퓨터 내부에서 음을 합성하는 즉시 실시간으로 오디오 신호를 출력하여 [[사운드 카드]]에 전달할 수 있어야 한다. [[Mac OS X]]는 이런 부분을 노리고 애초에 Core Audio를 설계했고, [[Linux]]는 노리지는 않았지만 이러한 부분에 문제가 없다. 그러나 [[Windows]]에는 문제가 있으며, 이를 [[ASIO]]로 해결했다.

[[ASIO]]를 사용하면, [[Windows]]에서 일반적으로 300 ~ 500 ms 에 달하는 지연시간을 보통 3 ~ 5 ms 까지 줄일 수 있게 되며 (즉, 웬만해서는 느낄 수 없는 수준까지 줄어든다), 극단적으로 좋은 경우, 1 ms 이하로 줄일수도 있다!!

[[ASIO]]를 사용하게 되면 샘플 버퍼 용량을 설정하게 되는데, 당연히 버퍼의 용량이 작으면 지연 시간이 줄어들고, 버퍼 용량이 커지면 지연 시간이 증가한다. 따라서 버퍼 용량을 최소한으로 설정하면 좋을 것 같지만 항상 그렇지는 않다. CPU에 부하가 많이 걸렸을 때, 버퍼 용량이 적으면 말 그대로 음이 뚝 뚝 끊어지면서 제대로 재생을 할 수 없기 때문이다. 따라서 상황에 따라 [[적절한]] 버퍼 용량을 설정해서 사용해야 한다.

[[Windows]]에서 [[ASIO]]를 적용하려면, ASIO를 지원하는 [[사운드 카드]] 또는 오디오 인터페이스를 구입하거나, 가상 [[ASIO]] 드라이버를 설치하는 두 가지 방법이 있다. 자세한 것은 [[ASIO]] 항목을 참조하라.

== 여담: [[Mac OS X]]와 [[iOS]]의 강력한 음악적 지원 ==
[[Mac OS X]]에서는 [[ASIO]]가 별도로 필요 없는 것이, 운영체제에서 제공하는 오디오 API인 Core Audio가 애초에 지연없는 실시간 오디오 데이터 송수신을 지원하도록 설계되었다.

또한 [[Mac OS X]]는 운영체제 레벨에서 시스템 플러그인 형태로 Audio Unit이라는 소프트웨어 신디사이저/소프트웨어 이펙터 기능을 지원한다. 그리고 기본적인 이펙트, 분산처리 지원, GS를 지원하는 소프트웨어 신디사이저/소프트웨어 이펙터가 운영체제에 내장되어 있다.

[[wiki:"애플(기업)" Apple]]은 Mac Compliant 프로그램을 운용하여, 이 표준을 지키면 별도의 드라이버가 필요없이  꼽는대로 바로 MIDI 인터페이스, 오디오 인터페이스가 인식되도록 해놓았다. 이 부분은 [[iOS]]에도 적용되어, Mac Compliant 가 적용된 USB MIDI 인터페이스, 컨트롤러, 오디오 인터페이스는 카메라 커넥션 킷을 사용하여 [[iPhone]], [[iPad]] 또는 [[iPod touch]]에 연결하면 바로 인식된다. ~~USB 파워 공급이 딸려서 Powered USB Hub를 사용해야 하는 점은 함정이다.~~ 물론, [[wiki:"애플(기업)" Apple]]은 [[iOS]]에서도 운영체제 레벨에서 시스템 플러그인 형태로 Audio Unit을 지원한다. 사실 Mac OS X 와 iOS의 Core Audio, Core MIDI는 구조적으로 거의 차이가 없다.

이러한 배경에서 이것이 가능해진다. [[iPhone]], [[iPad]] 또는 [[iPod touch]]에서 구동되는 Core MIDI 입력을 지원하는 소프트웨어 신디사이저를 실행하고, 이를 Mac OS X 가 실행되는 컴퓨터에서 MIDI Network Session 을 사용할 장비로 추가하기만 하면, 바로 컴퓨터와 연결된 [[DAW]] 또는 [[MIDI Keyboard Controller]]와 같은 장치로 휴대기기에서 실행되는 소프트웨어 신디사이저를 연주할 수 있다. 역으로 Core MIDI 출력을 지원하는 프로그램을 사용하여 터치스크린 조작을 통해 [[MIDI]] 신호를 보내면 컴퓨터로 바로 수신된다!!

아직까지 Core Audio를 통한 오디오 데이터가 전송되지 않지만, 휴대기기에서 실행되는 소프트웨어 신디사이저도 아무런 추가 프로그램이 필요없이 [[DAW]]에서 사용하거나 연주할 수 있게 되는 것이다. ~~[[믹서]]가 필요하게 될 것이야~~

== 참조항목 ==
 * [[전자음악]]
 * [[컴퓨터 음악]]
 * [[https://mirror.enha.kr/wiki/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EB%AA%A9%EB%A1%9D#s-14 음악 작곡 프로그램]]
 * [[신디사이저]]
 * [[MAX/MSP]]
 * [[미디어아트]]
